[project]
name = "async-selective-queue"
version = "0.1.1.post0"
description = "Async queue with selective retrieval"
authors = [
    {name = "Daniel Bluhm", email = "dbluhm@pm.me"},
]
dependencies = []
requires-python = "<4.0,>=3.9"
readme = "README.md"
license = {text = "Apache-2.0"}
keywords = ["async", "queue", "conditional"]

[project.urls]
homepage = "https://github.com/dbluhm/async-selective-queue"

[project.packages]
source = "async_selective_queue"

[dependency-groups]
dev = [
    "pre-commit>=3.5.0",
    "pytest-ruff>=0.1.1",
    "pytest<8.0.0,>=7.1.2",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.11.9",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["async_selective_queue.py"]

[tool.hatch.build.targets.sdist]
only-include = ["async_selective_queue.py"]

[tool.pytest.ini_options]
addopts = "--cov async_selective_queue"

[tool.ruff]
line-length = 90
extend-exclude = ["example*.py"]

[tool.ruff.lint]
select = ["E", "F", "C", "D", "TID"]
ignore = [
    # Google Python Doc Style
    "D203", "D204", "D213", "D215", "D400", "D401", "D404", "D406", "D407",
    "D408", "D409", "D413",
    "D202", # Allow blank line after docstring
]
per-file-ignores = {"**/{tests}/*" = ["F841", "D", "E501"]}

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "@abstract"]
precision = 2
show_missing = true

[tool.coverage.run]
branch = true
