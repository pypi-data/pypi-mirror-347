# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ..core.serialization import FieldMetadata
from .workflow_run import WorkflowRun


class RunWorkflowResponse(UniversalBaseModel):
    success: bool
    workflow_runs: typing_extensions.Annotated[typing.List[WorkflowRun], FieldMetadata(alias="workflowRuns")] = (
        pydantic.Field()
    )
    """
    An array of WorkflowRun objects, with each WorkflowRun corresponding to a single File that was passed in.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .extraction_field import ExtractionField  # noqa: E402, F401, I001

update_forward_refs(RunWorkflowResponse)
