# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class BatchProcessorRunOptions(UniversalBaseModel):
    """
    The options for the batch processor run.
    """

    fuzzy_match_fields: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="fuzzyMatchFields")
    ] = pydantic.Field(default=None)
    """
    The fields that were fuzzy matched.
    """

    exclude_fields: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="excludeFields")
    ] = pydantic.Field(default=None)
    """
    The fields that were excluded from the run.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
