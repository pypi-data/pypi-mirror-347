tests\test_db.py:317: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\runneradmin\AppData\Roaming\Python\Python311\site-packages\fractalshades\core.py:868: in save_db
    self.process(mode=mode, postdb_layer=postdb_layer)
C:\Users\runneradmin\AppData\Roaming\Python\Python311\site-packages\fractalshades\core.py:313: in process
    self.open_any_db(mode, postdb_layer)
C:\Users\runneradmin\AppData\Roaming\Python\Python311\site-packages\fractalshades\core.py:980: in open_any_db
    self.open_db()
C:\Users\runneradmin\AppData\Roaming\Python\Python311\site-packages\fractalshades\core.py:1037: in open_db
    _mmap_db = open_memmap(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

filename = 'D:\\a\\Fractalshades\\Fractalshades\\tests\\_temporary_data\\_db_dir\\layers.db'
mode = 'w+', dtype = dtype('float32'), shape = (9, 1200, 1200)
fortran_order = False, version = None

    def open_memmap(filename, mode='r+', dtype=None, shape=None,
                    fortran_order=False, version=None):
        """
        Open a .npy file as a memory-mapped array.
    
        This may be used to read an existing file or create a new one.
    
        Parameters
        ----------
        filename : str or path-like
            The name of the file on disk.  This may *not* be a file-like
            object.
        mode : str, optional
            The mode in which to open the file; the default is 'r+'.  In
            addition to the standard file modes, 'c' is also accepted to mean
            "copy on write."  See `memmap` for the available mode strings.
        dtype : data-type, optional
            The data type of the array if we are creating a new file in "write"
            mode, if not, `dtype` is ignored.  The default value is None, which
            results in a data-type of `float64`.
        shape : tuple of int
            The shape of the array if we are creating a new file in "write"
            mode, in which case this parameter is required.  Otherwise, this
            parameter is ignored and is thus optional.
        fortran_order : bool, optional
            Whether the array should be Fortran-contiguous (True) or
            C-contiguous (False, the default) if we are creating a new file in
            "write" mode.
        version : tuple of int (major, minor) or None
            If the mode is a "write" mode, then this is the version of the file
            format used to create the file.  None means use the oldest
            supported version that is able to store the data.  Default: None
    
        Returns
        -------
        marray : memmap
            The memory-mapped array.
    
        Raises
        ------
        ValueError
            If the data or the mode is invalid.
        OSError
            If the file is not found or cannot be opened correctly.
    
        See Also
        --------
        numpy.memmap
    
        """
        if isfileobj(filename):
            raise ValueError("Filename must be a string or a path-like object."
                             "  Memmap cannot use existing file handles.")
    
        if 'w' in mode:
            # We are creating the file, not reading it.
            # Check if we ought to create the file.
            _check_version(version)
            # Ensure that the given dtype is an authentic dtype object rather
            # than just something that can be interpreted as a dtype object.
            dtype = numpy.dtype(dtype)
            if dtype.hasobject:
                msg = "Array can't be memory-mapped: Python objects in dtype."
                raise ValueError(msg)
            d = dict(
                descr=dtype_to_descr(dtype),
                fortran_order=fortran_order,
                shape=shape,
            )
            # If we got here, then it should be safe to create the file.
>           with open(os_fspath(filename), mode+'b') as fp:
E           OSError: [Errno 22] Invalid argument: 'D:\\a\\Fractalshades\\Fractalshades\\tests\\_temporary_data\\_db_dir\\layers.db'

C:\hostedtoolcache\windows\Python\3.11.6\x64\Lib\site-packages\numpy\lib\format.py:860: OSError
