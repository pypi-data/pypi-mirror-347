#pragma once

#define ASGARD_VERSION_MAJOR @asgard_VERSION_MAJOR@
#define ASGARD_VERSION_MINOR @asgard_VERSION_MINOR@
#define ASGARD_VERSION_PATCH @asgard_VERSION_PATCH@
#define ASGARD_VERSION "@asgard_VERSION@"

#define GIT_BRANCH "@GIT_BRANCH@"
#define GIT_COMMIT_HASH "@GIT_COMMIT_HASH@"
#define GIT_COMMIT_SUMMARY "@GIT_COMMIT_SUMMARY@"
#define BUILD_TIME "@BUILD_TIME@"

#cmakedefine ASGARD_USE_HIGHFIVE
#cmakedefine ASGARD_USE_TIMER
#cmakedefine ASGARD_USE_FLOPCOUNTER
#cmakedefine ASGARD_USE_CUDA
#cmakedefine ASGARD_USE_ROCM
#cmakedefine ASGARD_USE_GPU_MEM_LIMIT
#cmakedefine ASGARD_USE_OPENMP
#cmakedefine ASGARD_USE_MPI
#cmakedefine ASGARD_ENABLE_FLOAT
#cmakedefine ASGARD_ENABLE_DOUBLE

#cmakedefine ASGARD_SCRIPTS_DIR "@ASGARD_SCRIPTS_DIR@"
#cmakedefine ASGARD_GOLD_BASE_DIR "@ASGARD_GOLD_BASE_DIR@"

#define ASGARD_MAX_NUM_GPUS @ASGARD_MAX_NUM_GPUS@

#define ASGARD_NUM_GPU_BLOCKS @ASGARD_NUM_GPU_BLOCKS@
#define ASGARD_NUM_GPU_THREADS @ASGARD_NUM_GPU_THREADS@

#define ASGARD_NUM_QUADRATURE @ASGARD_NUM_QUADRATURE@

// enable arch agnostic GPU capabilities
#ifdef ASGARD_USE_CUDA
#define ASGARD_USE_GPU
#endif
#ifdef ASGARD_USE_ROCM
#define ASGARD_USE_GPU
#endif

// fixed variables, maybe adjust later using CMake
// for now, we can keep project-wide constants here
namespace asgard
{
/*!
 * Small scratch-space arrays are needed in many places in the code,
 * it is better to allocate those as std::array, thus avoid runtime
 * allocation and the heap altogether.
 * However, we need to know the size which is unknown until runtime.
 * This is a workaround that lets us have a max size.
 */
inline constexpr int max_num_dimensions = 6;

inline constexpr int max_num_gpus = ASGARD_MAX_NUM_GPUS;
}
