Metadata-Version: 2.4
Name: fated
Version: 0.2.1
Summary: A Python library for adding visual effects to terminal text output
Author-email: Fred <fredised@users.noreply.github.com>
Project-URL: Homepage, https://github.com/fredised/fated
Project-URL: Bug Tracker, https://github.com/fredised/fated/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing :: General
Classifier: Intended Audience :: Developers
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: build>=1.1.1
Requires-Dist: setuptools>=68.0.0
Requires-Dist: twine>=4.0.2
Dynamic: license-file

# Fated - Text Effects Library for Python

Fated is a Python library that adds visual effects to text output including typewriter animation and other text styling options. It provides a simple API for creating rich, animated terminal text with no external dependencies.

## Features

- **Text Animation Effects**: Typewriter, blink, fade-in, wave, glitch, shake, matrix, and more
- **Text Styling**: Colors, background colors, bold, italic, underline, and other text styles
- **Chainable Effects**: Combine multiple effects together seamlessly
- **Simple API**: Intuitive interface that works with standard print function
- **Alternative Syntax**: Use the + operator with shortcut objects for even cleaner code
- **No Dependencies**: Uses only Python standard library modules

## Installation

Install directly from PyPI using pip:

```bash
pip install fated
```

Alternative installation methods:

1. Clone the repository and include the `fate` folder in your project:

```bash
git clone https://github.com/fredised/fated.git
```

2. Or simply copy the `fate` directory to your project.

## Usage

### Traditional Syntax

```python
from fate import typewriter, color, style

# Simple typewriter effect
print(typewriter("Hello, World!"))

# Colored text
print(color.red("This text is red"))
print(color.blue("This text is blue"))

# Text styling
print(style.bold("Bold text"))
print(style.italic("Italic text"))

# Chain multiple effects
print(style.bold(color.green(typewriter("Bold green typewriter text"))))

# Predefined combinations
from fate import error, warning, success, info
print(error("Error message"))
print(success("Success message"))
```

### Shortcut Syntax (New!)

```python
from fate.shortcuts import fateTypeWriter, fateRed, fateBold

# Use the + operator
print(fateTypeWriter + "Hello, World!")

# Colored text
print(fateRed + "This text is red")

# Text styling
print(fateBold + "Bold text")

# Custom parameters
print(fateTypeWriter(speed=20) + "Fast typing!")

# Predefined combinations
from fate.shortcuts import fateError, fateSuccess
print(fateError + "Error message")
print(fateSuccess + "Success message")
```

## Examples

The repository includes example files:

- `examples.py` - Demonstrates the traditional syntax
- `shortcut_example.py` - Demonstrates the new shortcut syntax

Run the examples to see the library in action:

```bash
python examples.py
python shortcut_example.py
```

## Available Effects

- `typewriter` - Types text character by character
- `blink` - Makes text blink
- `fade_in` - Gradually reveals text
- `wave` - Creates a wave-like animation
- `glitch` - Creates a glitchy, distorted effect
- `shake` - Shakes the text
- `rainbow` - Cycles through rainbow colors
- `typing_with_errors` - Realistic typing with random errors
- `matrix_effect` - Matrix-like falling character effect
- `slide_in` - Slides text in from left or right
- `reveal_masked` - Reveals masked text character by character
