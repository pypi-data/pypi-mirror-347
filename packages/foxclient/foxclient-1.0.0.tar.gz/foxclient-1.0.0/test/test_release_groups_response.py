# coding: utf-8

"""
    Fox API

     Warning: Please add a custom 'X-FoxAPI-App=MyAppName' header to your requests. This would help us fighting against DDoS attacks in future, while keeping your application's access to the API. In future, this may be a mandatory requirement.  To reduce the system load, the API endpoints are rate limited. The default limit is 20 requests per minute. Contact admin@orangefox.tech if you need a higher limit.  The requests may be logged for analytics and development purposes. 

    The version of the OpenAPI document: 5.1.1
    Contact: admin@orangefox.tech
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from foxclient.models.release_groups_response import ReleaseGroupsResponse

class TestReleaseGroupsResponse(unittest.TestCase):
    """ReleaseGroupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReleaseGroupsResponse:
        """Test ReleaseGroupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReleaseGroupsResponse`
        """
        model = ReleaseGroupsResponse()
        if include_optional:
            return ReleaseGroupsResponse(
                data = {
                    'key' : [
                        foxclient.models.release_response.ReleaseResponse(
                            _id = '', 
                            size = 56, 
                            id = '', 
                            build_id = '', 
                            filename = '', 
                            variant = '', 
                            device_id = '', 
                            date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            md5 = '', 
                            version = '', 
                            type = 'stable', 
                            maintainer_id = '', 
                            archived = True, 
                            recovery_img = foxclient.models.recovery_img_response.RecoveryImgResponse(
                                size = 56, 
                                md5 = '', ), 
                            changelog = [
                                ''
                                ], 
                            bugs = [
                                ''
                                ], 
                            notes = '', 
                            url = '', 
                            mirrors = {
                                'key' : ''
                                }, )
                        ]
                    }
            )
        else:
            return ReleaseGroupsResponse(
                data = {
                    'key' : [
                        foxclient.models.release_response.ReleaseResponse(
                            _id = '', 
                            size = 56, 
                            id = '', 
                            build_id = '', 
                            filename = '', 
                            variant = '', 
                            device_id = '', 
                            date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            md5 = '', 
                            version = '', 
                            type = 'stable', 
                            maintainer_id = '', 
                            archived = True, 
                            recovery_img = foxclient.models.recovery_img_response.RecoveryImgResponse(
                                size = 56, 
                                md5 = '', ), 
                            changelog = [
                                ''
                                ], 
                            bugs = [
                                ''
                                ], 
                            notes = '', 
                            url = '', 
                            mirrors = {
                                'key' : ''
                                }, )
                        ]
                    },
        )
        """

    def testReleaseGroupsResponse(self):
        """Test ReleaseGroupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
