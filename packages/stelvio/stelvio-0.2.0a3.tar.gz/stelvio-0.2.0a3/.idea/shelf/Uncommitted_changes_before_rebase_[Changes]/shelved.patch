Index: tests/aws/test_function_config.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pytest\nfrom stelvio.aws.function import FunctionConfig\n\n\n@pytest.mark.parametrize(\n    \"handler\",\n    [\n        \"missing_dot\",\n        \"file.\",\n        \"file..\",\n        \".function\",\n        \"file..function\",\n    ],\n)\ndef test_function_config_invalid_handler_format(handler):\n    with pytest.raises(ValueError):\n        FunctionConfig(handler=handler)\n\n\ndef test_function_config_folder_handler_conflict():\n    with pytest.raises(\n        ValueError, match=\"Cannot specify both 'folder' and use '::' in handler\"\n    ):\n        FunctionConfig(handler=\"folder::file.function\", folder=\"another_folder\")\n\n\ndef test_function_config_invalid_folder_path():\n    with pytest.raises(ValueError):\n        FunctionConfig(handler=\"file.function\", folder=\"path.with.dots\")\n\n\n@pytest.mark.parametrize(\n    \"handler, folder\",\n    [\n        (\"file.function\", None),\n        (\"folder::file.function\", None),\n        (\"file.function\", \"my_folder\"),\n    ],\n)\ndef test_function_config_valid_config(handler, folder):\n    # Should not raise any exception, remove src\n    FunctionConfig(handler=handler, folder=folder)\n\n\n@pytest.mark.parametrize(\n    \"handler, folder, expected_value\",\n    [\n        (\"file.function\", None, False),\n        (\"folder::file.function\", None, True),\n        (\"file.function\", \"my_folder\", True),\n    ],\n)\ndef test_function_config_has_folder(handler, folder, expected_value):\n    config = FunctionConfig(handler=handler, folder=folder)\n    assert config.has_folder is expected_value\n\n\n@pytest.mark.parametrize(\n    \"handler, expected_file_path\",\n    [\n        (\"file.function\", \"file\"),\n        (\"folder::file.function\", \"file\"),\n        (\"path/to/file.function\", \"path/to/file\"),\n    ],\n)\ndef test_function_config_handler_file_path(handler, expected_file_path):\n    config = FunctionConfig(handler=handler)\n    assert config.handler_file_path == expected_file_path\n\n\n@pytest.mark.parametrize(\n    \"handler, expected_function_name\",\n    [\n        (\"file.function\", \"function\"),\n        (\"folder::file.function\", \"function\"),\n    ],\n)\ndef test_function_config_handler_function_name(handler, expected_function_name):\n    config = FunctionConfig(handler=handler)\n    assert config.handler_function_name == expected_function_name\n\n\n@pytest.mark.parametrize(\n    \"handler, expected_handler_format\",\n    [\n        (\"file.function\", \"file.function\"),\n        (\"folder::file.function\", \"file.function\"),\n    ],\n)\ndef test_function_config_handler_format(handler, expected_handler_format):\n    config = FunctionConfig(handler=handler)\n    assert config.handler_format == expected_handler_format\n\n\ndef test_function_config_src_and_folder_conflict():\n    with pytest.raises(TypeError):  # update exception\n        FunctionConfig(\n            handler=\"file.function\", folder=\"my_folder\", src=\"my_src\"\n        )  # remove src\n\n\ndef test_function_config_src_valid():\n    pass\n    # with pytest.raises(TypeError):  # update exception\n    #    FunctionConfig(handler=\"file.function\", src=\"my_folder\")  # remove src\n\n\ndef test_function_config_default_values():\n    config = FunctionConfig(handler=\"file.function\")\n    assert config.memory_size == None\n    assert config.timeout == None\n    assert config.runtime == \"python3.12\"  # Assuming python3.12 is the default\n\n\ndef test_function_config_immutability():\n    config = FunctionConfig(handler=\"file.function\")\n    with pytest.raises(AttributeError):\n        config.handler = \"another.function\"\n\n\ndef test_function_config_memory_size_type_validation():\n    with pytest.raises(ValueError, match=\"memory_size must be an integer\"):\n        FunctionConfig(handler=\"file.function\", memory_size=\"512\")  # type: ignore\n\n\ndef test_function_config_timeout_type_validation():\n    with pytest.raises(ValueError, match=\"timeout must be an integer\"):\n        FunctionConfig(handler=\"file.function\", timeout=\"30\")  # type: ignore\n
===================================================================
diff --git a/tests/aws/test_function_config.py b/tests/aws/test_function_config.py
--- a/tests/aws/test_function_config.py	(revision d2642033726c5c8725bc205d30fdac95cb0c3d00)
+++ b/tests/aws/test_function_config.py	(date 1739300660453)
@@ -109,7 +109,6 @@
     config = FunctionConfig(handler="file.function")
     assert config.memory_size == None
     assert config.timeout == None
-    assert config.runtime == "python3.12"  # Assuming python3.12 is the default
 
 
 def test_function_config_immutability():
