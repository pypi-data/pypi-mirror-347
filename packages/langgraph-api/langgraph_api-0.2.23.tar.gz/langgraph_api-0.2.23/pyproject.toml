[tool.poetry]
name = "langgraph-api"
version = "0.2.23"
description = ""
authors = [
    "Nuno Campos <nuno@langchain.dev>",
    "Will Fu-Hinthorn <will@langchain.dev>",
]
license = "Elastic-2.0"
packages = [
    { include = "langgraph_api" },
    { include = "langgraph_runtime" },
    { include = "langgraph_license" },
]
readme = "README.md"
include = [
    { path = "openapi.json", format = [
        "sdist",
        "wheel",
    ] },
    { path = "logging.json", format = [
        "sdist",
        "wheel",
    ] },
    { path = "LICENSE", format = [
        "sdist",
        "wheel",
    ] },
]

[tool.poetry.scripts]
langgraph-verify-graphs = "langgraph_api.graph:verify_graphs"

[tool.poetry.dependencies]
python = ">=3.11"
sse-starlette = ">=2.1.0,<2.2.0"
starlette = ">=0.38.6"
watchfiles = ">=0.13"
langgraph = { version = ">=0.3.27", python = "<4.0" }
langgraph-checkpoint = { version = ">=2.0.23", python = "<4.0" }
orjson = ">=3.9.7"
uvicorn = ">=0.26.0"
langsmith = ">=0.1.63"
httpx = ">=0.25.0"
langchain-core = { version = ">=0.2.38", python = "<4.0" }
tenacity = ">=8.0.0"
jsonschema-rs = ">=0.20.0,<0.30"
structlog = ">=24.1.0,<26"
pyjwt = "^2.9.0"
cryptography = ">=42.0.0,<45.0"
langgraph-sdk = { version = "^0.1.66", python = "<4.0" }
cloudpickle = "^3.0.0"
langgraph-runtime-inmem = ">=0.0.9,<0.1"
truststore = ">=0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.7"
codespell = "^2.2.0"
pytest = "^7.4.4"
anyio = "^4.4.0"
pytest-watcher = { version = "^0.4.2", python = "<4.0" }
langgraph-cli = { version = "^0.1.72", python = "<4.0" }
pytest-repeat = "^0.9.3"
pytest-retry = "^1.6.3"
pytest-httpserver = "^1.1.0"
fastapi = "^0.115.8"
langgraph = { version = ">=0.3.34", python = "<4.0" }
pycryptodome = "^3.22.0"
langgraph-runtime-inmem = { path = "../runtime_inmem", develop = true, python = ">=3.11" }
blockbuster = "^1.5.24"

[tool.poetry_bumpversion.file."langgraph_api/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
addopts = "--strict-markers --strict-config --durations=5 -vv"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.select = ["E", "F", "UP", "B", "I"]
lint.ignore = ["E501", "B008"]
target-version = "py311"

[tool.pytest-watcher]
now = true
delay = 3
patterns = ["*.py"]
