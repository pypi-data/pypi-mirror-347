[tool.poetry]
name = "videoipath-automation-tool"
version = "0.2.1.dev168"
description = "A Python package for automating VideoIPath configuration workflows."
authors = ["Paul Winterstein <paul.winterstein@swr.de>"]
maintainers = ["SWR Media-over-IP Team <moip@swr.de>", "Josia Hildebrandt <manuel_josia.hildebrandt@swr.de>"]
readme = "README.md"
packages = [{ include = "videoipath_automation_tool", from = "src" }]
keywords = ["videoipath", "automation", "nevion", "media-over-ip", "st2110", "orchestration"]

[tool.poetry.urls]
Homepage = "https://github.com/SWR-MoIP/VideoIPath-Automation-Tool"
Repository = "https://github.com/SWR-MoIP/VideoIPath-Automation-Tool"
Issues = "https://github.com/SWR-MoIP/VideoIPath-Automation-Tool/issues"
Documentation = "https://github.com/SWR-MoIP/VideoIPath-Automation-Tool#documentation"

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.31.0"
pydantic = "^2.6.4"
pydantic-extra-types = "^2.6.0"
pydantic-settings = "^2.2.1"
typing-extensions = "^4.11.0"
urllib3 = "^2.2.3"
deepdiff = "^8.1.1"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.8.1,<0.12.0"
pre-commit = "^4.0.1"
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
pytest-dotenv = "^0.5.2"

[tool.pytest.ini_options]
addopts = "-x -p no:warnings --cov-report=term --cov-report=term-missing --no-cov-on-fail --cov=src --ignore=__intern"
env_override_existing_values = 0
env_files = ["tests/.env.test"]

[virtualenvs]
in-project = true


[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "tests/**/*.py"]

# Formatter config
line-length = 120

[tool.ruff.lint]
# Linter config
ignore = ["F403", "F405", "E722"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
