[project]
name = "stratafm"
version = "0.1.2"
description = "Strata file manager"
authors = [
    {name = "Linus", email = "impalah@gmail.com"}
]
readme = "README.md"
license = { text = "MIT" }
keywords = ["cloud", "workers", "aws"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Topic :: System :: Distributed Computing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = ">=3.12"

dependencies = [
    "boto3>=1.37.21",
    "loguru>=0.7.3",
    "pybreaker>=1.3.0",
    "pydantic>=2.10.6",
    "pynamodb>=6.0.2",
    "python-dotenv>=1.0.1",
    "svix-ksuid>=0.6.2",
    "tenacity>=9.1.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/strata"]

[project.scripts]
basictest = "strata.just_testing:main"


[dependency-groups]
dev = [
    "bandit>=1.8.3",
    "debugpy>=1.8.13",
    "fastapi>=0.115.11",
    "ipykernel>=6.29.5",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.0",
    "uvicorn>=0.34.0",
]

[tool.ruff]
line-length = 88
src = ["src"]  # First, add the source code folder
target-version = "py312"  # We are using Python 3.12

[tool.ruff.lint]
# Activate additional rules to imitate flake8 and isort
select = [
  "E", "F", "I", "UP", "B", "W", "C90"
]
# Exclude files and folders that are not part of the source code
exclude = ["tests/data", ".venv"]

# Activate autofix for common problems
fixable = ["ALL"]

[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true
pretty = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as an asyncio coroutine",
    "skip_asyncio: mark test to skip asyncio handling"
]



