{
    "tests_by_mangled_function_name": {
        "climatetimer.climatetimer.x\u01c1ClimateTimer\u01c1__init__": [
            "tests/test_climatetimer.py::test_blockid_valid[dt2-quarter]",
            "tests/test_climatetimer.py::test_blockids_invalid_blocktype",
            "tests/test_climatetimer.py::test_blockids_naive_datetime",
            "tests/test_climatetimer.py::test_period_invalid_blocktype[invalid]",
            "tests/test_climatetimer.py::test_period_invalid_block_id_type[None]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[0]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[None]",
            "tests/test_climatetimer.py::test_period_invalid_blocktype[year]",
            "tests/test_climatetimer.py::test_period_invalid_blocktype[millennium]",
            "tests/test_climatetimer.py::test_blockid_naive_datetime",
            "tests/test_climatetimer.py::test_blockid_invalid_blocktype[year]",
            "tests/test_climatetimer.py::test_blockid_negative_kyoto",
            "tests/test_climatetimer.py::test_period_invalid_block_id_type[1000]",
            "tests/test_climatetimer.py::test_blockid_invalid_datetime[1683816600]",
            "tests/test_climatetimer.py::test_blockid_valid[dt0-second]",
            "tests/test_climatetimer.py::test_blockids_invalid_date_range",
            "tests/test_climatetimer.py::test_blockids_invalid_datetime[start_date1-2025-03-05]",
            "tests/test_climatetimer.py::test_blockids_overlap_reference_includes_zero",
            "tests/test_climatetimer.py::test_blockid_invalid_blocktype[decade]",
            "tests/test_climatetimer.py::test_blockids_valid",
            "tests/test_climatetimer.py::test_blockids_invalid_datetime[2025-03-01-end_date0]",
            "tests/test_climatetimer.py::test_blockids_single_block_if_range_short",
            "tests/test_climatetimer.py::test_period_valid[500-week]",
            "tests/test_climatetimer.py::test_blockid_valid[dt3-15m]",
            "tests/test_climatetimer.py::test_blockid_invalid_datetime[2023-05-10T15:30:00]",
            "tests/test_climatetimer.py::test_blockid_valid[dt1-minute]",
            "tests/test_climatetimer.py::test_invalid_reference[2020]",
            "tests/test_climatetimer.py::test_blockid_valid[dt5-day]",
            "tests/test_climatetimer.py::test_invalid_reference[invalid]",
            "tests/test_climatetimer.py::test_initialization_uppercase",
            "tests/test_climatetimer.py::test_info_method",
            "tests/test_climatetimer.py::test_timezone_handling[dt_utc0-dt_ny0]",
            "tests/test_climatetimer.py::test_blockid_invalid_datetime[None]",
            "tests/test_climatetimer.py::test_blockid_negative_paris",
            "tests/test_climatetimer.py::test_initialization",
            "tests/test_climatetimer.py::test_period_valid[1-second]",
            "tests/test_climatetimer.py::test_period_valid[3000-day]",
            "tests/test_climatetimer.py::test_period_valid[1000-minute]",
            "tests/test_climatetimer.py::test_period_valid[100000-hour]",
            "tests/test_climatetimer.py::test_period_valid[50000-15m]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[-1]",
            "tests/test_climatetimer.py::test_invalid_reference[earth]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[string]",
            "tests/test_climatetimer.py::test_blockid_invalid_blocktype[invalid]",
            "tests/test_climatetimer.py::test_period_valid[50000-quarter]",
            "tests/test_climatetimer.py::test_blockid_valid[dt6-week]",
            "tests/test_climatetimer.py::test_blockid_valid[dt4-hour]"
        ],
        "climatetimer.climatetimer.x\u01c1ClimateTimer\u01c1blockid": [
            "tests/test_climatetimer.py::test_blockid_valid[dt2-quarter]",
            "tests/test_climatetimer.py::test_blockid_naive_datetime",
            "tests/test_climatetimer.py::test_blockid_invalid_blocktype[year]",
            "tests/test_climatetimer.py::test_blockid_negative_kyoto",
            "tests/test_climatetimer.py::test_blockid_invalid_datetime[1683816600]",
            "tests/test_climatetimer.py::test_blockid_valid[dt0-second]",
            "tests/test_climatetimer.py::test_blockids_overlap_reference_includes_zero",
            "tests/test_climatetimer.py::test_blockid_invalid_blocktype[decade]",
            "tests/test_climatetimer.py::test_blockids_valid",
            "tests/test_climatetimer.py::test_blockid_valid[dt6-week]",
            "tests/test_climatetimer.py::test_blockids_single_block_if_range_short",
            "tests/test_climatetimer.py::test_blockid_valid[dt3-15m]",
            "tests/test_climatetimer.py::test_blockid_invalid_datetime[2023-05-10T15:30:00]",
            "tests/test_climatetimer.py::test_blockid_valid[dt1-minute]",
            "tests/test_climatetimer.py::test_blockid_valid[dt5-day]",
            "tests/test_climatetimer.py::test_timezone_handling[dt_utc0-dt_ny0]",
            "tests/test_climatetimer.py::test_blockid_invalid_datetime[None]",
            "tests/test_climatetimer.py::test_blockid_negative_paris",
            "tests/test_climatetimer.py::test_blockid_invalid_blocktype[invalid]",
            "tests/test_climatetimer.py::test_blockids_naive_datetime",
            "tests/test_climatetimer.py::test_blockid_valid[dt4-hour]"
        ],
        "climatetimer.climatetimer.x\u01c1ClimateTimer\u01c1period": [
            "tests/test_climatetimer.py::test_period_valid[100000-hour]",
            "tests/test_climatetimer.py::test_period_invalid_blocktype[invalid]",
            "tests/test_climatetimer.py::test_period_invalid_block_id_type[None]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[0]",
            "tests/test_climatetimer.py::test_period_valid[50000-15m]",
            "tests/test_climatetimer.py::test_period_valid[1-second]",
            "tests/test_climatetimer.py::test_period_valid[3000-day]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[None]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[-1]",
            "tests/test_climatetimer.py::test_period_invalid_block_id[string]",
            "tests/test_climatetimer.py::test_period_invalid_blocktype[year]",
            "tests/test_climatetimer.py::test_period_invalid_blocktype[millennium]",
            "tests/test_climatetimer.py::test_period_valid[500-week]",
            "tests/test_climatetimer.py::test_period_valid[1000-minute]",
            "tests/test_climatetimer.py::test_period_valid[50000-quarter]",
            "tests/test_climatetimer.py::test_period_invalid_block_id_type[1000]"
        ],
        "climatetimer.climatetimer.x\u01c1ClimateTimer\u01c1info": [
            "tests/test_climatetimer.py::test_info_method"
        ],
        "climatetimer.climatetimer.x\u01c1ClimateTimer\u01c1blockids": [
            "tests/test_climatetimer.py::test_blockids_invalid_blocktype",
            "tests/test_climatetimer.py::test_blockids_invalid_datetime[start_date1-2025-03-05]",
            "tests/test_climatetimer.py::test_blockids_overlap_reference_includes_zero",
            "tests/test_climatetimer.py::test_blockids_valid",
            "tests/test_climatetimer.py::test_blockids_invalid_datetime[2025-03-01-end_date0]",
            "tests/test_climatetimer.py::test_blockids_single_block_if_range_short",
            "tests/test_climatetimer.py::test_blockids_naive_datetime",
            "tests/test_climatetimer.py::test_blockids_invalid_date_range"
        ]
    },
    "duration_by_test": {
        "tests/test_climatetimer.py::test_initialization": 6.549998943228275e-05,
        "tests/test_climatetimer.py::test_initialization_uppercase": 3.633300366345793e-05,
        "tests/test_climatetimer.py::test_invalid_reference[invalid]": 5.183300527278334e-05,
        "tests/test_climatetimer.py::test_invalid_reference[earth]": 4.2791987652890384e-05,
        "tests/test_climatetimer.py::test_invalid_reference[2020]": 4.762499884236604e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt0-second]": 5.7375000324100256e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt1-minute]": 4.691700451076031e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt2-quarter]": 5.3333002142608166e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt3-15m]": 5.254200368653983e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt4-hour]": 4.583400732371956e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt5-day]": 4.5249995309859514e-05,
        "tests/test_climatetimer.py::test_blockid_valid[dt6-week]": 4.704098682850599e-05,
        "tests/test_climatetimer.py::test_blockid_invalid_blocktype[year]": 6.20420032646507e-05,
        "tests/test_climatetimer.py::test_blockid_invalid_blocktype[decade]": 4.495900066103786e-05,
        "tests/test_climatetimer.py::test_blockid_invalid_blocktype[invalid]": 4.73749969387427e-05,
        "tests/test_climatetimer.py::test_period_valid[1-second]": 4.995899507775903e-05,
        "tests/test_climatetimer.py::test_period_valid[1000-minute]": 4.650000482797623e-05,
        "tests/test_climatetimer.py::test_period_valid[50000-quarter]": 4.762499884236604e-05,
        "tests/test_climatetimer.py::test_period_valid[50000-15m]": 4.6375003876164556e-05,
        "tests/test_climatetimer.py::test_period_valid[100000-hour]": 4.591699689626694e-05,
        "tests/test_climatetimer.py::test_period_valid[3000-day]": 4.937499761581421e-05,
        "tests/test_climatetimer.py::test_period_valid[500-week]": 4.21659933635965e-05,
        "tests/test_climatetimer.py::test_period_invalid_block_id[-1]": 4.370899114292115e-05,
        "tests/test_climatetimer.py::test_period_invalid_block_id[0]": 4.4375003199093044e-05,
        "tests/test_climatetimer.py::test_period_invalid_block_id[string]": 4.333299875725061e-05,
        "tests/test_climatetimer.py::test_period_invalid_block_id[None]": 4.483399970922619e-05,
        "tests/test_climatetimer.py::test_period_invalid_blocktype[year]": 4.512500890996307e-05,
        "tests/test_climatetimer.py::test_period_invalid_blocktype[invalid]": 4.037500184495002e-05,
        "tests/test_climatetimer.py::test_period_invalid_blocktype[millennium]": 4.3207997805438936e-05,
        "tests/test_climatetimer.py::test_blockid_negative_paris": 4.2625004425644875e-05,
        "tests/test_climatetimer.py::test_blockid_negative_kyoto": 4.325000918470323e-05,
        "tests/test_climatetimer.py::test_blockid_naive_datetime": 4.041599459014833e-05,
        "tests/test_climatetimer.py::test_blockid_invalid_datetime[2023-05-10T15:30:00]": 4.570900637190789e-05,
        "tests/test_climatetimer.py::test_blockid_invalid_datetime[1683816600]": 4.004199581686407e-05,
        "tests/test_climatetimer.py::test_blockid_invalid_datetime[None]": 4.2208004742860794e-05,
        "tests/test_climatetimer.py::test_period_invalid_block_id_type[1000]": 4.4082989916205406e-05,
        "tests/test_climatetimer.py::test_period_invalid_block_id_type[None]": 4.441700002644211e-05,
        "tests/test_climatetimer.py::test_info_method": 4.1332998080179095e-05,
        "tests/test_climatetimer.py::test_blockids_valid": 4.1916995542123914e-05,
        "tests/test_climatetimer.py::test_blockids_invalid_date_range": 4.2167011997662485e-05,
        "tests/test_climatetimer.py::test_blockids_naive_datetime": 4.058299236930907e-05,
        "tests/test_climatetimer.py::test_blockids_invalid_datetime[2025-03-01-end_date0]": 4.366699431557208e-05,
        "tests/test_climatetimer.py::test_blockids_invalid_datetime[start_date1-2025-03-05]": 4.591699689626694e-05,
        "tests/test_climatetimer.py::test_blockids_invalid_blocktype": 4.154100315645337e-05,
        "tests/test_climatetimer.py::test_blockids_single_block_if_range_short": 4.233400977682322e-05,
        "tests/test_climatetimer.py::test_blockids_overlap_reference_includes_zero": 4.3916996219195426e-05,
        "tests/test_climatetimer.py::test_timezone_handling[dt_utc0-dt_ny0]": 4.795800487045199e-05
    },
    "stats_time": 0.08122500000000002
}