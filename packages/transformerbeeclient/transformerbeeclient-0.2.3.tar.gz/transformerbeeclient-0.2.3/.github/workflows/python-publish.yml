# This GitHub workflow is only needed for python package releases which are supposed to be published on pypi.
# It requires the Github "environments" feature (see instructions below) it might not be available for private free accounts (but works for public or organization repos).
# After creating the "release" environment in the Github repo settings, you need to enter your Github organization/user name + repo name + "python-publish.yml" workflow file name in the PyPI UI to make this work.

# This workflow uploads a Python Package using Twine when a release is created.
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [ created, edited ]

jobs:
  tests:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ "3.13" ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Log into registry
        # GHCR_PAT is a personal access token for the Github Container Registry; You can create it using the following steps:
        # 1) Go to https://github.com/settings/tokens
        # 2) Create a new token (classic as of 2025-02-02)
        # 3) Select the following scopes: read:packages
        # GHCR_USR is the username for the Github Container Registry; it has to match the PAT and is the username of the Github account that created the PAT
        # You can update the tokens in the repository settings:
        # https://github.com/Hochfrequenz/TransformerBeeClient.py/settings/secrets/actions/GHCR_PAT
        # https://github.com/Hochfrequenz/TransformerBeeClient.py/settings/secrets/actions/GHCR_USR
        # Tokens will expire 2025-02-01
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ secrets.GHCR_USR }} --password-stdin
      - name: Run tests
        env: # this is for the tests with real oauth-checks
          AUTH0_TEST_CLIENT_ID: ${{ secrets.AUTH0_TEST_CLIENT_ID }}
          AUTH0_TEST_CLIENT_SECRET: ${{ secrets.AUTH0_TEST_CLIENT_SECRET }}
        run: |
          tox -e integrationtests

  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ "3.12" ]
        os: [ ubuntu-latest ]
    # Specifying a GitHub environment, # Specifying a GitHub environment, which PyPI strongly recommends: https://docs.pypi.org/trusted-publishers/adding-a-publisher/
    # you have to create an environment in your repository settings and add the environment name here
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    needs: tests # Never ever do we want to release without passing tests.
    # Once your downstream code relies on a broken but released version of a library, you're in trouble.
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[packaging]
      - name: Build wheel and source distributions
        run: |
          python -m build
      - name: Publish distribution üì¶ to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
