{
    "resources": [],
    "tools": [
        {
            "server_url": "",
            "path": "/_search",
            "method": "post",
            "parameters": [
                {
                    "$ref": "#/components/parameters/search-allow_no_indices",
                    "schema": {
                        "in": "query",
                        "name": "allow_no_indices",
                        "description": "If `false`, the request returns an error if any wildcard expression, index alias, or `_all` value targets only missing or closed indices.\nThis behavior applies even if the request targets other open indices.\nFor example, a request targeting `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-allow_partial_search_results",
                    "schema": {
                        "in": "query",
                        "name": "allow_partial_search_results",
                        "description": "If `true` and there are shard request timeouts or shard failures, the request returns partial results.\nIf `false`, it returns an error with no partial results.\n\nTo override the default behavior, you can set the `search.default_allow_partial_results` cluster setting to `false`.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-analyzer",
                    "schema": {
                        "in": "query",
                        "name": "analyzer",
                        "description": "The analyzer to use for the query string.\nThis parameter can be used only when the `q` query string parameter is specified.",
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-analyze_wildcard",
                    "schema": {
                        "in": "query",
                        "name": "analyze_wildcard",
                        "description": "If `true`, wildcard and prefix queries are analyzed.\nThis parameter can be used only when the `q` query string parameter is specified.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-batched_reduce_size",
                    "schema": {
                        "in": "query",
                        "name": "batched_reduce_size",
                        "description": "The number of shard results that should be reduced at once on the coordinating node.\nIf the potential number of shards in the request can be large, this value should be used as a protection mechanism to reduce the memory overhead per search request.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-ccs_minimize_roundtrips",
                    "schema": {
                        "in": "query",
                        "name": "ccs_minimize_roundtrips",
                        "description": "If `true`, network round-trips between the coordinating node and the remote clusters are minimized when running cross-cluster search (CCS) requests.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-default_operator",
                    "schema": {
                        "in": "query",
                        "name": "default_operator",
                        "description": "The default operator for the query string query: `AND` or `OR`.\nThis parameter can be used only when the `q` query string parameter is specified.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.query_dsl.Operator"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-df",
                    "schema": {
                        "in": "query",
                        "name": "df",
                        "description": "The field to use as a default when no field prefix is given in the query string.\nThis parameter can be used only when the `q` query string parameter is specified.",
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-docvalue_fields",
                    "schema": {
                        "in": "query",
                        "name": "docvalue_fields",
                        "description": "A comma-separated list of fields to return as the docvalue representation of a field for each hit.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Fields"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-expand_wildcards",
                    "schema": {
                        "in": "query",
                        "name": "expand_wildcards",
                        "description": "The type of index that wildcard patterns can match.\nIf the request can target data streams, this argument determines whether wildcard expressions match hidden data streams.\nIt supports comma-separated values such as `open,hidden`.\n\nSupported values include:\n  - `all`: Match any data stream or index, including hidden ones.\n  - `open`: Match open, non-hidden indices. Also matches any non-hidden data stream.\n  - `closed`: Match closed, non-hidden indices. Also matches any non-hidden data stream. Data streams cannot be closed.\n  - `hidden`: Match hidden data streams and hidden indices. Must be combined with `open`, `closed`, or `both`.\n  - `none`: Wildcard expressions are not accepted.\n\n",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.ExpandWildcards"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-explain",
                    "schema": {
                        "in": "query",
                        "name": "explain",
                        "description": "If `true`, the request returns detailed information about score computation as part of a hit.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-ignore_throttled",
                    "schema": {
                        "in": "query",
                        "name": "ignore_throttled",
                        "description": "If `true`, concrete, expanded or aliased indices will be ignored when frozen.",
                        "deprecated": true,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-ignore_unavailable",
                    "schema": {
                        "in": "query",
                        "name": "ignore_unavailable",
                        "description": "If `false`, the request returns an error if it targets a missing or closed index.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-include_named_queries_score",
                    "schema": {
                        "in": "query",
                        "name": "include_named_queries_score",
                        "description": "If `true`, the response includes the score contribution from any named queries.\n\nThis functionality reruns each named query on every hit in a search response.\nTypically, this adds a small overhead to a request.\nHowever, using computationally expensive named queries on a large number of hits may add significant overhead.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-lenient",
                    "schema": {
                        "in": "query",
                        "name": "lenient",
                        "description": "If `true`, format-based query failures (such as providing text to a numeric field) in the query string will be ignored.\nThis parameter can be used only when the `q` query string parameter is specified.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-max_concurrent_shard_requests",
                    "schema": {
                        "in": "query",
                        "name": "max_concurrent_shard_requests",
                        "description": "The number of concurrent shard requests per node that the search runs concurrently.\nThis value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-preference",
                    "schema": {
                        "in": "query",
                        "name": "preference",
                        "description": "The nodes and shards used for the search.\nBy default, Elasticsearch selects from eligible nodes and shards using adaptive replica selection, accounting for allocation awareness.\nValid values are:\n\n* `_only_local` to run the search only on shards on the local node.\n* `_local` to, if possible, run the search on shards on the local node, or if not, select shards using the default method.\n* `_only_nodes:<node-id>,<node-id>` to run the search on only the specified nodes IDs. If suitable shards exist on more than one selected node, use shards on those nodes using the default method. If none of the specified nodes are available, select shards from any available node using the default method.\n* `_prefer_nodes:<node-id>,<node-id>` to if possible, run the search on the specified nodes IDs. If not, select shards using the default method.\n* `_shards:<shard>,<shard>` to run the search only on the specified shards. You can combine this value with other `preference` values. However, the `_shards` value must come first. For example: `_shards:2,3|_local`.\n* `<custom-string>` (any string that does not start with `_`) to route searches with the same `<custom-string>` to the same shards in the same order.",
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-pre_filter_shard_size",
                    "schema": {
                        "in": "query",
                        "name": "pre_filter_shard_size",
                        "description": "A threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold.\nThis filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on its rewrite method (if date filters are mandatory to match but the shard bounds and the query are disjoint).\nWhen unspecified, the pre-filter phase is executed if any of these conditions is met:\n\n* The request targets more than 128 shards.\n* The request targets one or more read-only index.\n* The primary sort of the query targets an indexed field.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-request_cache",
                    "schema": {
                        "in": "query",
                        "name": "request_cache",
                        "description": "If `true`, the caching of search results is enabled for requests where `size` is `0`.\nIt defaults to index level settings.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-routing",
                    "schema": {
                        "in": "query",
                        "name": "routing",
                        "description": "A custom value that is used to route operations to a specific shard.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Routing"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-scroll",
                    "schema": {
                        "in": "query",
                        "name": "scroll",
                        "description": "The period to retain the search context for scrolling.\nBy default, this value cannot exceed `1d` (24 hours).\nYou can change this limit by using the `search.max_keep_alive` cluster-level setting.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Duration"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-search_type",
                    "schema": {
                        "in": "query",
                        "name": "search_type",
                        "description": "Indicates how distributed term frequencies are calculated for relevance scoring.\n\nSupported values include:\n  - `query_then_fetch`: Documents are scored using local term and document frequencies for the shard. This is usually faster but less accurate.\n  - `dfs_query_then_fetch`: Documents are scored using global term and document frequencies across all shards. This is usually slower but more accurate.\n\n",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.SearchType"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-stats",
                    "schema": {
                        "in": "query",
                        "name": "stats",
                        "description": "Specific `tag` of the request for logging and statistical purposes.",
                        "deprecated": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-stored_fields",
                    "schema": {
                        "in": "query",
                        "name": "stored_fields",
                        "description": "A comma-separated list of stored fields to return as part of a hit.\nIf no fields are specified, no stored fields are included in the response.\nIf this field is specified, the `_source` parameter defaults to `false`.\nYou can pass `_source: true` to return both source fields and stored fields in the search response.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Fields"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-suggest_field",
                    "schema": {
                        "in": "query",
                        "name": "suggest_field",
                        "description": "The field to use for suggestions.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Field"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-suggest_mode",
                    "schema": {
                        "in": "query",
                        "name": "suggest_mode",
                        "description": "The suggest mode.\nThis parameter can be used only when the `suggest_field` and `suggest_text` query string parameters are specified.\n\nSupported values include:\n  - `missing`: Only generate suggestions for terms that are not in the shard.\n  - `popular`: Only suggest terms that occur in more docs on the shard than the original term.\n  - `always`: Suggest any matching suggestions based on terms in the suggest text.\n\n",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.SuggestMode"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-suggest_size",
                    "schema": {
                        "in": "query",
                        "name": "suggest_size",
                        "description": "The number of suggestions to return.\nThis parameter can be used only when the `suggest_field` and `suggest_text` query string parameters are specified.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-suggest_text",
                    "schema": {
                        "in": "query",
                        "name": "suggest_text",
                        "description": "The source text for which the suggestions should be returned.\nThis parameter can be used only when the `suggest_field` and `suggest_text` query string parameters are specified.",
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-terminate_after",
                    "schema": {
                        "in": "query",
                        "name": "terminate_after",
                        "description": "The maximum number of documents to collect for each shard.\nIf a query reaches this limit, Elasticsearch terminates the query early.\nElasticsearch collects documents before sorting.\n\nIMPORTANT: Use with caution.\nElasticsearch applies this parameter to each shard handling the request.\nWhen possible, let Elasticsearch perform early termination automatically.\nAvoid specifying this parameter for requests that target data streams with backing indices across multiple data tiers.\nIf set to `0` (default), the query does not terminate early.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-timeout",
                    "schema": {
                        "in": "query",
                        "name": "timeout",
                        "description": "The period of time to wait for a response from each shard.\nIf no response is received before the timeout expires, the request fails and returns an error.\nIt defaults to no timeout.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Duration"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-track_total_hits",
                    "schema": {
                        "in": "query",
                        "name": "track_total_hits",
                        "description": "The number of hits matching the query to count accurately.\nIf `true`, the exact number of hits is returned at the cost of some performance.\nIf `false`, the response does not include the total number of hits matching the query.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_global.search._types.TrackHits"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-track_scores",
                    "schema": {
                        "in": "query",
                        "name": "track_scores",
                        "description": "If `true`, the request calculates and returns document scores, even if the scores are not used for sorting.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-typed_keys",
                    "schema": {
                        "in": "query",
                        "name": "typed_keys",
                        "description": "If `true`, aggregation and suggester names are be prefixed by their respective types in the response.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-rest_total_hits_as_int",
                    "schema": {
                        "in": "query",
                        "name": "rest_total_hits_as_int",
                        "description": "Indicates whether `hits.total` should be rendered as an integer or an object in the rest search response.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-version",
                    "schema": {
                        "in": "query",
                        "name": "version",
                        "description": "If `true`, the request returns the document version as part of a hit.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-_source",
                    "schema": {
                        "in": "query",
                        "name": "_source",
                        "description": "The source fields that are returned for matching documents.\nThese fields are returned in the `hits._source` property of the search response.\nValid values are:\n\n* `true` to return the entire document source.\n* `false` to not return the document source.\n* `<string>` to return the source fields that are specified as a comma-separated list that supports wildcard (`*`) patterns.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_global.search._types.SourceConfigParam"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-_source_excludes",
                    "schema": {
                        "in": "query",
                        "name": "_source_excludes",
                        "description": "A comma-separated list of source fields to exclude from the response.\nYou can also use this parameter to exclude fields from the subset specified in `_source_includes` query parameter.\nIf the `_source` parameter is `false`, this parameter is ignored.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Fields"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-_source_includes",
                    "schema": {
                        "in": "query",
                        "name": "_source_includes",
                        "description": "A comma-separated list of source fields to include in the response.\nIf this parameter is specified, only these source fields are returned.\nYou can exclude fields from this subset using the `_source_excludes` query parameter.\nIf the `_source` parameter is `false`, this parameter is ignored.",
                        "deprecated": false,
                        "schema": {
                            "$ref": "#/components/schemas/_types.Fields"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-seq_no_primary_term",
                    "schema": {
                        "in": "query",
                        "name": "seq_no_primary_term",
                        "description": "If `true`, the request returns the sequence number and primary term of the last modification of each hit.",
                        "deprecated": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-q",
                    "schema": {
                        "in": "query",
                        "name": "q",
                        "description": "A query in the Lucene query string syntax.\nQuery parameter searches do not support the full Elasticsearch Query DSL but are handy for testing.\n\nIMPORTANT: This parameter overrides the query parameter in the request body.\nIf both parameters are specified, documents matching the query request body parameter are not returned.",
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-size",
                    "schema": {
                        "in": "query",
                        "name": "size",
                        "description": "The number of hits to return.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-from",
                    "schema": {
                        "in": "query",
                        "name": "from",
                        "description": "The starting document offset, which must be non-negative.\nBy default, you cannot page through more than 10,000 hits using the `from` and `size` parameters.\nTo page through more hits, use the `search_after` parameter.",
                        "deprecated": false,
                        "schema": {
                            "type": "number"
                        },
                        "style": "form"
                    }
                },
                {
                    "$ref": "#/components/parameters/search-sort",
                    "schema": {
                        "in": "query",
                        "name": "sort",
                        "description": "A comma-separated list of `<field>:<direction>` pairs.",
                        "deprecated": false,
                        "schema": {
                            "oneOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            ]
                        },
                        "style": "form"
                    }
                }
            ],
            "responses": {
                "200": {
                    "$ref": "#/components/responses/search-200"
                }
            },
            "request_body_parameters": {
                "$ref": "#/components/requestBodies/search"
            },
            "description": "Get search hits that match the query defined in the request.\nYou can provide search queries using the `q` query string parameter or the request body.\nIf both are specified, only the query parameter is used.\n\nIf the Elasticsearch security features are enabled, you must have the read index privilege for the target data stream, index, or alias. For cross-cluster search, refer to the documentation about configuring CCS privileges.\nTo search a point in time (PIT) for an alias, you must have the `read` index privilege for the alias's data streams or indices.\n\n**Search slicing**\n\nWhen paging through a large number of documents, it can be helpful to split the search into multiple slices to consume them independently with the `slice` and `pit` properties.\nBy default the splitting is done first on the shards, then locally on each shard.\nThe local splitting partitions the shard into contiguous ranges based on Lucene document IDs.\n\nFor instance if the number of shards is equal to 2 and you request 4 slices, the slices 0 and 2 are assigned to the first shard and the slices 1 and 3 are assigned to the second shard.\n\nIMPORTANT: The same point-in-time ID should be used for all slices.\nIf different PIT IDs are used, slices can overlap and miss documents.\nThis situation can occur because the splitting criterion is based on Lucene document IDs, which are not stable across changes to the index.",
            "tags": [
                "search"
            ],
            "operationId": "search-1"
        }
    ]
}