from contextlib import ContextDecorator
from dataclasses import dataclass
from typing import Any, Callable, ClassVar

__all__ = ['Timer', 'TimerError']

class TimerError(Exception): ...

@dataclass
class Timer(ContextDecorator):
    timers: ClassVar[dict[str, float]] = ...
    name: str | None = ...
    text: str = ...
    logger: Callable[[str], None] | None = ...
    def __post_init__(self) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> float: ...
    def __enter__(self) -> Timer: ...
    def __exit__(self, *exc_info: Any) -> None: ...
    def __init__(self, name=..., text=..., logger=...) -> None: ...
