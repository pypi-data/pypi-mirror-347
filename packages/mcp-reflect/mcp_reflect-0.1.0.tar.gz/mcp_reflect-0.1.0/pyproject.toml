[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
branch = "main"
version_variable = "pyproject.toml:tool.poetry.version"
build_command    = "python -m pip install poetry && poetry build"
commit_parser    = "conventional"
vcs_release      = true

[tool.poetry]
name = "mcp-reflect"
version = "0.1.0"
description = "A framework for model self-reflection and meta-cognitive processing"
authors = ["Jona Heidsick <jona.heidsick@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/JonesH/mcp-reflect"
keywords = ["mcp", "llm", "ai", "reflection", "evaluation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{ include = "mcp_reflect" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
fastmcp = ">=2.0.0,<3.0.0"
pydantic = ">=2.0.0"
async-lru = "^2.0.4"
uvicorn = ">=0.23.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
ruff = "^0.11.9"
mypy = "^1.8.0"
black = "^24.1.0"
isort = "^5.13.2"

[tool.poetry.scripts]
mcp-reflect = "mcp_reflect.server:run_server"

[tool.black]
line-length = 120
target-version = ["py311", "py312", "py313"]

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.ruff]
line-length = 120
target-version = "py313"
lint.select = ["E", "F", "B", "I", "N", "ANN", "W", "D", "UP", "C90"]
lint.ignore = ["D203", "D213"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "ANN"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
