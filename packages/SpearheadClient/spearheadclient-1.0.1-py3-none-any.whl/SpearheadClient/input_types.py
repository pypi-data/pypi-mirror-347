# Generated by ariadne-codegen
# Source: http://api:8080/v1/graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    agent_shift_overrides_constraint,
    agent_shift_overrides_update_column,
    agent_shifts_select_column,
    announcements_constraint,
    announcements_update_column,
    auth_api_keys_constraint,
    auth_api_keys_update_column,
    billing_units_constraint,
    billing_units_update_column,
    catalogs_constraint,
    catalogs_select_column,
    catalogs_update_column,
    combined_logs_select_column,
    cursor_ordering,
    custom_form_definitions_constraint,
    custom_form_definitions_select_column,
    custom_form_definitions_update_column,
    custom_form_domains_constraint,
    custom_form_domains_update_column,
    customer_agents_constraint,
    customer_agents_select_column,
    customer_agents_update_column,
    customer_contacts_constraint,
    customer_contacts_select_column,
    customer_contacts_update_column,
    customer_contracts_constraint,
    customer_contracts_select_column,
    customer_contracts_update_column,
    customer_ledgers_constraint,
    customer_ledgers_update_column,
    customer_payments_constraint,
    customer_payments_select_column,
    customer_payments_update_column,
    customers_constraint,
    customers_select_column,
    customers_select_column_customers_aggregate_bool_exp_bool_and_arguments_columns,
    customers_select_column_customers_aggregate_bool_exp_bool_or_arguments_columns,
    customers_update_column,
    customers_xref_work_sites_constraint,
    customers_xref_work_sites_select_column,
    customers_xref_work_sites_update_column,
    delivery_statuses_constraint,
    delivery_statuses_enum,
    delivery_statuses_update_column,
    demand_order_event_types_constraint,
    demand_order_event_types_update_column,
    demand_order_events_constraint,
    demand_order_events_update_column,
    demand_order_items_constraint,
    demand_order_items_select_column,
    demand_order_items_select_column_demand_order_items_aggregate_bool_exp_bool_and_arguments_columns,
    demand_order_items_select_column_demand_order_items_aggregate_bool_exp_bool_or_arguments_columns,
    demand_order_items_update_column,
    demand_orders_constraint,
    demand_orders_select_column,
    demand_orders_update_column,
    event_notifications_constraint,
    event_notifications_select_column,
    event_notifications_update_column,
    event_types_constraint,
    event_types_select_column,
    event_types_update_column,
    expense_logs_constraint,
    expense_logs_select_column,
    expense_logs_select_column_expense_logs_aggregate_bool_exp_bool_and_arguments_columns,
    expense_logs_select_column_expense_logs_aggregate_bool_exp_bool_or_arguments_columns,
    expense_logs_update_column,
    expense_types_constraint,
    expense_types_enum,
    expense_types_update_column,
    feature_flags_constraint,
    feature_flags_enum,
    feature_flags_update_column,
    interfaces_api_token_pair_constraint,
    interfaces_api_token_pair_update_column,
    invoice_ledgers_constraint,
    invoice_ledgers_select_column,
    invoice_ledgers_update_column,
    invoice_line_items_constraint,
    invoice_line_items_select_column,
    invoice_line_items_update_column,
    invoice_payments_constraint,
    invoice_payments_select_column,
    invoice_payments_update_column,
    invoice_pivot_options_constraint,
    invoice_pivot_options_enum,
    invoice_pivot_options_update_column,
    invoices_constraint,
    invoices_select_column,
    invoices_update_column,
    lifecycle_statuses_constraint,
    lifecycle_statuses_enum,
    lifecycle_statuses_update_column,
    media_uploads_constraint,
    media_uploads_select_column,
    media_uploads_update_column,
    media_xref_expense_logs_constraint,
    media_xref_expense_logs_select_column,
    media_xref_expense_logs_update_column,
    media_xref_invoices_constraint,
    media_xref_invoices_select_column,
    media_xref_invoices_update_column,
    media_xref_products_constraint,
    media_xref_products_select_column,
    media_xref_products_update_column,
    media_xref_quote_events_constraint,
    media_xref_quote_events_select_column,
    media_xref_quote_events_update_column,
    media_xref_quotes_constraint,
    media_xref_quotes_select_column,
    media_xref_quotes_update_column,
    media_xref_ticket_custom_form_entries_constraint,
    media_xref_ticket_custom_form_entries_select_column,
    media_xref_ticket_custom_form_entries_update_column,
    media_xref_tickets_constraint,
    media_xref_tickets_select_column,
    media_xref_tickets_update_column,
    media_xref_travel_logs_constraint,
    media_xref_travel_logs_select_column,
    media_xref_travel_logs_update_column,
    media_xref_work_logs_constraint,
    media_xref_work_logs_select_column,
    media_xref_work_logs_update_column,
    media_xref_work_orders_constraint,
    media_xref_work_orders_select_column,
    media_xref_work_orders_update_column,
    notification_prefs_constraint,
    notification_prefs_select_column,
    notification_prefs_select_column_notification_prefs_aggregate_bool_exp_bool_and_arguments_columns,
    notification_prefs_select_column_notification_prefs_aggregate_bool_exp_bool_or_arguments_columns,
    notification_prefs_update_column,
    oauth_providers_constraint,
    oauth_providers_enum,
    oauth_providers_update_column,
    order_by,
    org_roles_constraint,
    org_roles_update_column,
    org_users_xref_roles_constraint,
    org_users_xref_roles_select_column,
    org_users_xref_roles_update_column,
    org_xref_feature_flags_constraint,
    org_xref_feature_flags_select_column,
    org_xref_feature_flags_update_column,
    organization_agent_prices_constraint,
    organization_agent_prices_select_column,
    organization_agent_prices_update_column,
    organization_agents_constraint,
    organization_agents_select_column,
    organization_agents_update_column,
    organization_timezone_history_select_column,
    organizations_constraint,
    organizations_update_column,
    organizations_xref_oauth_constraint,
    organizations_xref_oauth_select_column,
    organizations_xref_oauth_update_column,
    payment_statuses_constraint,
    payment_statuses_enum,
    payment_statuses_update_column,
    price_book_agent_prices_constraint,
    price_book_agent_prices_select_column,
    price_book_agent_prices_update_column,
    price_books_constraint,
    price_books_select_column,
    price_books_update_column,
    product_prices_constraint,
    product_prices_select_column,
    product_prices_update_column,
    product_types_constraint,
    product_types_enum,
    product_types_update_column,
    products_constraint,
    products_select_column,
    products_update_column,
    products_xref_custom_forms_constraint,
    products_xref_custom_forms_select_column,
    products_xref_custom_forms_select_column_products_xref_custom_forms_aggregate_bool_exp_bool_and_arguments_columns,
    products_xref_custom_forms_select_column_products_xref_custom_forms_aggregate_bool_exp_bool_or_arguments_columns,
    products_xref_custom_forms_update_column,
    quote_event_types_constraint,
    quote_event_types_enum,
    quote_event_types_update_column,
    quote_events_constraint,
    quote_events_select_column,
    quote_events_update_column,
    quote_items_constraint,
    quote_items_select_column,
    quote_items_update_column,
    quote_quotes_constraint,
    quote_quotes_select_column,
    quote_quotes_update_column,
    report_uploads_constraint,
    report_uploads_update_column,
    review_statuses_constraint,
    review_statuses_enum,
    review_statuses_update_column,
    signatures_constraint,
    signatures_update_column,
    ticket_agents_constraint,
    ticket_agents_select_column,
    ticket_agents_update_column,
    ticket_custom_form_entries_constraint,
    ticket_custom_form_entries_select_column,
    ticket_custom_form_entries_update_column,
    ticket_review_event_types_constraint,
    ticket_review_event_types_enum,
    ticket_review_event_types_update_column,
    ticket_review_events_constraint,
    ticket_review_events_select_column,
    ticket_review_events_update_column,
    ticket_statuses_constraint,
    ticket_statuses_enum,
    ticket_statuses_update_column,
    tickets_constraint,
    tickets_select_column,
    tickets_update_column,
    time_sheet_billing_intervals_constraint,
    time_sheet_billing_intervals_enum,
    time_sheet_billing_intervals_update_column,
    time_sheet_rules_constraint,
    time_sheet_rules_select_column,
    time_sheet_rules_update_column,
    time_sheet_rulesets_constraint,
    time_sheet_rulesets_update_column,
    time_units_constraint,
    time_units_enum,
    time_units_update_column,
    travel_logs_constraint,
    travel_logs_select_column,
    travel_logs_update_column,
    travel_prices_constraint,
    travel_prices_select_column,
    travel_prices_update_column,
    user_subs_constraint,
    user_subs_select_column,
    user_subs_update_column,
    users_constraint,
    users_update_column,
    work_logs_constraint,
    work_logs_select_column,
    work_logs_update_column,
    work_sites_constraint,
    work_sites_select_column,
    work_sites_update_column,
)


class Boolean_comparison_exp(BaseModel):
    eq: Optional[bool] = Field(alias="_eq", default=None)
    gt: Optional[bool] = Field(alias="_gt", default=None)
    gte: Optional[bool] = Field(alias="_gte", default=None)
    in_: Optional[List[bool]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[bool] = Field(alias="_lt", default=None)
    lte: Optional[bool] = Field(alias="_lte", default=None)
    neq: Optional[bool] = Field(alias="_neq", default=None)
    nin: Optional[List[bool]] = Field(alias="_nin", default=None)


class Int_comparison_exp(BaseModel):
    eq: Optional[int] = Field(alias="_eq", default=None)
    gt: Optional[int] = Field(alias="_gt", default=None)
    gte: Optional[int] = Field(alias="_gte", default=None)
    in_: Optional[List[int]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[int] = Field(alias="_lt", default=None)
    lte: Optional[int] = Field(alias="_lte", default=None)
    neq: Optional[int] = Field(alias="_neq", default=None)
    nin: Optional[List[int]] = Field(alias="_nin", default=None)


class String_array_comparison_exp(BaseModel):
    contained_in: Optional[List[str]] = Field(alias="_contained_in", default=None)
    contains: Optional[List[str]] = Field(alias="_contains", default=None)
    eq: Optional[List[str]] = Field(alias="_eq", default=None)
    gt: Optional[List[str]] = Field(alias="_gt", default=None)
    gte: Optional[List[str]] = Field(alias="_gte", default=None)
    in_: Optional[List[List[str]]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[List[str]] = Field(alias="_lt", default=None)
    lte: Optional[List[str]] = Field(alias="_lte", default=None)
    neq: Optional[List[str]] = Field(alias="_neq", default=None)
    nin: Optional[List[List[str]]] = Field(alias="_nin", default=None)


class String_comparison_exp(BaseModel):
    eq: Optional[str] = Field(alias="_eq", default=None)
    gt: Optional[str] = Field(alias="_gt", default=None)
    gte: Optional[str] = Field(alias="_gte", default=None)
    ilike: Optional[str] = Field(alias="_ilike", default=None)
    in_: Optional[List[str]] = Field(alias="_in", default=None)
    iregex: Optional[str] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[str] = Field(alias="_like", default=None)
    lt: Optional[str] = Field(alias="_lt", default=None)
    lte: Optional[str] = Field(alias="_lte", default=None)
    neq: Optional[str] = Field(alias="_neq", default=None)
    nilike: Optional[str] = Field(alias="_nilike", default=None)
    nin: Optional[List[str]] = Field(alias="_nin", default=None)
    niregex: Optional[str] = Field(alias="_niregex", default=None)
    nlike: Optional[str] = Field(alias="_nlike", default=None)
    nregex: Optional[str] = Field(alias="_nregex", default=None)
    nsimilar: Optional[str] = Field(alias="_nsimilar", default=None)
    regex: Optional[str] = Field(alias="_regex", default=None)
    similar: Optional[str] = Field(alias="_similar", default=None)


class activity_organization_agents_args(BaseModel):
    timezone: Optional[str] = Field(alias="_timezone", default=None)


class agent_shift_generated_bool_exp(BaseModel):
    and_: Optional[List["agent_shift_generated_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["agent_shift_generated_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["agent_shift_generated_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent_id: Optional["String_comparison_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    hash: Optional["String_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    total_hours: Optional["numeric_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class agent_shift_generated_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    hash: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    started_at: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class agent_shift_generated_stream_cursor_input(BaseModel):
    initial_value: "agent_shift_generated_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class agent_shift_generated_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    hash: Optional[str] = None
    organization_name: Optional[str] = None
    started_at: Optional[Any] = None
    total_hours: Optional[Any] = None
    updated_at: Optional[Any] = None


class agent_shift_overrides_bool_exp(BaseModel):
    and_: Optional[List["agent_shift_overrides_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["agent_shift_overrides_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["agent_shift_overrides_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent_id: Optional["String_comparison_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    hash: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    logs: Optional["combined_logs_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    total_hours: Optional["numeric_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class agent_shift_overrides_insert_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    started_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class agent_shift_overrides_obj_rel_insert_input(BaseModel):
    data: "agent_shift_overrides_insert_input"
    on_conflict: Optional["agent_shift_overrides_on_conflict"] = None


class agent_shift_overrides_on_conflict(BaseModel):
    constraint: agent_shift_overrides_constraint
    update_columns: List[agent_shift_overrides_update_column]
    where: Optional["agent_shift_overrides_bool_exp"] = None


class agent_shift_overrides_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    hash: Optional[order_by] = None
    id: Optional[order_by] = None
    logs_aggregate: Optional["combined_logs_aggregate_order_by"] = None
    organization_name: Optional[order_by] = None
    started_at: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class agent_shift_overrides_pk_columns_input(BaseModel):
    id: Any


class agent_shift_overrides_set_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    started_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class agent_shift_overrides_stream_cursor_input(BaseModel):
    initial_value: "agent_shift_overrides_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class agent_shift_overrides_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    hash: Optional[str] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    started_at: Optional[Any] = None
    total_hours: Optional[Any] = None
    updated_at: Optional[Any] = None


class agent_shift_overrides_updates(BaseModel):
    set: Optional["agent_shift_overrides_set_input"] = Field(alias="_set", default=None)
    where: "agent_shift_overrides_bool_exp"


class agent_shifts_aggregate_bool_exp(BaseModel):
    count: Optional["agent_shifts_aggregate_bool_exp_count"] = None


class agent_shifts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[agent_shifts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["agent_shifts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class agent_shifts_aggregate_order_by(BaseModel):
    avg: Optional["agent_shifts_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["agent_shifts_max_order_by"] = None
    min: Optional["agent_shifts_min_order_by"] = None
    stddev: Optional["agent_shifts_stddev_order_by"] = None
    stddev_pop: Optional["agent_shifts_stddev_pop_order_by"] = None
    stddev_samp: Optional["agent_shifts_stddev_samp_order_by"] = None
    sum: Optional["agent_shifts_sum_order_by"] = None
    var_pop: Optional["agent_shifts_var_pop_order_by"] = None
    var_samp: Optional["agent_shifts_var_samp_order_by"] = None
    variance: Optional["agent_shifts_variance_order_by"] = None


class agent_shifts_arr_rel_insert_input(BaseModel):
    data: List["agent_shifts_insert_input"]


class agent_shifts_avg_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_bool_exp(BaseModel):
    and_: Optional[List["agent_shifts_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["agent_shifts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["agent_shifts_bool_exp"]] = Field(alias="_or", default=None)
    agent: Optional["organization_agents_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    hash: Optional["String_comparison_exp"] = None
    logs: Optional["combined_logs_bool_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    override_id: Optional["uuid_comparison_exp"] = None
    shift_override: Optional["agent_shift_overrides_bool_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    time_sheet_entries: Optional["interfaces_time_sheet_entries_bool_exp"] = None
    total_hours: Optional["numeric_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class agent_shifts_insert_input(BaseModel):
    agent: Optional["organization_agents_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    hash: Optional[str] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    override_id: Optional[Any] = None
    shift_override: Optional["agent_shift_overrides_obj_rel_insert_input"] = None
    started_at: Optional[Any] = None
    total_hours: Optional[Any] = None
    updated_at: Optional[Any] = None


class agent_shifts_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    hash: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    override_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class agent_shifts_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    hash: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    override_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class agent_shifts_order_by(BaseModel):
    agent: Optional["organization_agents_order_by"] = None
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    hash: Optional[order_by] = None
    logs_aggregate: Optional["combined_logs_aggregate_order_by"] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    override_id: Optional[order_by] = None
    shift_override: Optional["agent_shift_overrides_order_by"] = None
    started_at: Optional[order_by] = None
    time_sheet_entries_aggregate: Optional[
        "interfaces_time_sheet_entries_aggregate_order_by"
    ] = None
    total_hours: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class agent_shifts_stddev_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_stddev_pop_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_stddev_samp_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_stream_cursor_input(BaseModel):
    initial_value: "agent_shifts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class agent_shifts_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    hash: Optional[str] = None
    organization_name: Optional[str] = None
    override_id: Optional[Any] = None
    started_at: Optional[Any] = None
    total_hours: Optional[Any] = None
    updated_at: Optional[Any] = None


class agent_shifts_sum_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_var_pop_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_var_samp_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class agent_shifts_variance_order_by(BaseModel):
    total_hours: Optional[order_by] = None


class announcements_bool_exp(BaseModel):
    and_: Optional[List["announcements_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["announcements_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["announcements_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    ends_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_dismissable: Optional["Boolean_comparison_exp"] = None
    message_desktop: Optional["String_comparison_exp"] = None
    message_mobile: Optional["String_comparison_exp"] = None
    starts_at: Optional["timestamptz_comparison_exp"] = None
    theme: Optional["String_comparison_exp"] = None


class announcements_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ends_at: Optional[Any] = None
    id: Optional[Any] = None
    is_dismissable: Optional[bool] = None
    message_desktop: Optional[str] = None
    message_mobile: Optional[str] = None
    starts_at: Optional[Any] = None
    theme: Optional[str] = None


class announcements_on_conflict(BaseModel):
    constraint: announcements_constraint
    update_columns: List[announcements_update_column]
    where: Optional["announcements_bool_exp"] = None


class announcements_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ends_at: Optional[order_by] = None
    id: Optional[order_by] = None
    is_dismissable: Optional[order_by] = None
    message_desktop: Optional[order_by] = None
    message_mobile: Optional[order_by] = None
    starts_at: Optional[order_by] = None
    theme: Optional[order_by] = None


class announcements_pk_columns_input(BaseModel):
    id: Any


class announcements_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ends_at: Optional[Any] = None
    id: Optional[Any] = None
    is_dismissable: Optional[bool] = None
    message_desktop: Optional[str] = None
    message_mobile: Optional[str] = None
    starts_at: Optional[Any] = None
    theme: Optional[str] = None


class announcements_stream_cursor_input(BaseModel):
    initial_value: "announcements_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class announcements_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ends_at: Optional[Any] = None
    id: Optional[Any] = None
    is_dismissable: Optional[bool] = None
    message_desktop: Optional[str] = None
    message_mobile: Optional[str] = None
    starts_at: Optional[Any] = None
    theme: Optional[str] = None


class announcements_updates(BaseModel):
    set: Optional["announcements_set_input"] = Field(alias="_set", default=None)
    where: "announcements_bool_exp"


class auth_api_keys_bool_exp(BaseModel):
    and_: Optional[List["auth_api_keys_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["auth_api_keys_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["auth_api_keys_bool_exp"]] = Field(alias="_or", default=None)
    access_key_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    expires_at: Optional["timestamptz_comparison_exp"] = None
    last_used_at: Optional["timestamptz_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    secret_access_key: Optional["String_comparison_exp"] = None
    user_id: Optional["String_comparison_exp"] = None


class auth_api_keys_insert_input(BaseModel):
    access_key_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expires_at: Optional[Any] = None
    last_used_at: Optional[Any] = None
    notes: Optional[str] = None
    organization_name: Optional[str] = None
    secret_access_key: Optional[str] = None
    user_id: Optional[str] = None


class auth_api_keys_on_conflict(BaseModel):
    constraint: auth_api_keys_constraint
    update_columns: List[auth_api_keys_update_column]
    where: Optional["auth_api_keys_bool_exp"] = None


class auth_api_keys_order_by(BaseModel):
    access_key_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expires_at: Optional[order_by] = None
    last_used_at: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    secret_access_key: Optional[order_by] = None
    user_id: Optional[order_by] = None


class auth_api_keys_pk_columns_input(BaseModel):
    access_key_id: str


class auth_api_keys_set_input(BaseModel):
    access_key_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expires_at: Optional[Any] = None
    last_used_at: Optional[Any] = None
    notes: Optional[str] = None
    organization_name: Optional[str] = None
    secret_access_key: Optional[str] = None
    user_id: Optional[str] = None


class auth_api_keys_stream_cursor_input(BaseModel):
    initial_value: "auth_api_keys_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class auth_api_keys_stream_cursor_value_input(BaseModel):
    access_key_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expires_at: Optional[Any] = None
    last_used_at: Optional[Any] = None
    notes: Optional[str] = None
    organization_name: Optional[str] = None
    secret_access_key: Optional[str] = None
    user_id: Optional[str] = None


class auth_api_keys_updates(BaseModel):
    set: Optional["auth_api_keys_set_input"] = Field(alias="_set", default=None)
    where: "auth_api_keys_bool_exp"


class auth_create_api_token_pair_args(BaseModel):
    expires_at: Optional[Any] = Field(alias="_expires_at", default=None)
    notes: Optional[str] = Field(alias="_notes", default=None)


class auth_delete_api_key_args(BaseModel):
    access_key: Optional[str] = Field(alias="_access_key", default=None)


class bigint_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class billing_units_bool_exp(BaseModel):
    and_: Optional[List["billing_units_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["billing_units_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["billing_units_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    label: Optional["String_comparison_exp"] = None
    label_abbrev: Optional["String_comparison_exp"] = None
    label_plural: Optional["String_comparison_exp"] = None
    label_singular: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class billing_units_insert_input(BaseModel):
    comment: Optional[str] = None
    label: Optional[str] = None
    label_abbrev: Optional[str] = None
    label_plural: Optional[str] = None
    label_singular: Optional[str] = None
    value: Optional[str] = None


class billing_units_on_conflict(BaseModel):
    constraint: billing_units_constraint
    update_columns: List[billing_units_update_column]
    where: Optional["billing_units_bool_exp"] = None


class billing_units_order_by(BaseModel):
    comment: Optional[order_by] = None
    label: Optional[order_by] = None
    label_abbrev: Optional[order_by] = None
    label_plural: Optional[order_by] = None
    label_singular: Optional[order_by] = None
    value: Optional[order_by] = None


class billing_units_pk_columns_input(BaseModel):
    value: str


class billing_units_set_input(BaseModel):
    comment: Optional[str] = None
    label: Optional[str] = None
    label_abbrev: Optional[str] = None
    label_plural: Optional[str] = None
    label_singular: Optional[str] = None
    value: Optional[str] = None


class billing_units_stream_cursor_input(BaseModel):
    initial_value: "billing_units_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class billing_units_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    label: Optional[str] = None
    label_abbrev: Optional[str] = None
    label_plural: Optional[str] = None
    label_singular: Optional[str] = None
    value: Optional[str] = None


class billing_units_updates(BaseModel):
    set: Optional["billing_units_set_input"] = Field(alias="_set", default=None)
    where: "billing_units_bool_exp"


class catalogs_aggregate_bool_exp(BaseModel):
    count: Optional["catalogs_aggregate_bool_exp_count"] = None


class catalogs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[catalogs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["catalogs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class catalogs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["catalogs_max_order_by"] = None
    min: Optional["catalogs_min_order_by"] = None


class catalogs_append_input(BaseModel):
    notesj: Optional[Any] = None


class catalogs_arr_rel_insert_input(BaseModel):
    data: List["catalogs_insert_input"]
    on_conflict: Optional["catalogs_on_conflict"] = None


class catalogs_bool_exp(BaseModel):
    and_: Optional[List["catalogs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["catalogs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["catalogs_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    products: Optional["products_bool_exp"] = None
    products_aggregate: Optional["products_aggregate_bool_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class catalogs_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class catalogs_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class catalogs_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class catalogs_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    products: Optional["products_arr_rel_insert_input"] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class catalogs_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class catalogs_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class catalogs_obj_rel_insert_input(BaseModel):
    data: "catalogs_insert_input"
    on_conflict: Optional["catalogs_on_conflict"] = None


class catalogs_on_conflict(BaseModel):
    constraint: catalogs_constraint
    update_columns: List[catalogs_update_column]
    where: Optional["catalogs_bool_exp"] = None


class catalogs_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    products_aggregate: Optional["products_aggregate_order_by"] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class catalogs_pk_columns_input(BaseModel):
    id: Any


class catalogs_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class catalogs_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class catalogs_stream_cursor_input(BaseModel):
    initial_value: "catalogs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class catalogs_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class catalogs_updates(BaseModel):
    append: Optional["catalogs_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["catalogs_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["catalogs_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["catalogs_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["catalogs_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["catalogs_set_input"] = Field(alias="_set", default=None)
    where: "catalogs_bool_exp"


class citext_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    ilike: Optional[Any] = Field(alias="_ilike", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    iregex: Optional[Any] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[Any] = Field(alias="_like", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nilike: Optional[Any] = Field(alias="_nilike", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)
    niregex: Optional[Any] = Field(alias="_niregex", default=None)
    nlike: Optional[Any] = Field(alias="_nlike", default=None)
    nregex: Optional[Any] = Field(alias="_nregex", default=None)
    nsimilar: Optional[Any] = Field(alias="_nsimilar", default=None)
    regex: Optional[Any] = Field(alias="_regex", default=None)
    similar: Optional[Any] = Field(alias="_similar", default=None)


class combined_logs_aggregate_bool_exp(BaseModel):
    count: Optional["combined_logs_aggregate_bool_exp_count"] = None


class combined_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[combined_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["combined_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class combined_logs_aggregate_order_by(BaseModel):
    avg: Optional["combined_logs_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["combined_logs_max_order_by"] = None
    min: Optional["combined_logs_min_order_by"] = None
    stddev: Optional["combined_logs_stddev_order_by"] = None
    stddev_pop: Optional["combined_logs_stddev_pop_order_by"] = None
    stddev_samp: Optional["combined_logs_stddev_samp_order_by"] = None
    sum: Optional["combined_logs_sum_order_by"] = None
    var_pop: Optional["combined_logs_var_pop_order_by"] = None
    var_samp: Optional["combined_logs_var_samp_order_by"] = None
    variance: Optional["combined_logs_variance_order_by"] = None


class combined_logs_arr_rel_insert_input(BaseModel):
    data: List["combined_logs_insert_input"]


class combined_logs_avg_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_bool_exp(BaseModel):
    and_: Optional[List["combined_logs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["combined_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["combined_logs_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    expense_log: Optional["expense_logs_bool_exp"] = None
    expense_log_id: Optional["uuid_comparison_exp"] = None
    expense_total_cents: Optional["Int_comparison_exp"] = None
    expensed_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    next_shifts: Optional["agent_shifts_bool_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    prev_shifts: Optional["agent_shifts_bool_exp"] = None
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    shifts: Optional["agent_shifts_bool_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    travel_ended_at: Optional["timestamptz_comparison_exp"] = None
    travel_hours: Optional["numeric_comparison_exp"] = None
    travel_hours_unit_price_cents: Optional["Int_comparison_exp"] = None
    travel_log: Optional["travel_logs_bool_exp"] = None
    travel_log_id: Optional["uuid_comparison_exp"] = None
    travel_miles: Optional["numeric_comparison_exp"] = None
    travel_miles_unit_price_cents: Optional["Int_comparison_exp"] = None
    travel_started_at: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_ended_at: Optional["timestamptz_comparison_exp"] = None
    work_hours: Optional["numeric_comparison_exp"] = None
    work_log: Optional["work_logs_bool_exp"] = None
    work_log_id: Optional["uuid_comparison_exp"] = None
    work_site: Optional["work_sites_bool_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None
    work_started_at: Optional["timestamptz_comparison_exp"] = None


class combined_logs_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    expense_log: Optional["expense_logs_obj_rel_insert_input"] = None
    expense_log_id: Optional[Any] = None
    expense_total_cents: Optional[int] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    notesj: Optional[Any] = None
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    travel_ended_at: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_hours_unit_price_cents: Optional[int] = None
    travel_log: Optional["travel_logs_obj_rel_insert_input"] = None
    travel_log_id: Optional[Any] = None
    travel_miles: Optional[Any] = None
    travel_miles_unit_price_cents: Optional[int] = None
    travel_started_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    work_ended_at: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log: Optional["work_logs_obj_rel_insert_input"] = None
    work_log_id: Optional[Any] = None
    work_site: Optional["work_sites_obj_rel_insert_input"] = None
    work_site_id: Optional[Any] = None
    work_started_at: Optional[Any] = None


class combined_logs_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    expense_log_id: Optional[order_by] = None
    expense_total_cents: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    product_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    travel_ended_at: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_log_id: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    travel_started_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_ended_at: Optional[order_by] = None
    work_hours: Optional[order_by] = None
    work_log_id: Optional[order_by] = None
    work_site_id: Optional[order_by] = None
    work_started_at: Optional[order_by] = None


class combined_logs_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    expense_log_id: Optional[order_by] = None
    expense_total_cents: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    product_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    travel_ended_at: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_log_id: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    travel_started_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_ended_at: Optional[order_by] = None
    work_hours: Optional[order_by] = None
    work_log_id: Optional[order_by] = None
    work_site_id: Optional[order_by] = None
    work_started_at: Optional[order_by] = None


class combined_logs_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    expense_log: Optional["expense_logs_order_by"] = None
    expense_log_id: Optional[order_by] = None
    expense_total_cents: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    next_shifts_aggregate: Optional["agent_shifts_aggregate_order_by"] = None
    notesj: Optional[order_by] = None
    prev_shifts_aggregate: Optional["agent_shifts_aggregate_order_by"] = None
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None
    shifts_aggregate: Optional["agent_shifts_aggregate_order_by"] = None
    started_at: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    travel_ended_at: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_log: Optional["travel_logs_order_by"] = None
    travel_log_id: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    travel_started_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_ended_at: Optional[order_by] = None
    work_hours: Optional[order_by] = None
    work_log: Optional["work_logs_order_by"] = None
    work_log_id: Optional[order_by] = None
    work_site: Optional["work_sites_order_by"] = None
    work_site_id: Optional[order_by] = None
    work_started_at: Optional[order_by] = None


class combined_logs_stddev_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_stddev_pop_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_stddev_samp_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_stream_cursor_input(BaseModel):
    initial_value: "combined_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class combined_logs_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    expense_total_cents: Optional[int] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    notesj: Optional[Any] = None
    product_id: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_id: Optional[Any] = None
    travel_ended_at: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_hours_unit_price_cents: Optional[int] = None
    travel_log_id: Optional[Any] = None
    travel_miles: Optional[Any] = None
    travel_miles_unit_price_cents: Optional[int] = None
    travel_started_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    work_ended_at: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_id: Optional[Any] = None
    work_site_id: Optional[Any] = None
    work_started_at: Optional[Any] = None


class combined_logs_sum_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_var_pop_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_var_samp_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class combined_logs_variance_order_by(BaseModel):
    expense_total_cents: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_hours_unit_price_cents: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_miles_unit_price_cents: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class contract_create_args(BaseModel):
    billing_interval: Optional[str] = Field(alias="_billing_interval", default=None)
    contract_id: Optional[Any] = Field(alias="_contract_id", default=None)
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    rules: Optional[Any] = Field(alias="_rules", default=None)
    title: Optional[str] = Field(alias="_title", default=None)
    valid_from: Optional[Any] = Field(alias="_valid_from", default=None)


class contract_delete_args(BaseModel):
    id: Optional[Any] = Field(alias="_id", default=None)


class contract_update_args(BaseModel):
    billing_interval: Optional[str] = Field(alias="_billing_interval", default=None)
    contract_id: Optional[Any] = Field(alias="_contract_id", default=None)
    rules: Optional[Any] = Field(alias="_rules", default=None)
    title: Optional[str] = Field(alias="_title", default=None)
    valid_from: Optional[Any] = Field(alias="_valid_from", default=None)


class create_calloff_ticket_args(BaseModel):
    assigned_agent_ids: Optional[Any] = Field(alias="_assigned_agent_ids", default=None)
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    requesting_party: Optional[str] = Field(alias="_requesting_party", default=None)
    requires_signature: Optional[bool] = Field(
        alias="_requires_signature", default=None
    )
    service_date_start: Optional[Any] = Field(alias="_service_date_start", default=None)
    ticket_notes: Optional[Any] = Field(alias="_ticket_notes", default=None)
    work_site_id: Optional[Any] = Field(alias="_work_site_id", default=None)
    work_site_unconfirmed: Optional[str] = Field(
        alias="_work_site_unconfirmed", default=None
    )


class create_customer_tbd_work_site_args(BaseModel):
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    unconfirmed_title: Optional[str] = Field(alias="_unconfirmed_title", default=None)


class create_customer_work_site_args(BaseModel):
    accounting_id: Optional[str] = Field(alias="_accounting_id", default=None)
    api: Optional[str] = Field(alias="_api", default=None)
    confirmed_at: Optional[Any] = Field(alias="_confirmed_at", default=None)
    county: Optional[str] = Field(alias="_county", default=None)
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    lat: Optional[str] = Field(alias="_lat", default=None)
    lng: Optional[str] = Field(alias="_lng", default=None)
    merge_ids: Optional[Any] = Field(alias="_merge_ids", default=None)
    state: Optional[str] = Field(alias="_state", default=None)
    title: Optional[str] = Field(alias="_title", default=None)


class create_dedicated_ticket_args(BaseModel):
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    order_id: Optional[Any] = Field(alias="_order_id", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    ticket_notes: Optional[Any] = Field(alias="_ticket_notes", default=None)
    work_site_id: Optional[Any] = Field(alias="_work_site_id", default=None)
    work_site_unconfirmed: Optional[str] = Field(
        alias="_work_site_unconfirmed", default=None
    )


class create_invoice_for_endeavor_args(BaseModel):
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    due_in: Optional[int] = Field(alias="_due_in", default=None)
    end_date: Optional[Any] = Field(alias="_end_date", default=None)
    issue_date: Optional[Any] = Field(alias="_issue_date", default=None)
    start_date: Optional[Any] = Field(alias="_start_date", default=None)


class create_travel_log_args(BaseModel):
    arrival_site_id: Optional[Any] = Field(alias="_arrival_site_id", default=None)
    arrival_site_unconfirmed: Optional[str] = Field(
        alias="_arrival_site_unconfirmed", default=None
    )
    arrived_at: Optional[Any] = Field(alias="_arrived_at", default=None)
    departed_at: Optional[Any] = Field(alias="_departed_at", default=None)
    departure_site_id: Optional[Any] = Field(alias="_departure_site_id", default=None)
    departure_site_unconfirmed: Optional[str] = Field(
        alias="_departure_site_unconfirmed", default=None
    )
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    miles_traveled: Optional[int] = Field(alias="_miles_traveled", default=None)
    notesj: Optional[Any] = Field(alias="_notesj", default=None)
    ticket_id: Optional[Any] = Field(alias="_ticket_id", default=None)


class custom_form_definitions_aggregate_bool_exp(BaseModel):
    count: Optional["custom_form_definitions_aggregate_bool_exp_count"] = None


class custom_form_definitions_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[custom_form_definitions_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["custom_form_definitions_bool_exp"] = None
    predicate: "Int_comparison_exp"


class custom_form_definitions_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["custom_form_definitions_max_order_by"] = None
    min: Optional["custom_form_definitions_min_order_by"] = None


class custom_form_definitions_arr_rel_insert_input(BaseModel):
    data: List["custom_form_definitions_insert_input"]
    on_conflict: Optional["custom_form_definitions_on_conflict"] = None


class custom_form_definitions_bool_exp(BaseModel):
    and_: Optional[List["custom_form_definitions_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["custom_form_definitions_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["custom_form_definitions_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    can_import_from_definition: Optional["custom_form_definitions_bool_exp"] = None
    can_import_from_definition_id: Optional["uuid_comparison_exp"] = None
    component_name: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    products_xref_custom_forms: Optional["products_xref_custom_forms_bool_exp"] = None
    products_xref_custom_forms_aggregate: Optional[
        "products_xref_custom_forms_aggregate_bool_exp"
    ] = None
    ticket_custom_form_entries: Optional["ticket_custom_form_entries_bool_exp"] = None
    ticket_custom_form_entries_aggregate: Optional[
        "ticket_custom_form_entries_aggregate_bool_exp"
    ] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None


class custom_form_definitions_insert_input(BaseModel):
    author_id: Optional[str] = None
    can_import_from_definition: Optional[
        "custom_form_definitions_obj_rel_insert_input"
    ] = None
    can_import_from_definition_id: Optional[Any] = None
    component_name: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    products_xref_custom_forms: Optional[
        "products_xref_custom_forms_arr_rel_insert_input"
    ] = None
    ticket_custom_form_entries: Optional[
        "ticket_custom_form_entries_arr_rel_insert_input"
    ] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None


class custom_form_definitions_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    can_import_from_definition_id: Optional[order_by] = None
    component_name: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class custom_form_definitions_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    can_import_from_definition_id: Optional[order_by] = None
    component_name: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class custom_form_definitions_obj_rel_insert_input(BaseModel):
    data: "custom_form_definitions_insert_input"
    on_conflict: Optional["custom_form_definitions_on_conflict"] = None


class custom_form_definitions_on_conflict(BaseModel):
    constraint: custom_form_definitions_constraint
    update_columns: List[custom_form_definitions_update_column]
    where: Optional["custom_form_definitions_bool_exp"] = None


class custom_form_definitions_order_by(BaseModel):
    author_id: Optional[order_by] = None
    can_import_from_definition: Optional["custom_form_definitions_order_by"] = None
    can_import_from_definition_id: Optional[order_by] = None
    component_name: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    products_xref_custom_forms_aggregate: Optional[
        "products_xref_custom_forms_aggregate_order_by"
    ] = None
    ticket_custom_form_entries_aggregate: Optional[
        "ticket_custom_form_entries_aggregate_order_by"
    ] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None


class custom_form_definitions_pk_columns_input(BaseModel):
    id: Any


class custom_form_definitions_set_input(BaseModel):
    author_id: Optional[str] = None
    can_import_from_definition_id: Optional[Any] = None
    component_name: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class custom_form_definitions_stream_cursor_input(BaseModel):
    initial_value: "custom_form_definitions_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class custom_form_definitions_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    can_import_from_definition_id: Optional[Any] = None
    component_name: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class custom_form_definitions_updates(BaseModel):
    set: Optional["custom_form_definitions_set_input"] = Field(
        alias="_set", default=None
    )
    where: "custom_form_definitions_bool_exp"


class custom_form_domains_bool_exp(BaseModel):
    and_: Optional[List["custom_form_domains_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["custom_form_domains_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["custom_form_domains_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    domain: Optional["String_comparison_exp"] = None
    last_used_at: Optional["timestamptz_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    token: Optional["String_comparison_exp"] = None


class custom_form_domains_insert_input(BaseModel):
    created_at: Optional[Any] = None
    domain: Optional[str] = None
    last_used_at: Optional[Any] = None
    organization_name: Optional[str] = None
    token: Optional[str] = None


class custom_form_domains_on_conflict(BaseModel):
    constraint: custom_form_domains_constraint
    update_columns: List[custom_form_domains_update_column]
    where: Optional["custom_form_domains_bool_exp"] = None


class custom_form_domains_order_by(BaseModel):
    created_at: Optional[order_by] = None
    domain: Optional[order_by] = None
    last_used_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    token: Optional[order_by] = None


class custom_form_domains_pk_columns_input(BaseModel):
    domain: str
    organization_name: str
    token: str


class custom_form_domains_set_input(BaseModel):
    created_at: Optional[Any] = None
    domain: Optional[str] = None
    last_used_at: Optional[Any] = None
    organization_name: Optional[str] = None
    token: Optional[str] = None


class custom_form_domains_stream_cursor_input(BaseModel):
    initial_value: "custom_form_domains_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class custom_form_domains_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    domain: Optional[str] = None
    last_used_at: Optional[Any] = None
    organization_name: Optional[str] = None
    token: Optional[str] = None


class custom_form_domains_updates(BaseModel):
    set: Optional["custom_form_domains_set_input"] = Field(alias="_set", default=None)
    where: "custom_form_domains_bool_exp"


class customer_agents_aggregate_bool_exp(BaseModel):
    count: Optional["customer_agents_aggregate_bool_exp_count"] = None


class customer_agents_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[customer_agents_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["customer_agents_bool_exp"] = None
    predicate: "Int_comparison_exp"


class customer_agents_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["customer_agents_max_order_by"] = None
    min: Optional["customer_agents_min_order_by"] = None


class customer_agents_arr_rel_insert_input(BaseModel):
    data: List["customer_agents_insert_input"]
    on_conflict: Optional["customer_agents_on_conflict"] = None


class customer_agents_bool_exp(BaseModel):
    and_: Optional[List["customer_agents_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["customer_agents_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["customer_agents_bool_exp"]] = Field(alias="_or", default=None)
    agent: Optional["users_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    dedicated_since: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class customer_agents_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    dedicated_since: Optional[Any] = None
    deleted_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class customer_agents_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    dedicated_since: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customer_agents_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    dedicated_since: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customer_agents_on_conflict(BaseModel):
    constraint: customer_agents_constraint
    update_columns: List[customer_agents_update_column]
    where: Optional["customer_agents_bool_exp"] = None


class customer_agents_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    agent_id: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    dedicated_since: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customer_agents_pk_columns_input(BaseModel):
    agent_id: str
    customer_id: Any


class customer_agents_set_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    dedicated_since: Optional[Any] = None
    deleted_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class customer_agents_stream_cursor_input(BaseModel):
    initial_value: "customer_agents_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customer_agents_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    dedicated_since: Optional[Any] = None
    deleted_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class customer_agents_updates(BaseModel):
    set: Optional["customer_agents_set_input"] = Field(alias="_set", default=None)
    where: "customer_agents_bool_exp"


class customer_contact_create_args(BaseModel):
    city: Optional[str] = Field(alias="_city", default=None)
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    email: Optional[str] = Field(alias="_email", default=None)
    fname: Optional[str] = Field(alias="_fname", default=None)
    job_title: Optional[str] = Field(alias="_job_title", default=None)
    lname: Optional[str] = Field(alias="_lname", default=None)
    phone_number: Optional[str] = Field(alias="_phone_number", default=None)
    state: Optional[str] = Field(alias="_state", default=None)


class customer_contacts_aggregate_bool_exp(BaseModel):
    count: Optional["customer_contacts_aggregate_bool_exp_count"] = None


class customer_contacts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[customer_contacts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["customer_contacts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class customer_contacts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["customer_contacts_max_order_by"] = None
    min: Optional["customer_contacts_min_order_by"] = None


class customer_contacts_arr_rel_insert_input(BaseModel):
    data: List["customer_contacts_insert_input"]
    on_conflict: Optional["customer_contacts_on_conflict"] = None


class customer_contacts_bool_exp(BaseModel):
    and_: Optional[List["customer_contacts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["customer_contacts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["customer_contacts_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    job_title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["String_comparison_exp"] = None


class customer_contacts_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    job_title: Optional[str] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[str] = None


class customer_contacts_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    job_title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class customer_contacts_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    job_title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class customer_contacts_on_conflict(BaseModel):
    constraint: customer_contacts_constraint
    update_columns: List[customer_contacts_update_column]
    where: Optional["customer_contacts_bool_exp"] = None


class customer_contacts_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    job_title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class customer_contacts_pk_columns_input(BaseModel):
    customer_id: Any
    user_id: str


class customer_contacts_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    job_title: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[str] = None


class customer_contacts_stream_cursor_input(BaseModel):
    initial_value: "customer_contacts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customer_contacts_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    job_title: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[str] = None


class customer_contacts_updates(BaseModel):
    set: Optional["customer_contacts_set_input"] = Field(alias="_set", default=None)
    where: "customer_contacts_bool_exp"


class customer_contracts_aggregate_bool_exp(BaseModel):
    count: Optional["customer_contracts_aggregate_bool_exp_count"] = None


class customer_contracts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[customer_contracts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["customer_contracts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class customer_contracts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["customer_contracts_max_order_by"] = None
    min: Optional["customer_contracts_min_order_by"] = None


class customer_contracts_arr_rel_insert_input(BaseModel):
    data: List["customer_contracts_insert_input"]
    on_conflict: Optional["customer_contracts_on_conflict"] = None


class customer_contracts_bool_exp(BaseModel):
    and_: Optional[List["customer_contracts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["customer_contracts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["customer_contracts_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    ruleset: Optional["time_sheet_rulesets_bool_exp"] = None
    ruleset_id: Optional["uuid_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class customer_contracts_insert_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    id: Optional[Any] = None
    ruleset: Optional["time_sheet_rulesets_obj_rel_insert_input"] = None
    ruleset_id: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class customer_contracts_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    ruleset_id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class customer_contracts_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    ruleset_id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class customer_contracts_on_conflict(BaseModel):
    constraint: customer_contracts_constraint
    update_columns: List[customer_contracts_update_column]
    where: Optional["customer_contracts_bool_exp"] = None


class customer_contracts_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    ruleset: Optional["time_sheet_rulesets_order_by"] = None
    ruleset_id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class customer_contracts_pk_columns_input(BaseModel):
    id: Any


class customer_contracts_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    id: Optional[Any] = None
    ruleset_id: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class customer_contracts_stream_cursor_input(BaseModel):
    initial_value: "customer_contracts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customer_contracts_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    id: Optional[Any] = None
    ruleset_id: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class customer_contracts_updates(BaseModel):
    set: Optional["customer_contracts_set_input"] = Field(alias="_set", default=None)
    where: "customer_contracts_bool_exp"


class customer_create_args(BaseModel):
    abbreviation: Optional[str] = Field(alias="_abbreviation", default=None)
    price_book_id: Optional[Any] = Field(alias="_price_book_id", default=None)
    title: Optional[str] = Field(alias="_title", default=None)


class customer_ledgers_bool_exp(BaseModel):
    and_: Optional[List["customer_ledgers_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["customer_ledgers_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["customer_ledgers_bool_exp"]] = Field(alias="_or", default=None)
    cents_credit: Optional["Int_comparison_exp"] = None
    cents_debit: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None


class customer_ledgers_inc_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None


class customer_ledgers_insert_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    id: Optional[Any] = None


class customer_ledgers_on_conflict(BaseModel):
    constraint: customer_ledgers_constraint
    update_columns: List[customer_ledgers_update_column]
    where: Optional["customer_ledgers_bool_exp"] = None


class customer_ledgers_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    id: Optional[order_by] = None


class customer_ledgers_pk_columns_input(BaseModel):
    id: Any


class customer_ledgers_set_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    id: Optional[Any] = None


class customer_ledgers_stream_cursor_input(BaseModel):
    initial_value: "customer_ledgers_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customer_ledgers_stream_cursor_value_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    id: Optional[Any] = None


class customer_ledgers_updates(BaseModel):
    inc: Optional["customer_ledgers_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["customer_ledgers_set_input"] = Field(alias="_set", default=None)
    where: "customer_ledgers_bool_exp"


class customer_payments_aggregate_bool_exp(BaseModel):
    count: Optional["customer_payments_aggregate_bool_exp_count"] = None


class customer_payments_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[customer_payments_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["customer_payments_bool_exp"] = None
    predicate: "Int_comparison_exp"


class customer_payments_aggregate_order_by(BaseModel):
    avg: Optional["customer_payments_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["customer_payments_max_order_by"] = None
    min: Optional["customer_payments_min_order_by"] = None
    stddev: Optional["customer_payments_stddev_order_by"] = None
    stddev_pop: Optional["customer_payments_stddev_pop_order_by"] = None
    stddev_samp: Optional["customer_payments_stddev_samp_order_by"] = None
    sum: Optional["customer_payments_sum_order_by"] = None
    var_pop: Optional["customer_payments_var_pop_order_by"] = None
    var_samp: Optional["customer_payments_var_samp_order_by"] = None
    variance: Optional["customer_payments_variance_order_by"] = None


class customer_payments_append_input(BaseModel):
    notesj: Optional[Any] = None


class customer_payments_arr_rel_insert_input(BaseModel):
    data: List["customer_payments_insert_input"]
    on_conflict: Optional["customer_payments_on_conflict"] = None


class customer_payments_avg_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_bool_exp(BaseModel):
    and_: Optional[List["customer_payments_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["customer_payments_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["customer_payments_bool_exp"]] = Field(alias="_or", default=None)
    amount_in_cents: Optional["Int_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    paid_at: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class customer_payments_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class customer_payments_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class customer_payments_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class customer_payments_inc_input(BaseModel):
    amount_in_cents: Optional[int] = None


class customer_payments_insert_input(BaseModel):
    amount_in_cents: Optional[int] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    paid_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class customer_payments_max_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customer_payments_min_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customer_payments_on_conflict(BaseModel):
    constraint: customer_payments_constraint
    update_columns: List[customer_payments_update_column]
    where: Optional["customer_payments_bool_exp"] = None


class customer_payments_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customer_payments_pk_columns_input(BaseModel):
    id: Any


class customer_payments_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class customer_payments_set_input(BaseModel):
    amount_in_cents: Optional[int] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    paid_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class customer_payments_stddev_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_stddev_pop_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_stddev_samp_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_stream_cursor_input(BaseModel):
    initial_value: "customer_payments_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customer_payments_stream_cursor_value_input(BaseModel):
    amount_in_cents: Optional[int] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    paid_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class customer_payments_sum_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_updates(BaseModel):
    append: Optional["customer_payments_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["customer_payments_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["customer_payments_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["customer_payments_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["customer_payments_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["customer_payments_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["customer_payments_set_input"] = Field(alias="_set", default=None)
    where: "customer_payments_bool_exp"


class customer_payments_var_pop_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_var_samp_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_payments_variance_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class customer_timezone_history_bool_exp(BaseModel):
    and_: Optional[List["customer_timezone_history_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["customer_timezone_history_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["customer_timezone_history_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    timezone_name: Optional["String_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class customer_timezone_history_insert_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    timezone_name: Optional[str] = None
    valid_from: Optional[Any] = None


class customer_timezone_history_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    timezone_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class customer_timezone_history_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    timezone_name: Optional[str] = None
    valid_from: Optional[Any] = None


class customer_timezone_history_stream_cursor_input(BaseModel):
    initial_value: "customer_timezone_history_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customer_timezone_history_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    timezone_name: Optional[str] = None
    valid_from: Optional[Any] = None


class customer_timezone_history_updates(BaseModel):
    set: Optional["customer_timezone_history_set_input"] = Field(
        alias="_set", default=None
    )
    where: "customer_timezone_history_bool_exp"


class customers_aggregate_bool_exp(BaseModel):
    bool_and: Optional["customers_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["customers_aggregate_bool_exp_bool_or"] = None
    count: Optional["customers_aggregate_bool_exp_count"] = None


class customers_aggregate_bool_exp_bool_and(BaseModel):
    arguments: (
        customers_select_column_customers_aggregate_bool_exp_bool_and_arguments_columns
    )
    distinct: Optional[bool] = None
    filter: Optional["customers_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class customers_aggregate_bool_exp_bool_or(BaseModel):
    arguments: (
        customers_select_column_customers_aggregate_bool_exp_bool_or_arguments_columns
    )
    distinct: Optional[bool] = None
    filter: Optional["customers_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class customers_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[customers_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["customers_bool_exp"] = None
    predicate: "Int_comparison_exp"


class customers_aggregate_order_by(BaseModel):
    avg: Optional["customers_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["customers_max_order_by"] = None
    min: Optional["customers_min_order_by"] = None
    stddev: Optional["customers_stddev_order_by"] = None
    stddev_pop: Optional["customers_stddev_pop_order_by"] = None
    stddev_samp: Optional["customers_stddev_samp_order_by"] = None
    sum: Optional["customers_sum_order_by"] = None
    var_pop: Optional["customers_var_pop_order_by"] = None
    var_samp: Optional["customers_var_samp_order_by"] = None
    variance: Optional["customers_variance_order_by"] = None


class customers_arr_rel_insert_input(BaseModel):
    data: List["customers_insert_input"]
    on_conflict: Optional["customers_on_conflict"] = None


class customers_avg_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_bool_exp(BaseModel):
    and_: Optional[List["customers_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["customers_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["customers_bool_exp"]] = Field(alias="_or", default=None)
    abbreviation: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    combined_logs: Optional["combined_logs_bool_exp"] = None
    combined_logs_aggregate: Optional["combined_logs_aggregate_bool_exp"] = None
    contacts: Optional["customer_contacts_bool_exp"] = None
    contacts_aggregate: Optional["customer_contacts_aggregate_bool_exp"] = None
    contracts: Optional["customer_contracts_bool_exp"] = None
    contracts_aggregate: Optional["customer_contracts_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer_agents: Optional["customer_agents_bool_exp"] = None
    customer_agents_aggregate: Optional["customer_agents_aggregate_bool_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    external_id: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice_pivot: Optional["invoice_pivot_options_enum_comparison_exp"] = None
    invoice_terms: Optional["Int_comparison_exp"] = None
    invoices: Optional["invoices_bool_exp"] = None
    invoices_aggregate: Optional["invoices_aggregate_bool_exp"] = None
    mailing_address: Optional["String_comparison_exp"] = None
    orders: Optional["demand_orders_bool_exp"] = None
    orders_aggregate: Optional["demand_orders_aggregate_bool_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    payments: Optional["customer_payments_bool_exp"] = None
    payments_aggregate: Optional["customer_payments_aggregate_bool_exp"] = None
    price_book: Optional["price_books_bool_exp"] = None
    price_book_id: Optional["uuid_comparison_exp"] = None
    quotes: Optional["quote_quotes_bool_exp"] = None
    quotes_aggregate: Optional["quote_quotes_aggregate_bool_exp"] = None
    requires_signature: Optional["Boolean_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_sites: Optional["customers_xref_work_sites_bool_exp"] = None
    work_sites_aggregate: Optional["customers_xref_work_sites_aggregate_bool_exp"] = (
        None
    )


class customers_inc_input(BaseModel):
    invoice_terms: Optional[int] = None


class customers_insert_input(BaseModel):
    abbreviation: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    combined_logs: Optional["combined_logs_arr_rel_insert_input"] = None
    contacts: Optional["customer_contacts_arr_rel_insert_input"] = None
    contracts: Optional["customer_contracts_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    customer_agents: Optional["customer_agents_arr_rel_insert_input"] = None
    deleted_at: Optional[Any] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    invoice_pivot: Optional[invoice_pivot_options_enum] = None
    invoice_terms: Optional[int] = None
    invoices: Optional["invoices_arr_rel_insert_input"] = None
    mailing_address: Optional[str] = None
    orders: Optional["demand_orders_arr_rel_insert_input"] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    payments: Optional["customer_payments_arr_rel_insert_input"] = None
    price_book: Optional["price_books_obj_rel_insert_input"] = None
    price_book_id: Optional[Any] = None
    quotes: Optional["quote_quotes_arr_rel_insert_input"] = None
    requires_signature: Optional[bool] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    work_sites: Optional["customers_xref_work_sites_arr_rel_insert_input"] = None


class customers_max_order_by(BaseModel):
    abbreviation: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_terms: Optional[order_by] = None
    mailing_address: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customers_min_order_by(BaseModel):
    abbreviation: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_terms: Optional[order_by] = None
    mailing_address: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class customers_obj_rel_insert_input(BaseModel):
    data: "customers_insert_input"
    on_conflict: Optional["customers_on_conflict"] = None


class customers_on_conflict(BaseModel):
    constraint: customers_constraint
    update_columns: List[customers_update_column]
    where: Optional["customers_bool_exp"] = None


class customers_order_by(BaseModel):
    abbreviation: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    combined_logs_aggregate: Optional["combined_logs_aggregate_order_by"] = None
    contacts_aggregate: Optional["customer_contacts_aggregate_order_by"] = None
    contracts_aggregate: Optional["customer_contracts_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    customer_agents_aggregate: Optional["customer_agents_aggregate_order_by"] = None
    deleted_at: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_pivot: Optional[order_by] = None
    invoice_terms: Optional[order_by] = None
    invoices_aggregate: Optional["invoices_aggregate_order_by"] = None
    mailing_address: Optional[order_by] = None
    orders_aggregate: Optional["demand_orders_aggregate_order_by"] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    payments_aggregate: Optional["customer_payments_aggregate_order_by"] = None
    price_book: Optional["price_books_order_by"] = None
    price_book_id: Optional[order_by] = None
    quotes_aggregate: Optional["quote_quotes_aggregate_order_by"] = None
    requires_signature: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_sites_aggregate: Optional["customers_xref_work_sites_aggregate_order_by"] = (
        None
    )


class customers_pk_columns_input(BaseModel):
    id: Any


class customers_set_input(BaseModel):
    abbreviation: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    invoice_pivot: Optional[invoice_pivot_options_enum] = None
    invoice_terms: Optional[int] = None
    mailing_address: Optional[str] = None
    organization_name: Optional[str] = None
    price_book_id: Optional[Any] = None
    requires_signature: Optional[bool] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class customers_stddev_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_stddev_pop_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_stddev_samp_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_stream_cursor_input(BaseModel):
    initial_value: "customers_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customers_stream_cursor_value_input(BaseModel):
    abbreviation: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    invoice_pivot: Optional[invoice_pivot_options_enum] = None
    invoice_terms: Optional[int] = None
    mailing_address: Optional[str] = None
    organization_name: Optional[str] = None
    price_book_id: Optional[Any] = None
    requires_signature: Optional[bool] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class customers_sum_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_updates(BaseModel):
    inc: Optional["customers_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["customers_set_input"] = Field(alias="_set", default=None)
    where: "customers_bool_exp"


class customers_var_pop_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_var_samp_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_variance_order_by(BaseModel):
    invoice_terms: Optional[order_by] = None


class customers_xref_work_sites_aggregate_bool_exp(BaseModel):
    count: Optional["customers_xref_work_sites_aggregate_bool_exp_count"] = None


class customers_xref_work_sites_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[customers_xref_work_sites_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["customers_xref_work_sites_bool_exp"] = None
    predicate: "Int_comparison_exp"


class customers_xref_work_sites_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["customers_xref_work_sites_max_order_by"] = None
    min: Optional["customers_xref_work_sites_min_order_by"] = None


class customers_xref_work_sites_arr_rel_insert_input(BaseModel):
    data: List["customers_xref_work_sites_insert_input"]
    on_conflict: Optional["customers_xref_work_sites_on_conflict"] = None


class customers_xref_work_sites_bool_exp(BaseModel):
    and_: Optional[List["customers_xref_work_sites_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["customers_xref_work_sites_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["customers_xref_work_sites_bool_exp"]] = Field(
        alias="_or", default=None
    )
    accounting_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    work_site: Optional["work_sites_bool_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None


class customers_xref_work_sites_insert_input(BaseModel):
    accounting_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    started_at: Optional[Any] = None
    work_site: Optional["work_sites_obj_rel_insert_input"] = None
    work_site_id: Optional[Any] = None


class customers_xref_work_sites_max_order_by(BaseModel):
    accounting_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class customers_xref_work_sites_min_order_by(BaseModel):
    accounting_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class customers_xref_work_sites_on_conflict(BaseModel):
    constraint: customers_xref_work_sites_constraint
    update_columns: List[customers_xref_work_sites_update_column]
    where: Optional["customers_xref_work_sites_bool_exp"] = None


class customers_xref_work_sites_order_by(BaseModel):
    accounting_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    work_site: Optional["work_sites_order_by"] = None
    work_site_id: Optional[order_by] = None


class customers_xref_work_sites_pk_columns_input(BaseModel):
    id: Any


class customers_xref_work_sites_set_input(BaseModel):
    accounting_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    started_at: Optional[Any] = None
    work_site_id: Optional[Any] = None


class customers_xref_work_sites_stream_cursor_input(BaseModel):
    initial_value: "customers_xref_work_sites_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class customers_xref_work_sites_stream_cursor_value_input(BaseModel):
    accounting_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    started_at: Optional[Any] = None
    work_site_id: Optional[Any] = None


class customers_xref_work_sites_updates(BaseModel):
    set: Optional["customers_xref_work_sites_set_input"] = Field(
        alias="_set", default=None
    )
    where: "customers_xref_work_sites_bool_exp"


class daily_logs_summary_args(BaseModel):
    timezone: Optional[str] = Field(alias="_timezone", default=None)


class date_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class delivery_statuses_bool_exp(BaseModel):
    and_: Optional[List["delivery_statuses_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["delivery_statuses_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["delivery_statuses_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class delivery_statuses_enum_comparison_exp(BaseModel):
    eq: Optional[delivery_statuses_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[delivery_statuses_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[delivery_statuses_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[delivery_statuses_enum]] = Field(alias="_nin", default=None)


class delivery_statuses_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class delivery_statuses_on_conflict(BaseModel):
    constraint: delivery_statuses_constraint
    update_columns: List[delivery_statuses_update_column]
    where: Optional["delivery_statuses_bool_exp"] = None


class delivery_statuses_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class delivery_statuses_pk_columns_input(BaseModel):
    value: str


class delivery_statuses_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class delivery_statuses_stream_cursor_input(BaseModel):
    initial_value: "delivery_statuses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class delivery_statuses_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class delivery_statuses_updates(BaseModel):
    set: Optional["delivery_statuses_set_input"] = Field(alias="_set", default=None)
    where: "delivery_statuses_bool_exp"


class demand_create_order_args(BaseModel):
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    order_id: Optional[Any] = Field(alias="_order_id", default=None)
    ref: Optional[str] = Field(alias="_ref", default=None)
    service_date_end: Optional[Any] = Field(alias="_service_date_end", default=None)
    service_date_start: Optional[Any] = Field(alias="_service_date_start", default=None)


class demand_create_order_from_quote_args(BaseModel):
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)
    service_date_end: Optional[Any] = Field(alias="_service_date_end", default=None)
    service_date_start: Optional[Any] = Field(alias="_service_date_start", default=None)


class demand_create_order_item_args(BaseModel):
    agent_id: Optional[str] = Field(alias="_agent_id", default=None)
    manually_scheduled_at: Optional[Any] = Field(
        alias="_manually_scheduled_at", default=None
    )
    notes: Optional[Any] = Field(alias="_notes", default=None)
    order_id: Optional[Any] = Field(alias="_order_id", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    product_unconfirmed: Optional[str] = Field(
        alias="_product_unconfirmed", default=None
    )
    requires_signature: Optional[bool] = Field(
        alias="_requires_signature", default=None
    )
    work_site_id: Optional[Any] = Field(alias="_work_site_id", default=None)


class demand_order_event_types_bool_exp(BaseModel):
    and_: Optional[List["demand_order_event_types_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["demand_order_event_types_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["demand_order_event_types_bool_exp"]] = Field(
        alias="_or", default=None
    )
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class demand_order_event_types_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class demand_order_event_types_on_conflict(BaseModel):
    constraint: demand_order_event_types_constraint
    update_columns: List[demand_order_event_types_update_column]
    where: Optional["demand_order_event_types_bool_exp"] = None


class demand_order_event_types_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class demand_order_event_types_pk_columns_input(BaseModel):
    value: str


class demand_order_event_types_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class demand_order_event_types_stream_cursor_input(BaseModel):
    initial_value: "demand_order_event_types_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class demand_order_event_types_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class demand_order_event_types_updates(BaseModel):
    set: Optional["demand_order_event_types_set_input"] = Field(
        alias="_set", default=None
    )
    where: "demand_order_event_types_bool_exp"


class demand_order_events_append_input(BaseModel):
    notesj: Optional[Any] = None


class demand_order_events_bool_exp(BaseModel):
    and_: Optional[List["demand_order_events_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["demand_order_events_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["demand_order_events_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    event_type: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    order_id: Optional["uuid_comparison_exp"] = None


class demand_order_events_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class demand_order_events_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class demand_order_events_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class demand_order_events_insert_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    event_type: Optional[str] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order_id: Optional[Any] = None


class demand_order_events_on_conflict(BaseModel):
    constraint: demand_order_events_constraint
    update_columns: List[demand_order_events_update_column]
    where: Optional["demand_order_events_bool_exp"] = None


class demand_order_events_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    event_type: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    order_id: Optional[order_by] = None


class demand_order_events_pk_columns_input(BaseModel):
    id: Any


class demand_order_events_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class demand_order_events_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    event_type: Optional[str] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order_id: Optional[Any] = None


class demand_order_events_stream_cursor_input(BaseModel):
    initial_value: "demand_order_events_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class demand_order_events_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    event_type: Optional[str] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order_id: Optional[Any] = None


class demand_order_events_updates(BaseModel):
    append: Optional["demand_order_events_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["demand_order_events_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["demand_order_events_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["demand_order_events_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["demand_order_events_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["demand_order_events_set_input"] = Field(alias="_set", default=None)
    where: "demand_order_events_bool_exp"


class demand_order_items_aggregate_bool_exp(BaseModel):
    bool_and: Optional["demand_order_items_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["demand_order_items_aggregate_bool_exp_bool_or"] = None
    count: Optional["demand_order_items_aggregate_bool_exp_count"] = None


class demand_order_items_aggregate_bool_exp_bool_and(BaseModel):
    arguments: demand_order_items_select_column_demand_order_items_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["demand_order_items_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class demand_order_items_aggregate_bool_exp_bool_or(BaseModel):
    arguments: demand_order_items_select_column_demand_order_items_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["demand_order_items_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class demand_order_items_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[demand_order_items_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["demand_order_items_bool_exp"] = None
    predicate: "Int_comparison_exp"


class demand_order_items_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["demand_order_items_max_order_by"] = None
    min: Optional["demand_order_items_min_order_by"] = None


class demand_order_items_arr_rel_insert_input(BaseModel):
    data: List["demand_order_items_insert_input"]
    on_conflict: Optional["demand_order_items_on_conflict"] = None


class demand_order_items_bool_exp(BaseModel):
    and_: Optional[List["demand_order_items_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["demand_order_items_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["demand_order_items_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent_id: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    order: Optional["demand_orders_bool_exp"] = None
    order_id: Optional["uuid_comparison_exp"] = None
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    product_unconfirmed: Optional["String_comparison_exp"] = None
    requires_signature: Optional["Boolean_comparison_exp"] = None
    tickets: Optional["tickets_bool_exp"] = None
    tickets_aggregate: Optional["tickets_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_site: Optional["work_sites_bool_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None


class demand_order_items_insert_input(BaseModel):
    agent_id: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    order: Optional["demand_orders_obj_rel_insert_input"] = None
    order_id: Optional[Any] = None
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None
    product_unconfirmed: Optional[str] = None
    requires_signature: Optional[bool] = None
    tickets: Optional["tickets_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    work_site: Optional["work_sites_obj_rel_insert_input"] = None
    work_site_id: Optional[Any] = None


class demand_order_items_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    order_id: Optional[order_by] = None
    product_id: Optional[order_by] = None
    product_unconfirmed: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class demand_order_items_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    order_id: Optional[order_by] = None
    product_id: Optional[order_by] = None
    product_unconfirmed: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class demand_order_items_obj_rel_insert_input(BaseModel):
    data: "demand_order_items_insert_input"
    on_conflict: Optional["demand_order_items_on_conflict"] = None


class demand_order_items_on_conflict(BaseModel):
    constraint: demand_order_items_constraint
    update_columns: List[demand_order_items_update_column]
    where: Optional["demand_order_items_bool_exp"] = None


class demand_order_items_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    order: Optional["demand_orders_order_by"] = None
    order_id: Optional[order_by] = None
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None
    product_unconfirmed: Optional[order_by] = None
    requires_signature: Optional[order_by] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    work_site: Optional["work_sites_order_by"] = None
    work_site_id: Optional[order_by] = None


class demand_order_items_pk_columns_input(BaseModel):
    id: Any


class demand_order_items_set_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    order_id: Optional[Any] = None
    product_id: Optional[Any] = None
    product_unconfirmed: Optional[str] = None
    requires_signature: Optional[bool] = None
    updated_at: Optional[Any] = None
    work_site_id: Optional[Any] = None


class demand_order_items_stream_cursor_input(BaseModel):
    initial_value: "demand_order_items_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class demand_order_items_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    order_id: Optional[Any] = None
    product_id: Optional[Any] = None
    product_unconfirmed: Optional[str] = None
    requires_signature: Optional[bool] = None
    updated_at: Optional[Any] = None
    work_site_id: Optional[Any] = None


class demand_order_items_updates(BaseModel):
    set: Optional["demand_order_items_set_input"] = Field(alias="_set", default=None)
    where: "demand_order_items_bool_exp"


class demand_orders_aggregate_bool_exp(BaseModel):
    count: Optional["demand_orders_aggregate_bool_exp_count"] = None


class demand_orders_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[demand_orders_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["demand_orders_bool_exp"] = None
    predicate: "Int_comparison_exp"


class demand_orders_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["demand_orders_max_order_by"] = None
    min: Optional["demand_orders_min_order_by"] = None


class demand_orders_append_input(BaseModel):
    notesj: Optional[Any] = None


class demand_orders_arr_rel_insert_input(BaseModel):
    data: List["demand_orders_insert_input"]
    on_conflict: Optional["demand_orders_on_conflict"] = None


class demand_orders_bool_exp(BaseModel):
    and_: Optional[List["demand_orders_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["demand_orders_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["demand_orders_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    created_from_quote_id: Optional["uuid_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    items: Optional["demand_order_items_bool_exp"] = None
    items_aggregate: Optional["demand_order_items_aggregate_bool_exp"] = None
    lifecycle_status_by_lifecycle_status: Optional["lifecycle_statuses_bool_exp"] = (
        Field(alias="lifecycleStatusByLifecycleStatus", default=None)
    )
    lifecycle_status: Optional["lifecycle_statuses_enum_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    ref: Optional["String_comparison_exp"] = None
    requesting_party: Optional["String_comparison_exp"] = None
    service_date_end: Optional["timestamptz_comparison_exp"] = None
    service_date_start: Optional["timestamptz_comparison_exp"] = None
    source_quote: Optional["quote_quotes_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_work_orders_bool_exp"] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_work_orders_aggregate_bool_exp"
    ] = None


class demand_orders_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class demand_orders_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class demand_orders_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class demand_orders_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    created_from_quote_id: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    items: Optional["demand_order_items_arr_rel_insert_input"] = None
    lifecycle_status_by_lifecycle_status: Optional[
        "lifecycle_statuses_obj_rel_insert_input"
    ] = Field(alias="lifecycleStatusByLifecycleStatus", default=None)
    lifecycle_status: Optional[lifecycle_statuses_enum] = None
    notesj: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    requesting_party: Optional[str] = None
    service_date_end: Optional[Any] = None
    service_date_start: Optional[Any] = None
    source_quote: Optional["quote_quotes_obj_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    xref_media_uploads: Optional["media_xref_work_orders_arr_rel_insert_input"] = None


class demand_orders_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    created_from_quote_id: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    requesting_party: Optional[order_by] = None
    service_date_end: Optional[order_by] = None
    service_date_start: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class demand_orders_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    created_from_quote_id: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    requesting_party: Optional[order_by] = None
    service_date_end: Optional[order_by] = None
    service_date_start: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class demand_orders_obj_rel_insert_input(BaseModel):
    data: "demand_orders_insert_input"
    on_conflict: Optional["demand_orders_on_conflict"] = None


class demand_orders_on_conflict(BaseModel):
    constraint: demand_orders_constraint
    update_columns: List[demand_orders_update_column]
    where: Optional["demand_orders_bool_exp"] = None


class demand_orders_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    created_from_quote_id: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    items_aggregate: Optional["demand_order_items_aggregate_order_by"] = None
    lifecycle_status_by_lifecycle_status: Optional["lifecycle_statuses_order_by"] = (
        Field(alias="lifecycleStatusByLifecycleStatus", default=None)
    )
    lifecycle_status: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    requesting_party: Optional[order_by] = None
    service_date_end: Optional[order_by] = None
    service_date_start: Optional[order_by] = None
    source_quote: Optional["quote_quotes_order_by"] = None
    updated_at: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_work_orders_aggregate_order_by"
    ] = None


class demand_orders_pk_columns_input(BaseModel):
    id: Any


class demand_orders_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class demand_orders_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    created_from_quote_id: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    lifecycle_status: Optional[lifecycle_statuses_enum] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    requesting_party: Optional[str] = None
    service_date_end: Optional[Any] = None
    service_date_start: Optional[Any] = None
    updated_at: Optional[Any] = None


class demand_orders_stream_cursor_input(BaseModel):
    initial_value: "demand_orders_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class demand_orders_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    created_from_quote_id: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    lifecycle_status: Optional[lifecycle_statuses_enum] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    requesting_party: Optional[str] = None
    service_date_end: Optional[Any] = None
    service_date_start: Optional[Any] = None
    updated_at: Optional[Any] = None


class demand_orders_updates(BaseModel):
    append: Optional["demand_orders_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["demand_orders_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["demand_orders_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["demand_orders_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["demand_orders_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["demand_orders_set_input"] = Field(alias="_set", default=None)
    where: "demand_orders_bool_exp"


class event_notifications_aggregate_bool_exp(BaseModel):
    count: Optional["event_notifications_aggregate_bool_exp_count"] = None


class event_notifications_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[event_notifications_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["event_notifications_bool_exp"] = None
    predicate: "Int_comparison_exp"


class event_notifications_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["event_notifications_max_order_by"] = None
    min: Optional["event_notifications_min_order_by"] = None


class event_notifications_append_input(BaseModel):
    context: Optional[Any] = None
    payload: Optional[Any] = None


class event_notifications_arr_rel_insert_input(BaseModel):
    data: List["event_notifications_insert_input"]
    on_conflict: Optional["event_notifications_on_conflict"] = None


class event_notifications_bool_exp(BaseModel):
    and_: Optional[List["event_notifications_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["event_notifications_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["event_notifications_bool_exp"]] = Field(
        alias="_or", default=None
    )
    context: Optional["jsonb_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    event_type_by_event_type: Optional["event_types_bool_exp"] = Field(
        alias="eventTypeByEventType", default=None
    )
    event_id: Optional["uuid_comparison_exp"] = None
    event_type: Optional["String_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    payload: Optional["jsonb_comparison_exp"] = None


class event_notifications_delete_at_path_input(BaseModel):
    context: Optional[List[str]] = None
    payload: Optional[List[str]] = None


class event_notifications_delete_elem_input(BaseModel):
    context: Optional[int] = None
    payload: Optional[int] = None


class event_notifications_delete_key_input(BaseModel):
    context: Optional[str] = None
    payload: Optional[str] = None


class event_notifications_insert_input(BaseModel):
    context: Optional[Any] = None
    created_at: Optional[Any] = None
    event_type_by_event_type: Optional["event_types_obj_rel_insert_input"] = Field(
        alias="eventTypeByEventType", default=None
    )
    event_id: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    payload: Optional[Any] = None


class event_notifications_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    event_id: Optional[order_by] = None
    event_type: Optional[order_by] = None
    organization_name: Optional[order_by] = None


class event_notifications_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    event_id: Optional[order_by] = None
    event_type: Optional[order_by] = None
    organization_name: Optional[order_by] = None


class event_notifications_on_conflict(BaseModel):
    constraint: event_notifications_constraint
    update_columns: List[event_notifications_update_column]
    where: Optional["event_notifications_bool_exp"] = None


class event_notifications_order_by(BaseModel):
    context: Optional[order_by] = None
    created_at: Optional[order_by] = None
    event_type_by_event_type: Optional["event_types_order_by"] = Field(
        alias="eventTypeByEventType", default=None
    )
    event_id: Optional[order_by] = None
    event_type: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    payload: Optional[order_by] = None


class event_notifications_pk_columns_input(BaseModel):
    event_id: Any


class event_notifications_prepend_input(BaseModel):
    context: Optional[Any] = None
    payload: Optional[Any] = None


class event_notifications_set_input(BaseModel):
    context: Optional[Any] = None
    created_at: Optional[Any] = None
    event_id: Optional[Any] = None
    organization_name: Optional[str] = None
    payload: Optional[Any] = None


class event_notifications_stream_cursor_input(BaseModel):
    initial_value: "event_notifications_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class event_notifications_stream_cursor_value_input(BaseModel):
    context: Optional[Any] = None
    created_at: Optional[Any] = None
    event_id: Optional[Any] = None
    event_type: Optional[str] = None
    organization_name: Optional[str] = None
    payload: Optional[Any] = None


class event_notifications_updates(BaseModel):
    append: Optional["event_notifications_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["event_notifications_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["event_notifications_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["event_notifications_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["event_notifications_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["event_notifications_set_input"] = Field(alias="_set", default=None)
    where: "event_notifications_bool_exp"


class event_types_aggregate_bool_exp(BaseModel):
    count: Optional["event_types_aggregate_bool_exp_count"] = None


class event_types_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[event_types_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["event_types_bool_exp"] = None
    predicate: "Int_comparison_exp"


class event_types_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["event_types_max_order_by"] = None
    min: Optional["event_types_min_order_by"] = None


class event_types_arr_rel_insert_input(BaseModel):
    data: List["event_types_insert_input"]
    on_conflict: Optional["event_types_on_conflict"] = None


class event_types_bool_exp(BaseModel):
    and_: Optional[List["event_types_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["event_types_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["event_types_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    event_notifications: Optional["event_notifications_bool_exp"] = None
    event_notifications_aggregate: Optional[
        "event_notifications_aggregate_bool_exp"
    ] = None
    feature: Optional["feature_flags_bool_exp"] = None
    feature_flag: Optional["feature_flags_enum_comparison_exp"] = None
    notification_prefs: Optional["notification_prefs_bool_exp"] = None
    notification_prefs_aggregate: Optional["notification_prefs_aggregate_bool_exp"] = (
        None
    )
    value: Optional["String_comparison_exp"] = None


class event_types_insert_input(BaseModel):
    comment: Optional[str] = None
    event_notifications: Optional["event_notifications_arr_rel_insert_input"] = None
    feature: Optional["feature_flags_obj_rel_insert_input"] = None
    feature_flag: Optional[feature_flags_enum] = None
    notification_prefs: Optional["notification_prefs_arr_rel_insert_input"] = None
    value: Optional[str] = None


class event_types_max_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class event_types_min_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class event_types_obj_rel_insert_input(BaseModel):
    data: "event_types_insert_input"
    on_conflict: Optional["event_types_on_conflict"] = None


class event_types_on_conflict(BaseModel):
    constraint: event_types_constraint
    update_columns: List[event_types_update_column]
    where: Optional["event_types_bool_exp"] = None


class event_types_order_by(BaseModel):
    comment: Optional[order_by] = None
    event_notifications_aggregate: Optional[
        "event_notifications_aggregate_order_by"
    ] = None
    feature: Optional["feature_flags_order_by"] = None
    feature_flag: Optional[order_by] = None
    notification_prefs_aggregate: Optional["notification_prefs_aggregate_order_by"] = (
        None
    )
    value: Optional[order_by] = None


class event_types_pk_columns_input(BaseModel):
    value: str


class event_types_set_input(BaseModel):
    comment: Optional[str] = None
    feature_flag: Optional[feature_flags_enum] = None
    value: Optional[str] = None


class event_types_stream_cursor_input(BaseModel):
    initial_value: "event_types_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class event_types_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    feature_flag: Optional[feature_flags_enum] = None
    value: Optional[str] = None


class event_types_updates(BaseModel):
    set: Optional["event_types_set_input"] = Field(alias="_set", default=None)
    where: "event_types_bool_exp"


class expense_logs_aggregate_bool_exp(BaseModel):
    bool_and: Optional["expense_logs_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["expense_logs_aggregate_bool_exp_bool_or"] = None
    count: Optional["expense_logs_aggregate_bool_exp_count"] = None


class expense_logs_aggregate_bool_exp_bool_and(BaseModel):
    arguments: expense_logs_select_column_expense_logs_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["expense_logs_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class expense_logs_aggregate_bool_exp_bool_or(BaseModel):
    arguments: expense_logs_select_column_expense_logs_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["expense_logs_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class expense_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[expense_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["expense_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class expense_logs_aggregate_order_by(BaseModel):
    avg: Optional["expense_logs_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["expense_logs_max_order_by"] = None
    min: Optional["expense_logs_min_order_by"] = None
    stddev: Optional["expense_logs_stddev_order_by"] = None
    stddev_pop: Optional["expense_logs_stddev_pop_order_by"] = None
    stddev_samp: Optional["expense_logs_stddev_samp_order_by"] = None
    sum: Optional["expense_logs_sum_order_by"] = None
    var_pop: Optional["expense_logs_var_pop_order_by"] = None
    var_samp: Optional["expense_logs_var_samp_order_by"] = None
    variance: Optional["expense_logs_variance_order_by"] = None


class expense_logs_append_input(BaseModel):
    notesj: Optional[Any] = None


class expense_logs_arr_rel_insert_input(BaseModel):
    data: List["expense_logs_insert_input"]
    on_conflict: Optional["expense_logs_on_conflict"] = None


class expense_logs_avg_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_bool_exp(BaseModel):
    and_: Optional[List["expense_logs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["expense_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["expense_logs_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    cents_recorded: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    expense_type_by_expense_type: Optional["expense_types_bool_exp"] = Field(
        alias="expenseTypeByExpenseType", default=None
    )
    expense_type: Optional["expense_types_enum_comparison_exp"] = None
    expensed_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice: Optional["invoices_bool_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    is_external: Optional["Boolean_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_expense_logs_bool_exp"] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_expense_logs_aggregate_bool_exp"
    ] = None


class expense_logs_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class expense_logs_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class expense_logs_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class expense_logs_inc_input(BaseModel):
    cents_recorded: Optional[int] = None


class expense_logs_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    cents_recorded: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expense_type_by_expense_type: Optional["expense_types_obj_rel_insert_input"] = (
        Field(alias="expenseTypeByExpenseType", default=None)
    )
    expense_type: Optional[expense_types_enum] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice: Optional["invoices_obj_rel_insert_input"] = None
    invoice_id: Optional[Any] = None
    is_external: Optional[bool] = None
    notesj: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    xref_media_uploads: Optional["media_xref_expense_logs_arr_rel_insert_input"] = None


class expense_logs_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_recorded: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class expense_logs_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_recorded: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class expense_logs_obj_rel_insert_input(BaseModel):
    data: "expense_logs_insert_input"
    on_conflict: Optional["expense_logs_on_conflict"] = None


class expense_logs_on_conflict(BaseModel):
    constraint: expense_logs_constraint
    update_columns: List[expense_logs_update_column]
    where: Optional["expense_logs_bool_exp"] = None


class expense_logs_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    cents_recorded: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expense_type_by_expense_type: Optional["expense_types_order_by"] = Field(
        alias="expenseTypeByExpenseType", default=None
    )
    expense_type: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice: Optional["invoices_order_by"] = None
    invoice_id: Optional[order_by] = None
    is_external: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_expense_logs_aggregate_order_by"
    ] = None


class expense_logs_pk_columns_input(BaseModel):
    id: Any


class expense_logs_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class expense_logs_set_input(BaseModel):
    author_id: Optional[str] = None
    cents_recorded: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expense_type: Optional[expense_types_enum] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    is_external: Optional[bool] = None
    notesj: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class expense_logs_stddev_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_stddev_pop_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_stddev_samp_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_stream_cursor_input(BaseModel):
    initial_value: "expense_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class expense_logs_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    cents_recorded: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expense_type: Optional[expense_types_enum] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    is_external: Optional[bool] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class expense_logs_sum_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_updates(BaseModel):
    append: Optional["expense_logs_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["expense_logs_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["expense_logs_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["expense_logs_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["expense_logs_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["expense_logs_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["expense_logs_set_input"] = Field(alias="_set", default=None)
    where: "expense_logs_bool_exp"


class expense_logs_var_pop_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_var_samp_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_logs_variance_order_by(BaseModel):
    cents_recorded: Optional[order_by] = None


class expense_types_bool_exp(BaseModel):
    and_: Optional[List["expense_types_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["expense_types_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["expense_types_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    expense_logs: Optional["expense_logs_bool_exp"] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_bool_exp"] = None
    value: Optional["String_comparison_exp"] = None


class expense_types_enum_comparison_exp(BaseModel):
    eq: Optional[expense_types_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[expense_types_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[expense_types_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[expense_types_enum]] = Field(alias="_nin", default=None)


class expense_types_insert_input(BaseModel):
    comment: Optional[str] = None
    expense_logs: Optional["expense_logs_arr_rel_insert_input"] = None
    value: Optional[str] = None


class expense_types_obj_rel_insert_input(BaseModel):
    data: "expense_types_insert_input"
    on_conflict: Optional["expense_types_on_conflict"] = None


class expense_types_on_conflict(BaseModel):
    constraint: expense_types_constraint
    update_columns: List[expense_types_update_column]
    where: Optional["expense_types_bool_exp"] = None


class expense_types_order_by(BaseModel):
    comment: Optional[order_by] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_order_by"] = None
    value: Optional[order_by] = None


class expense_types_pk_columns_input(BaseModel):
    value: str


class expense_types_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class expense_types_stream_cursor_input(BaseModel):
    initial_value: "expense_types_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class expense_types_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class expense_types_updates(BaseModel):
    set: Optional["expense_types_set_input"] = Field(alias="_set", default=None)
    where: "expense_types_bool_exp"


class feature_flags_bool_exp(BaseModel):
    and_: Optional[List["feature_flags_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["feature_flags_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["feature_flags_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    event_types: Optional["event_types_bool_exp"] = None
    event_types_aggregate: Optional["event_types_aggregate_bool_exp"] = None
    value: Optional["String_comparison_exp"] = None
    xref_orgs: Optional["org_xref_feature_flags_bool_exp"] = None
    xref_orgs_aggregate: Optional["org_xref_feature_flags_aggregate_bool_exp"] = None


class feature_flags_enum_comparison_exp(BaseModel):
    eq: Optional[feature_flags_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[feature_flags_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[feature_flags_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[feature_flags_enum]] = Field(alias="_nin", default=None)


class feature_flags_insert_input(BaseModel):
    comment: Optional[str] = None
    event_types: Optional["event_types_arr_rel_insert_input"] = None
    value: Optional[str] = None
    xref_orgs: Optional["org_xref_feature_flags_arr_rel_insert_input"] = None


class feature_flags_obj_rel_insert_input(BaseModel):
    data: "feature_flags_insert_input"
    on_conflict: Optional["feature_flags_on_conflict"] = None


class feature_flags_on_conflict(BaseModel):
    constraint: feature_flags_constraint
    update_columns: List[feature_flags_update_column]
    where: Optional["feature_flags_bool_exp"] = None


class feature_flags_order_by(BaseModel):
    comment: Optional[order_by] = None
    event_types_aggregate: Optional["event_types_aggregate_order_by"] = None
    value: Optional[order_by] = None
    xref_orgs_aggregate: Optional["org_xref_feature_flags_aggregate_order_by"] = None


class feature_flags_pk_columns_input(BaseModel):
    value: str


class feature_flags_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class feature_flags_stream_cursor_input(BaseModel):
    initial_value: "feature_flags_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class feature_flags_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class feature_flags_updates(BaseModel):
    set: Optional["feature_flags_set_input"] = Field(alias="_set", default=None)
    where: "feature_flags_bool_exp"


class fuzzysearchdomain_args(BaseModel):
    search_domain: Optional[str] = None
    search_term: Optional[str] = None


class hfns_org_disable_feature_flag_args(BaseModel):
    flag: Optional[str] = Field(alias="_flag", default=None)


class hfns_org_enable_feature_flag_args(BaseModel):
    flag: Optional[str] = Field(alias="_flag", default=None)


class interfaces_activity_day_totals_bool_exp(BaseModel):
    and_: Optional[List["interfaces_activity_day_totals_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["interfaces_activity_day_totals_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["interfaces_activity_day_totals_bool_exp"]] = Field(
        alias="_or", default=None
    )
    day: Optional["timestamptz_comparison_exp"] = None
    dow: Optional["Int_comparison_exp"] = None
    expense_total_cents: Optional["Int_comparison_exp"] = None
    logs: Optional["Int_comparison_exp"] = None
    total_hours: Optional["Int_comparison_exp"] = None
    travel_hours: Optional["Int_comparison_exp"] = None
    travel_miles: Optional["Int_comparison_exp"] = None
    work_hours: Optional["Int_comparison_exp"] = None


class interfaces_activity_day_totals_inc_input(BaseModel):
    dow: Optional[int] = None
    expense_total_cents: Optional[int] = None
    logs: Optional[int] = None
    total_hours: Optional[int] = None
    travel_hours: Optional[int] = None
    travel_miles: Optional[int] = None
    work_hours: Optional[int] = None


class interfaces_activity_day_totals_insert_input(BaseModel):
    day: Optional[Any] = None
    dow: Optional[int] = None
    expense_total_cents: Optional[int] = None
    logs: Optional[int] = None
    total_hours: Optional[int] = None
    travel_hours: Optional[int] = None
    travel_miles: Optional[int] = None
    work_hours: Optional[int] = None


class interfaces_activity_day_totals_order_by(BaseModel):
    day: Optional[order_by] = None
    dow: Optional[order_by] = None
    expense_total_cents: Optional[order_by] = None
    logs: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    work_hours: Optional[order_by] = None


class interfaces_activity_day_totals_set_input(BaseModel):
    day: Optional[Any] = None
    dow: Optional[int] = None
    expense_total_cents: Optional[int] = None
    logs: Optional[int] = None
    total_hours: Optional[int] = None
    travel_hours: Optional[int] = None
    travel_miles: Optional[int] = None
    work_hours: Optional[int] = None


class interfaces_activity_day_totals_stream_cursor_input(BaseModel):
    initial_value: "interfaces_activity_day_totals_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class interfaces_activity_day_totals_stream_cursor_value_input(BaseModel):
    day: Optional[Any] = None
    dow: Optional[int] = None
    expense_total_cents: Optional[int] = None
    logs: Optional[int] = None
    total_hours: Optional[int] = None
    travel_hours: Optional[int] = None
    travel_miles: Optional[int] = None
    work_hours: Optional[int] = None


class interfaces_activity_day_totals_updates(BaseModel):
    inc: Optional["interfaces_activity_day_totals_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["interfaces_activity_day_totals_set_input"] = Field(
        alias="_set", default=None
    )
    where: "interfaces_activity_day_totals_bool_exp"


class interfaces_api_token_pair_bool_exp(BaseModel):
    and_: Optional[List["interfaces_api_token_pair_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["interfaces_api_token_pair_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["interfaces_api_token_pair_bool_exp"]] = Field(
        alias="_or", default=None
    )
    access_key: Optional["String_comparison_exp"] = None
    secret_key: Optional["String_comparison_exp"] = None


class interfaces_api_token_pair_insert_input(BaseModel):
    access_key: Optional[str] = None
    secret_key: Optional[str] = None


class interfaces_api_token_pair_on_conflict(BaseModel):
    constraint: interfaces_api_token_pair_constraint
    update_columns: List[interfaces_api_token_pair_update_column]
    where: Optional["interfaces_api_token_pair_bool_exp"] = None


class interfaces_api_token_pair_order_by(BaseModel):
    access_key: Optional[order_by] = None
    secret_key: Optional[order_by] = None


class interfaces_api_token_pair_pk_columns_input(BaseModel):
    access_key: str


class interfaces_api_token_pair_set_input(BaseModel):
    access_key: Optional[str] = None
    secret_key: Optional[str] = None


class interfaces_api_token_pair_stream_cursor_input(BaseModel):
    initial_value: "interfaces_api_token_pair_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class interfaces_api_token_pair_stream_cursor_value_input(BaseModel):
    access_key: Optional[str] = None
    secret_key: Optional[str] = None


class interfaces_api_token_pair_updates(BaseModel):
    set: Optional["interfaces_api_token_pair_set_input"] = Field(
        alias="_set", default=None
    )
    where: "interfaces_api_token_pair_bool_exp"


class interfaces_billing_totals_aggregate_order_by(BaseModel):
    avg: Optional["interfaces_billing_totals_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["interfaces_billing_totals_max_order_by"] = None
    min: Optional["interfaces_billing_totals_min_order_by"] = None
    stddev: Optional["interfaces_billing_totals_stddev_order_by"] = None
    stddev_pop: Optional["interfaces_billing_totals_stddev_pop_order_by"] = None
    stddev_samp: Optional["interfaces_billing_totals_stddev_samp_order_by"] = None
    sum: Optional["interfaces_billing_totals_sum_order_by"] = None
    var_pop: Optional["interfaces_billing_totals_var_pop_order_by"] = None
    var_samp: Optional["interfaces_billing_totals_var_samp_order_by"] = None
    variance: Optional["interfaces_billing_totals_variance_order_by"] = None


class interfaces_billing_totals_avg_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_bool_exp(BaseModel):
    and_: Optional[List["interfaces_billing_totals_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["interfaces_billing_totals_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["interfaces_billing_totals_bool_exp"]] = Field(
        alias="_or", default=None
    )
    day_rate_cents: Optional["Int_comparison_exp"] = None
    labor_hour_cents: Optional["Int_comparison_exp"] = None
    mileage_cents: Optional["Int_comparison_exp"] = None
    overtime_hour_cents: Optional["Int_comparison_exp"] = None
    subtotal_cents: Optional["Int_comparison_exp"] = None
    travel_hour_cents: Optional["Int_comparison_exp"] = None


class interfaces_billing_totals_inc_input(BaseModel):
    day_rate_cents: Optional[int] = None
    labor_hour_cents: Optional[int] = None
    mileage_cents: Optional[int] = None
    overtime_hour_cents: Optional[int] = None
    subtotal_cents: Optional[int] = None
    travel_hour_cents: Optional[int] = None


class interfaces_billing_totals_insert_input(BaseModel):
    day_rate_cents: Optional[int] = None
    labor_hour_cents: Optional[int] = None
    mileage_cents: Optional[int] = None
    overtime_hour_cents: Optional[int] = None
    subtotal_cents: Optional[int] = None
    travel_hour_cents: Optional[int] = None


class interfaces_billing_totals_max_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_min_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_set_input(BaseModel):
    day_rate_cents: Optional[int] = None
    labor_hour_cents: Optional[int] = None
    mileage_cents: Optional[int] = None
    overtime_hour_cents: Optional[int] = None
    subtotal_cents: Optional[int] = None
    travel_hour_cents: Optional[int] = None


class interfaces_billing_totals_stddev_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_stddev_pop_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_stddev_samp_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_stream_cursor_input(BaseModel):
    initial_value: "interfaces_billing_totals_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class interfaces_billing_totals_stream_cursor_value_input(BaseModel):
    day_rate_cents: Optional[int] = None
    labor_hour_cents: Optional[int] = None
    mileage_cents: Optional[int] = None
    overtime_hour_cents: Optional[int] = None
    subtotal_cents: Optional[int] = None
    travel_hour_cents: Optional[int] = None


class interfaces_billing_totals_sum_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_updates(BaseModel):
    inc: Optional["interfaces_billing_totals_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["interfaces_billing_totals_set_input"] = Field(
        alias="_set", default=None
    )
    where: "interfaces_billing_totals_bool_exp"


class interfaces_billing_totals_var_pop_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_var_samp_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_billing_totals_variance_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_cents: Optional[order_by] = None
    mileage_cents: Optional[order_by] = None
    overtime_hour_cents: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    travel_hour_cents: Optional[order_by] = None


class interfaces_daily_logs_summary_bool_exp(BaseModel):
    and_: Optional[List["interfaces_daily_logs_summary_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["interfaces_daily_logs_summary_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["interfaces_daily_logs_summary_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    day_of_week: Optional["Int_comparison_exp"] = None
    day_started_at: Optional["timestamptz_comparison_exp"] = None
    expense_log_ids: Optional["uuid_array_comparison_exp"] = None
    expense_logs: Optional["expense_logs_bool_exp"] = None
    expense_total_cents: Optional["Int_comparison_exp"] = None
    ticket_ids: Optional["uuid_array_comparison_exp"] = None
    tickets: Optional["tickets_bool_exp"] = None
    total_hours: Optional["numeric_comparison_exp"] = None
    travel_hours: Optional["numeric_comparison_exp"] = None
    travel_log_ids: Optional["uuid_array_comparison_exp"] = None
    travel_logs: Optional["travel_logs_bool_exp"] = None
    travel_miles: Optional["numeric_comparison_exp"] = None
    work_hours: Optional["numeric_comparison_exp"] = None
    work_log_ids: Optional["uuid_array_comparison_exp"] = None
    work_logs: Optional["work_logs_bool_exp"] = None


class interfaces_daily_logs_summary_inc_input(BaseModel):
    day_of_week: Optional[int] = None
    expense_total_cents: Optional[int] = None
    total_hours: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_miles: Optional[Any] = None
    work_hours: Optional[Any] = None


class interfaces_daily_logs_summary_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    day_of_week: Optional[int] = None
    day_started_at: Optional[Any] = None
    expense_log_ids: Optional[List[Any]] = None
    expense_total_cents: Optional[int] = None
    ticket_ids: Optional[List[Any]] = None
    total_hours: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_log_ids: Optional[List[Any]] = None
    travel_miles: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_ids: Optional[List[Any]] = None


class interfaces_daily_logs_summary_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    day_of_week: Optional[order_by] = None
    day_started_at: Optional[order_by] = None
    expense_log_ids: Optional[order_by] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_order_by"] = None
    expense_total_cents: Optional[order_by] = None
    ticket_ids: Optional[order_by] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    total_hours: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_log_ids: Optional[order_by] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    travel_miles: Optional[order_by] = None
    work_hours: Optional[order_by] = None
    work_log_ids: Optional[order_by] = None
    work_logs_aggregate: Optional["work_logs_aggregate_order_by"] = None


class interfaces_daily_logs_summary_set_input(BaseModel):
    author_id: Optional[str] = None
    day_of_week: Optional[int] = None
    day_started_at: Optional[Any] = None
    expense_log_ids: Optional[List[Any]] = None
    expense_total_cents: Optional[int] = None
    ticket_ids: Optional[List[Any]] = None
    total_hours: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_log_ids: Optional[List[Any]] = None
    travel_miles: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_ids: Optional[List[Any]] = None


class interfaces_daily_logs_summary_stream_cursor_input(BaseModel):
    initial_value: "interfaces_daily_logs_summary_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class interfaces_daily_logs_summary_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    day_of_week: Optional[int] = None
    day_started_at: Optional[Any] = None
    expense_log_ids: Optional[List[Any]] = None
    expense_total_cents: Optional[int] = None
    ticket_ids: Optional[List[Any]] = None
    total_hours: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_log_ids: Optional[List[Any]] = None
    travel_miles: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_ids: Optional[List[Any]] = None


class interfaces_daily_logs_summary_updates(BaseModel):
    inc: Optional["interfaces_daily_logs_summary_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["interfaces_daily_logs_summary_set_input"] = Field(
        alias="_set", default=None
    )
    where: "interfaces_daily_logs_summary_bool_exp"


class interfaces_logs_by_interval_bool_exp(BaseModel):
    and_: Optional[List["interfaces_logs_by_interval_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["interfaces_logs_by_interval_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["interfaces_logs_by_interval_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    billing_timezone: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    day_of_week: Optional["Int_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    expense_log_id: Optional["uuid_comparison_exp"] = None
    expense_total_cents: Optional["Int_comparison_exp"] = None
    expensed_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    log_ended_at: Optional["timestamptz_comparison_exp"] = None
    log_hours: Optional["numeric_comparison_exp"] = None
    log_started_at: Optional["timestamptz_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    span_ended_at: Optional["timestamptz_comparison_exp"] = None
    span_hours: Optional["numeric_comparison_exp"] = None
    span_started_at: Optional["timestamptz_comparison_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    total_hours: Optional["numeric_comparison_exp"] = None
    travel_ended_at: Optional["timestamptz_comparison_exp"] = None
    travel_hours: Optional["numeric_comparison_exp"] = None
    travel_log_id: Optional["uuid_comparison_exp"] = None
    travel_miles: Optional["numeric_comparison_exp"] = None
    travel_started_at: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_ended_at: Optional["timestamptz_comparison_exp"] = None
    work_hours: Optional["numeric_comparison_exp"] = None
    work_log_id: Optional["uuid_comparison_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None
    work_started_at: Optional["timestamptz_comparison_exp"] = None


class interfaces_logs_by_interval_inc_input(BaseModel):
    day_of_week: Optional[int] = None
    expense_total_cents: Optional[int] = None
    log_hours: Optional[Any] = None
    span_hours: Optional[Any] = None
    total_hours: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_miles: Optional[Any] = None
    work_hours: Optional[Any] = None


class interfaces_logs_by_interval_insert_input(BaseModel):
    author_id: Optional[str] = None
    billing_timezone: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    day_of_week: Optional[int] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    expense_total_cents: Optional[int] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    log_ended_at: Optional[Any] = None
    log_hours: Optional[Any] = None
    log_started_at: Optional[Any] = None
    organization_name: Optional[str] = None
    product_id: Optional[Any] = None
    span_ended_at: Optional[Any] = None
    span_hours: Optional[Any] = None
    span_started_at: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_id: Optional[Any] = None
    total_hours: Optional[Any] = None
    travel_ended_at: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    travel_miles: Optional[Any] = None
    travel_started_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    work_ended_at: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_id: Optional[Any] = None
    work_site_id: Optional[Any] = None
    work_started_at: Optional[Any] = None


class interfaces_logs_by_interval_order_by(BaseModel):
    author_id: Optional[order_by] = None
    billing_timezone: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    day_of_week: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    expense_log_id: Optional[order_by] = None
    expense_total_cents: Optional[order_by] = None
    expensed_at: Optional[order_by] = None
    id: Optional[order_by] = None
    log_ended_at: Optional[order_by] = None
    log_hours: Optional[order_by] = None
    log_started_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    product_id: Optional[order_by] = None
    span_ended_at: Optional[order_by] = None
    span_hours: Optional[order_by] = None
    span_started_at: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_ended_at: Optional[order_by] = None
    travel_hours: Optional[order_by] = None
    travel_log_id: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    travel_started_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_ended_at: Optional[order_by] = None
    work_hours: Optional[order_by] = None
    work_log_id: Optional[order_by] = None
    work_site_id: Optional[order_by] = None
    work_started_at: Optional[order_by] = None


class interfaces_logs_by_interval_set_input(BaseModel):
    author_id: Optional[str] = None
    billing_timezone: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    day_of_week: Optional[int] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    expense_total_cents: Optional[int] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    log_ended_at: Optional[Any] = None
    log_hours: Optional[Any] = None
    log_started_at: Optional[Any] = None
    organization_name: Optional[str] = None
    product_id: Optional[Any] = None
    span_ended_at: Optional[Any] = None
    span_hours: Optional[Any] = None
    span_started_at: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_id: Optional[Any] = None
    total_hours: Optional[Any] = None
    travel_ended_at: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    travel_miles: Optional[Any] = None
    travel_started_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    work_ended_at: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_id: Optional[Any] = None
    work_site_id: Optional[Any] = None
    work_started_at: Optional[Any] = None


class interfaces_logs_by_interval_stream_cursor_input(BaseModel):
    initial_value: "interfaces_logs_by_interval_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class interfaces_logs_by_interval_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    billing_timezone: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    day_of_week: Optional[int] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    expense_total_cents: Optional[int] = None
    expensed_at: Optional[Any] = None
    id: Optional[Any] = None
    log_ended_at: Optional[Any] = None
    log_hours: Optional[Any] = None
    log_started_at: Optional[Any] = None
    organization_name: Optional[str] = None
    product_id: Optional[Any] = None
    span_ended_at: Optional[Any] = None
    span_hours: Optional[Any] = None
    span_started_at: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_id: Optional[Any] = None
    total_hours: Optional[Any] = None
    travel_ended_at: Optional[Any] = None
    travel_hours: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    travel_miles: Optional[Any] = None
    travel_started_at: Optional[Any] = None
    updated_at: Optional[Any] = None
    work_ended_at: Optional[Any] = None
    work_hours: Optional[Any] = None
    work_log_id: Optional[Any] = None
    work_site_id: Optional[Any] = None
    work_started_at: Optional[Any] = None


class interfaces_logs_by_interval_updates(BaseModel):
    inc: Optional["interfaces_logs_by_interval_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["interfaces_logs_by_interval_set_input"] = Field(
        alias="_set", default=None
    )
    where: "interfaces_logs_by_interval_bool_exp"


class interfaces_time_sheet_entries_aggregate_order_by(BaseModel):
    avg: Optional["interfaces_time_sheet_entries_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["interfaces_time_sheet_entries_max_order_by"] = None
    min: Optional["interfaces_time_sheet_entries_min_order_by"] = None
    stddev: Optional["interfaces_time_sheet_entries_stddev_order_by"] = None
    stddev_pop: Optional["interfaces_time_sheet_entries_stddev_pop_order_by"] = None
    stddev_samp: Optional["interfaces_time_sheet_entries_stddev_samp_order_by"] = None
    sum: Optional["interfaces_time_sheet_entries_sum_order_by"] = None
    var_pop: Optional["interfaces_time_sheet_entries_var_pop_order_by"] = None
    var_samp: Optional["interfaces_time_sheet_entries_var_samp_order_by"] = None
    variance: Optional["interfaces_time_sheet_entries_variance_order_by"] = None


class interfaces_time_sheet_entries_avg_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_bool_exp(BaseModel):
    and_: Optional[List["interfaces_time_sheet_entries_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["interfaces_time_sheet_entries_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["interfaces_time_sheet_entries_bool_exp"]] = Field(
        alias="_or", default=None
    )
    afe_numbers: Optional["String_array_comparison_exp"] = None
    agent: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    billing_totals: Optional["interfaces_billing_totals_bool_exp"] = None
    cost_center: Optional["String_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    invoice_days: Optional["numeric_comparison_exp"] = None
    overtime_hours: Optional["numeric_comparison_exp"] = None
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    ticket_ids: Optional["uuid_array_comparison_exp"] = None
    tickets: Optional["tickets_bool_exp"] = None
    total_hours: Optional["numeric_comparison_exp"] = None
    travel_log_ids: Optional["uuid_array_comparison_exp"] = None
    travel_logs: Optional["travel_logs_bool_exp"] = None
    travel_miles: Optional["numeric_comparison_exp"] = None
    work_log_ids: Optional["uuid_array_comparison_exp"] = None
    work_logs: Optional["work_logs_bool_exp"] = None
    work_site: Optional["work_sites_bool_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None


class interfaces_time_sheet_entries_inc_input(BaseModel):
    invoice_days: Optional[Any] = None
    overtime_hours: Optional[Any] = None
    total_hours: Optional[Any] = None
    travel_miles: Optional[Any] = None


class interfaces_time_sheet_entries_insert_input(BaseModel):
    afe_numbers: Optional[List[str]] = None
    agent: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    cost_center: Optional[str] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    ended_at: Optional[Any] = None
    invoice_days: Optional[Any] = None
    overtime_hours: Optional[Any] = None
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_ids: Optional[List[Any]] = None
    total_hours: Optional[Any] = None
    travel_log_ids: Optional[List[Any]] = None
    travel_miles: Optional[Any] = None
    work_log_ids: Optional[List[Any]] = None
    work_site: Optional["work_sites_obj_rel_insert_input"] = None
    work_site_id: Optional[Any] = None


class interfaces_time_sheet_entries_max_order_by(BaseModel):
    afe_numbers: Optional[order_by] = None
    author_id: Optional[order_by] = None
    cost_center: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    product_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_ids: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_log_ids: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    work_log_ids: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class interfaces_time_sheet_entries_min_order_by(BaseModel):
    afe_numbers: Optional[order_by] = None
    author_id: Optional[order_by] = None
    cost_center: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    product_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_ids: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_log_ids: Optional[order_by] = None
    travel_miles: Optional[order_by] = None
    work_log_ids: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class interfaces_time_sheet_entries_order_by(BaseModel):
    afe_numbers: Optional[order_by] = None
    agent: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    billing_totals_aggregate: Optional[
        "interfaces_billing_totals_aggregate_order_by"
    ] = None
    cost_center: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_ids: Optional[order_by] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    total_hours: Optional[order_by] = None
    travel_log_ids: Optional[order_by] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    travel_miles: Optional[order_by] = None
    work_log_ids: Optional[order_by] = None
    work_logs_aggregate: Optional["work_logs_aggregate_order_by"] = None
    work_site: Optional["work_sites_order_by"] = None
    work_site_id: Optional[order_by] = None


class interfaces_time_sheet_entries_set_input(BaseModel):
    afe_numbers: Optional[List[str]] = None
    author_id: Optional[str] = None
    cost_center: Optional[str] = None
    customer_id: Optional[Any] = None
    ended_at: Optional[Any] = None
    invoice_days: Optional[Any] = None
    overtime_hours: Optional[Any] = None
    product_id: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_ids: Optional[List[Any]] = None
    total_hours: Optional[Any] = None
    travel_log_ids: Optional[List[Any]] = None
    travel_miles: Optional[Any] = None
    work_log_ids: Optional[List[Any]] = None
    work_site_id: Optional[Any] = None


class interfaces_time_sheet_entries_stddev_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_stddev_pop_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_stddev_samp_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_stream_cursor_input(BaseModel):
    initial_value: "interfaces_time_sheet_entries_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class interfaces_time_sheet_entries_stream_cursor_value_input(BaseModel):
    afe_numbers: Optional[List[str]] = None
    author_id: Optional[str] = None
    cost_center: Optional[str] = None
    customer_id: Optional[Any] = None
    ended_at: Optional[Any] = None
    invoice_days: Optional[Any] = None
    overtime_hours: Optional[Any] = None
    product_id: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_ids: Optional[List[Any]] = None
    total_hours: Optional[Any] = None
    travel_log_ids: Optional[List[Any]] = None
    travel_miles: Optional[Any] = None
    work_log_ids: Optional[List[Any]] = None
    work_site_id: Optional[Any] = None


class interfaces_time_sheet_entries_sum_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_updates(BaseModel):
    inc: Optional["interfaces_time_sheet_entries_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["interfaces_time_sheet_entries_set_input"] = Field(
        alias="_set", default=None
    )
    where: "interfaces_time_sheet_entries_bool_exp"


class interfaces_time_sheet_entries_var_pop_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_var_samp_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class interfaces_time_sheet_entries_variance_order_by(BaseModel):
    invoice_days: Optional[order_by] = None
    overtime_hours: Optional[order_by] = None
    total_hours: Optional[order_by] = None
    travel_miles: Optional[order_by] = None


class invoice_ledgers_aggregate_bool_exp(BaseModel):
    count: Optional["invoice_ledgers_aggregate_bool_exp_count"] = None


class invoice_ledgers_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[invoice_ledgers_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["invoice_ledgers_bool_exp"] = None
    predicate: "Int_comparison_exp"


class invoice_ledgers_aggregate_order_by(BaseModel):
    avg: Optional["invoice_ledgers_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["invoice_ledgers_max_order_by"] = None
    min: Optional["invoice_ledgers_min_order_by"] = None
    stddev: Optional["invoice_ledgers_stddev_order_by"] = None
    stddev_pop: Optional["invoice_ledgers_stddev_pop_order_by"] = None
    stddev_samp: Optional["invoice_ledgers_stddev_samp_order_by"] = None
    sum: Optional["invoice_ledgers_sum_order_by"] = None
    var_pop: Optional["invoice_ledgers_var_pop_order_by"] = None
    var_samp: Optional["invoice_ledgers_var_samp_order_by"] = None
    variance: Optional["invoice_ledgers_variance_order_by"] = None


class invoice_ledgers_arr_rel_insert_input(BaseModel):
    data: List["invoice_ledgers_insert_input"]
    on_conflict: Optional["invoice_ledgers_on_conflict"] = None


class invoice_ledgers_avg_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_bool_exp(BaseModel):
    and_: Optional[List["invoice_ledgers_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["invoice_ledgers_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["invoice_ledgers_bool_exp"]] = Field(alias="_or", default=None)
    cents_credit: Optional["Int_comparison_exp"] = None
    cents_debit: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None


class invoice_ledgers_inc_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None


class invoice_ledgers_insert_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None


class invoice_ledgers_max_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None


class invoice_ledgers_min_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None


class invoice_ledgers_on_conflict(BaseModel):
    constraint: invoice_ledgers_constraint
    update_columns: List[invoice_ledgers_update_column]
    where: Optional["invoice_ledgers_bool_exp"] = None


class invoice_ledgers_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None


class invoice_ledgers_pk_columns_input(BaseModel):
    id: Any


class invoice_ledgers_set_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None


class invoice_ledgers_stddev_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_stddev_pop_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_stddev_samp_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_stream_cursor_input(BaseModel):
    initial_value: "invoice_ledgers_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class invoice_ledgers_stream_cursor_value_input(BaseModel):
    cents_credit: Optional[int] = None
    cents_debit: Optional[int] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None


class invoice_ledgers_sum_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_updates(BaseModel):
    inc: Optional["invoice_ledgers_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["invoice_ledgers_set_input"] = Field(alias="_set", default=None)
    where: "invoice_ledgers_bool_exp"


class invoice_ledgers_var_pop_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_var_samp_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_ledgers_variance_order_by(BaseModel):
    cents_credit: Optional[order_by] = None
    cents_debit: Optional[order_by] = None


class invoice_line_items_aggregate_bool_exp(BaseModel):
    count: Optional["invoice_line_items_aggregate_bool_exp_count"] = None


class invoice_line_items_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[invoice_line_items_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["invoice_line_items_bool_exp"] = None
    predicate: "Int_comparison_exp"


class invoice_line_items_aggregate_order_by(BaseModel):
    avg: Optional["invoice_line_items_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["invoice_line_items_max_order_by"] = None
    min: Optional["invoice_line_items_min_order_by"] = None
    stddev: Optional["invoice_line_items_stddev_order_by"] = None
    stddev_pop: Optional["invoice_line_items_stddev_pop_order_by"] = None
    stddev_samp: Optional["invoice_line_items_stddev_samp_order_by"] = None
    sum: Optional["invoice_line_items_sum_order_by"] = None
    var_pop: Optional["invoice_line_items_var_pop_order_by"] = None
    var_samp: Optional["invoice_line_items_var_samp_order_by"] = None
    variance: Optional["invoice_line_items_variance_order_by"] = None


class invoice_line_items_append_input(BaseModel):
    details: Optional[Any] = None


class invoice_line_items_arr_rel_insert_input(BaseModel):
    data: List["invoice_line_items_insert_input"]
    on_conflict: Optional["invoice_line_items_on_conflict"] = None


class invoice_line_items_avg_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_bool_exp(BaseModel):
    and_: Optional[List["invoice_line_items_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["invoice_line_items_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["invoice_line_items_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    cents_calculated: Optional["Int_comparison_exp"] = None
    cents_invoiced: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    description: Optional["String_comparison_exp"] = None
    details: Optional["jsonb_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice: Optional["invoices_bool_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    label: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class invoice_line_items_delete_at_path_input(BaseModel):
    details: Optional[List[str]] = None


class invoice_line_items_delete_elem_input(BaseModel):
    details: Optional[int] = None


class invoice_line_items_delete_key_input(BaseModel):
    details: Optional[str] = None


class invoice_line_items_inc_input(BaseModel):
    cents_calculated: Optional[int] = None
    cents_invoiced: Optional[int] = None


class invoice_line_items_insert_input(BaseModel):
    author_id: Optional[str] = None
    cents_calculated: Optional[int] = None
    cents_invoiced: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    description: Optional[str] = None
    details: Optional[Any] = None
    id: Optional[Any] = None
    invoice: Optional["invoices_obj_rel_insert_input"] = None
    invoice_id: Optional[Any] = None
    label: Optional[str] = None
    updated_at: Optional[Any] = None


class invoice_line_items_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    description: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    label: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoice_line_items_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    description: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    label: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoice_line_items_on_conflict(BaseModel):
    constraint: invoice_line_items_constraint
    update_columns: List[invoice_line_items_update_column]
    where: Optional["invoice_line_items_bool_exp"] = None


class invoice_line_items_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    description: Optional[order_by] = None
    details: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice: Optional["invoices_order_by"] = None
    invoice_id: Optional[order_by] = None
    label: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoice_line_items_pk_columns_input(BaseModel):
    id: Any


class invoice_line_items_prepend_input(BaseModel):
    details: Optional[Any] = None


class invoice_line_items_set_input(BaseModel):
    author_id: Optional[str] = None
    cents_calculated: Optional[int] = None
    cents_invoiced: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    description: Optional[str] = None
    details: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    label: Optional[str] = None
    updated_at: Optional[Any] = None


class invoice_line_items_stddev_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_stddev_pop_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_stddev_samp_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_stream_cursor_input(BaseModel):
    initial_value: "invoice_line_items_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class invoice_line_items_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    cents_calculated: Optional[int] = None
    cents_invoiced: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    description: Optional[str] = None
    details: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    label: Optional[str] = None
    updated_at: Optional[Any] = None


class invoice_line_items_sum_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_updates(BaseModel):
    append: Optional["invoice_line_items_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["invoice_line_items_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["invoice_line_items_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["invoice_line_items_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["invoice_line_items_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["invoice_line_items_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["invoice_line_items_set_input"] = Field(alias="_set", default=None)
    where: "invoice_line_items_bool_exp"


class invoice_line_items_var_pop_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_var_samp_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_line_items_variance_order_by(BaseModel):
    cents_calculated: Optional[order_by] = None
    cents_invoiced: Optional[order_by] = None


class invoice_payments_aggregate_bool_exp(BaseModel):
    count: Optional["invoice_payments_aggregate_bool_exp_count"] = None


class invoice_payments_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[invoice_payments_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["invoice_payments_bool_exp"] = None
    predicate: "Int_comparison_exp"


class invoice_payments_aggregate_order_by(BaseModel):
    avg: Optional["invoice_payments_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["invoice_payments_max_order_by"] = None
    min: Optional["invoice_payments_min_order_by"] = None
    stddev: Optional["invoice_payments_stddev_order_by"] = None
    stddev_pop: Optional["invoice_payments_stddev_pop_order_by"] = None
    stddev_samp: Optional["invoice_payments_stddev_samp_order_by"] = None
    sum: Optional["invoice_payments_sum_order_by"] = None
    var_pop: Optional["invoice_payments_var_pop_order_by"] = None
    var_samp: Optional["invoice_payments_var_samp_order_by"] = None
    variance: Optional["invoice_payments_variance_order_by"] = None


class invoice_payments_append_input(BaseModel):
    notesj: Optional[Any] = None


class invoice_payments_arr_rel_insert_input(BaseModel):
    data: List["invoice_payments_insert_input"]
    on_conflict: Optional["invoice_payments_on_conflict"] = None


class invoice_payments_avg_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_bool_exp(BaseModel):
    and_: Optional[List["invoice_payments_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["invoice_payments_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["invoice_payments_bool_exp"]] = Field(alias="_or", default=None)
    amount_in_cents: Optional["Int_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice: Optional["invoices_bool_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    paid_at: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class invoice_payments_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class invoice_payments_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class invoice_payments_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class invoice_payments_inc_input(BaseModel):
    amount_in_cents: Optional[int] = None


class invoice_payments_insert_input(BaseModel):
    amount_in_cents: Optional[int] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice: Optional["invoices_obj_rel_insert_input"] = None
    invoice_id: Optional[Any] = None
    notesj: Optional[Any] = None
    paid_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class invoice_payments_max_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoice_payments_min_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoice_payments_on_conflict(BaseModel):
    constraint: invoice_payments_constraint
    update_columns: List[invoice_payments_update_column]
    where: Optional["invoice_payments_bool_exp"] = None


class invoice_payments_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice: Optional["invoices_order_by"] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoice_payments_pk_columns_input(BaseModel):
    id: Any


class invoice_payments_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class invoice_payments_set_input(BaseModel):
    amount_in_cents: Optional[int] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    notesj: Optional[Any] = None
    paid_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class invoice_payments_stddev_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_stddev_pop_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_stddev_samp_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_stream_cursor_input(BaseModel):
    initial_value: "invoice_payments_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class invoice_payments_stream_cursor_value_input(BaseModel):
    amount_in_cents: Optional[int] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    paid_at: Optional[Any] = None
    updated_at: Optional[Any] = None


class invoice_payments_sum_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_updates(BaseModel):
    append: Optional["invoice_payments_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["invoice_payments_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["invoice_payments_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["invoice_payments_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["invoice_payments_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["invoice_payments_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["invoice_payments_set_input"] = Field(alias="_set", default=None)
    where: "invoice_payments_bool_exp"


class invoice_payments_var_pop_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_var_samp_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_payments_variance_order_by(BaseModel):
    amount_in_cents: Optional[order_by] = None


class invoice_pivot_options_bool_exp(BaseModel):
    and_: Optional[List["invoice_pivot_options_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["invoice_pivot_options_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["invoice_pivot_options_bool_exp"]] = Field(
        alias="_or", default=None
    )
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class invoice_pivot_options_enum_comparison_exp(BaseModel):
    eq: Optional[invoice_pivot_options_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[invoice_pivot_options_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[invoice_pivot_options_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[invoice_pivot_options_enum]] = Field(alias="_nin", default=None)


class invoice_pivot_options_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class invoice_pivot_options_on_conflict(BaseModel):
    constraint: invoice_pivot_options_constraint
    update_columns: List[invoice_pivot_options_update_column]
    where: Optional["invoice_pivot_options_bool_exp"] = None


class invoice_pivot_options_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class invoice_pivot_options_pk_columns_input(BaseModel):
    value: str


class invoice_pivot_options_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class invoice_pivot_options_stream_cursor_input(BaseModel):
    initial_value: "invoice_pivot_options_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class invoice_pivot_options_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class invoice_pivot_options_updates(BaseModel):
    set: Optional["invoice_pivot_options_set_input"] = Field(alias="_set", default=None)
    where: "invoice_pivot_options_bool_exp"


class invoices_aggregate_bool_exp(BaseModel):
    count: Optional["invoices_aggregate_bool_exp_count"] = None


class invoices_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[invoices_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["invoices_bool_exp"] = None
    predicate: "Int_comparison_exp"


class invoices_aggregate_order_by(BaseModel):
    avg: Optional["invoices_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["invoices_max_order_by"] = None
    min: Optional["invoices_min_order_by"] = None
    stddev: Optional["invoices_stddev_order_by"] = None
    stddev_pop: Optional["invoices_stddev_pop_order_by"] = None
    stddev_samp: Optional["invoices_stddev_samp_order_by"] = None
    sum: Optional["invoices_sum_order_by"] = None
    var_pop: Optional["invoices_var_pop_order_by"] = None
    var_samp: Optional["invoices_var_samp_order_by"] = None
    variance: Optional["invoices_variance_order_by"] = None


class invoices_append_input(BaseModel):
    notesj: Optional[Any] = None


class invoices_arr_rel_insert_input(BaseModel):
    data: List["invoices_insert_input"]
    on_conflict: Optional["invoices_on_conflict"] = None


class invoices_avg_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_bool_exp(BaseModel):
    and_: Optional[List["invoices_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["invoices_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["invoices_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    delivery_status: Optional["delivery_statuses_enum_comparison_exp"] = None
    due_at: Optional["timestamptz_comparison_exp"] = None
    due_in: Optional["Int_comparison_exp"] = None
    expense_logs: Optional["expense_logs_bool_exp"] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice_line_items: Optional["invoice_line_items_bool_exp"] = None
    invoice_line_items_aggregate: Optional["invoice_line_items_aggregate_bool_exp"] = (
        None
    )
    issued_at: Optional["timestamptz_comparison_exp"] = None
    ledger_entries: Optional["invoice_ledgers_bool_exp"] = None
    ledger_entries_aggregate: Optional["invoice_ledgers_aggregate_bool_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    paid_at: Optional["timestamptz_comparison_exp"] = None
    payment_status: Optional["payment_statuses_enum_comparison_exp"] = None
    payments: Optional["invoice_payments_bool_exp"] = None
    payments_aggregate: Optional["invoice_payments_aggregate_bool_exp"] = None
    po_number: Optional["String_comparison_exp"] = None
    ref: Optional["String_comparison_exp"] = None
    sent_at: Optional["timestamptz_comparison_exp"] = None
    subject: Optional["String_comparison_exp"] = None
    total_cost_in_cents: Optional["Int_comparison_exp"] = None
    travel_logs: Optional["travel_logs_bool_exp"] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_logs: Optional["work_logs_bool_exp"] = None
    work_logs_aggregate: Optional["work_logs_aggregate_bool_exp"] = None
    xref_media_uploads: Optional["media_xref_invoices_bool_exp"] = None
    xref_media_uploads_aggregate: Optional["media_xref_invoices_aggregate_bool_exp"] = (
        None
    )


class invoices_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class invoices_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class invoices_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class invoices_inc_input(BaseModel):
    due_in: Optional[int] = None
    total_cost_in_cents: Optional[int] = None


class invoices_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    delivery_status: Optional[delivery_statuses_enum] = None
    due_in: Optional[int] = None
    expense_logs: Optional["expense_logs_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    invoice_line_items: Optional["invoice_line_items_arr_rel_insert_input"] = None
    issued_at: Optional[Any] = None
    ledger_entries: Optional["invoice_ledgers_arr_rel_insert_input"] = None
    notesj: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    paid_at: Optional[Any] = None
    payment_status: Optional[payment_statuses_enum] = None
    payments: Optional["invoice_payments_arr_rel_insert_input"] = None
    po_number: Optional[str] = None
    ref: Optional[str] = None
    sent_at: Optional[Any] = None
    subject: Optional[str] = None
    total_cost_in_cents: Optional[int] = None
    travel_logs: Optional["travel_logs_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    work_logs: Optional["work_logs_arr_rel_insert_input"] = None
    xref_media_uploads: Optional["media_xref_invoices_arr_rel_insert_input"] = None


class invoices_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    due_at: Optional[order_by] = None
    due_in: Optional[order_by] = None
    id: Optional[order_by] = None
    issued_at: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    po_number: Optional[order_by] = None
    ref: Optional[order_by] = None
    sent_at: Optional[order_by] = None
    subject: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoices_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    due_at: Optional[order_by] = None
    due_in: Optional[order_by] = None
    id: Optional[order_by] = None
    issued_at: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    po_number: Optional[order_by] = None
    ref: Optional[order_by] = None
    sent_at: Optional[order_by] = None
    subject: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class invoices_obj_rel_insert_input(BaseModel):
    data: "invoices_insert_input"
    on_conflict: Optional["invoices_on_conflict"] = None


class invoices_on_conflict(BaseModel):
    constraint: invoices_constraint
    update_columns: List[invoices_update_column]
    where: Optional["invoices_bool_exp"] = None


class invoices_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    delivery_status: Optional[order_by] = None
    due_at: Optional[order_by] = None
    due_in: Optional[order_by] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_order_by"] = None
    id: Optional[order_by] = None
    invoice_line_items_aggregate: Optional["invoice_line_items_aggregate_order_by"] = (
        None
    )
    issued_at: Optional[order_by] = None
    ledger_entries_aggregate: Optional["invoice_ledgers_aggregate_order_by"] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    paid_at: Optional[order_by] = None
    payment_status: Optional[order_by] = None
    payments_aggregate: Optional["invoice_payments_aggregate_order_by"] = None
    po_number: Optional[order_by] = None
    ref: Optional[order_by] = None
    sent_at: Optional[order_by] = None
    subject: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    work_logs_aggregate: Optional["work_logs_aggregate_order_by"] = None
    xref_media_uploads_aggregate: Optional["media_xref_invoices_aggregate_order_by"] = (
        None
    )


class invoices_pk_columns_input(BaseModel):
    id: Any


class invoices_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class invoices_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    delivery_status: Optional[delivery_statuses_enum] = None
    due_in: Optional[int] = None
    id: Optional[Any] = None
    issued_at: Optional[Any] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    paid_at: Optional[Any] = None
    payment_status: Optional[payment_statuses_enum] = None
    po_number: Optional[str] = None
    ref: Optional[str] = None
    sent_at: Optional[Any] = None
    subject: Optional[str] = None
    total_cost_in_cents: Optional[int] = None
    updated_at: Optional[Any] = None


class invoices_stddev_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_stddev_pop_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_stddev_samp_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_stream_cursor_input(BaseModel):
    initial_value: "invoices_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class invoices_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    delivery_status: Optional[delivery_statuses_enum] = None
    due_at: Optional[Any] = None
    due_in: Optional[int] = None
    id: Optional[Any] = None
    issued_at: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    paid_at: Optional[Any] = None
    payment_status: Optional[payment_statuses_enum] = None
    po_number: Optional[str] = None
    ref: Optional[str] = None
    sent_at: Optional[Any] = None
    subject: Optional[str] = None
    total_cost_in_cents: Optional[int] = None
    updated_at: Optional[Any] = None


class invoices_sum_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_updates(BaseModel):
    append: Optional["invoices_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["invoices_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["invoices_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["invoices_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["invoices_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["invoices_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["invoices_set_input"] = Field(alias="_set", default=None)
    where: "invoices_bool_exp"


class invoices_var_pop_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_var_samp_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class invoices_variance_order_by(BaseModel):
    due_in: Optional[order_by] = None
    total_cost_in_cents: Optional[order_by] = None


class jsonb_cast_exp(BaseModel):
    string: Optional["String_comparison_exp"] = Field(alias="String", default=None)


class jsonb_comparison_exp(BaseModel):
    cast: Optional["jsonb_cast_exp"] = Field(alias="_cast", default=None)
    contained_in: Optional[Any] = Field(alias="_contained_in", default=None)
    contains: Optional[Any] = Field(alias="_contains", default=None)
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    has_key: Optional[str] = Field(alias="_has_key", default=None)
    has_keys_all: Optional[List[str]] = Field(alias="_has_keys_all", default=None)
    has_keys_any: Optional[List[str]] = Field(alias="_has_keys_any", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class lifecycle_statuses_bool_exp(BaseModel):
    and_: Optional[List["lifecycle_statuses_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["lifecycle_statuses_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["lifecycle_statuses_bool_exp"]] = Field(
        alias="_or", default=None
    )
    comment: Optional["String_comparison_exp"] = None
    orders: Optional["demand_orders_bool_exp"] = None
    orders_aggregate: Optional["demand_orders_aggregate_bool_exp"] = None
    value: Optional["String_comparison_exp"] = None


class lifecycle_statuses_enum_comparison_exp(BaseModel):
    eq: Optional[lifecycle_statuses_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[lifecycle_statuses_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[lifecycle_statuses_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[lifecycle_statuses_enum]] = Field(alias="_nin", default=None)


class lifecycle_statuses_insert_input(BaseModel):
    comment: Optional[str] = None
    orders: Optional["demand_orders_arr_rel_insert_input"] = None
    value: Optional[str] = None


class lifecycle_statuses_obj_rel_insert_input(BaseModel):
    data: "lifecycle_statuses_insert_input"
    on_conflict: Optional["lifecycle_statuses_on_conflict"] = None


class lifecycle_statuses_on_conflict(BaseModel):
    constraint: lifecycle_statuses_constraint
    update_columns: List[lifecycle_statuses_update_column]
    where: Optional["lifecycle_statuses_bool_exp"] = None


class lifecycle_statuses_order_by(BaseModel):
    comment: Optional[order_by] = None
    orders_aggregate: Optional["demand_orders_aggregate_order_by"] = None
    value: Optional[order_by] = None


class lifecycle_statuses_pk_columns_input(BaseModel):
    value: str


class lifecycle_statuses_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class lifecycle_statuses_stream_cursor_input(BaseModel):
    initial_value: "lifecycle_statuses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class lifecycle_statuses_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class lifecycle_statuses_updates(BaseModel):
    set: Optional["lifecycle_statuses_set_input"] = Field(alias="_set", default=None)
    where: "lifecycle_statuses_bool_exp"


class logs_by_interval_args(BaseModel):
    timezone: Optional[str] = Field(alias="_timezone", default=None)
    trunc_field: Optional[str] = Field(alias="_trunc_field", default=None)


class media_uploads_aggregate_bool_exp(BaseModel):
    count: Optional["media_uploads_aggregate_bool_exp_count"] = None


class media_uploads_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_uploads_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_uploads_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_uploads_aggregate_order_by(BaseModel):
    avg: Optional["media_uploads_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["media_uploads_max_order_by"] = None
    min: Optional["media_uploads_min_order_by"] = None
    stddev: Optional["media_uploads_stddev_order_by"] = None
    stddev_pop: Optional["media_uploads_stddev_pop_order_by"] = None
    stddev_samp: Optional["media_uploads_stddev_samp_order_by"] = None
    sum: Optional["media_uploads_sum_order_by"] = None
    var_pop: Optional["media_uploads_var_pop_order_by"] = None
    var_samp: Optional["media_uploads_var_samp_order_by"] = None
    variance: Optional["media_uploads_variance_order_by"] = None


class media_uploads_arr_rel_insert_input(BaseModel):
    data: List["media_uploads_insert_input"]
    on_conflict: Optional["media_uploads_on_conflict"] = None


class media_uploads_avg_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_bool_exp(BaseModel):
    and_: Optional[List["media_uploads_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["media_uploads_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["media_uploads_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    caption: Optional["String_comparison_exp"] = None
    content_size: Optional["numeric_comparison_exp"] = None
    content_type: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    expense_log_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    orig_filename: Optional["String_comparison_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    quote_event_id: Optional["uuid_comparison_exp"] = None
    quote_id: Optional["uuid_comparison_exp"] = None
    ticket_custom_form_entry_id: Optional["uuid_comparison_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    travel_log_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    url: Optional["String_comparison_exp"] = None
    work_log_id: Optional["uuid_comparison_exp"] = None
    work_order_id: Optional["uuid_comparison_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None
    xref_expense_logs: Optional["media_xref_expense_logs_bool_exp"] = None
    xref_expense_logs_aggregate: Optional[
        "media_xref_expense_logs_aggregate_bool_exp"
    ] = None
    xref_invoices: Optional["media_xref_invoices_bool_exp"] = None
    xref_invoices_aggregate: Optional["media_xref_invoices_aggregate_bool_exp"] = None
    xref_products: Optional["media_xref_products_bool_exp"] = None
    xref_products_aggregate: Optional["media_xref_products_aggregate_bool_exp"] = None
    xref_quote_events: Optional["media_xref_quote_events_bool_exp"] = None
    xref_quote_events_aggregate: Optional[
        "media_xref_quote_events_aggregate_bool_exp"
    ] = None
    xref_quotes: Optional["media_xref_quotes_bool_exp"] = None
    xref_quotes_aggregate: Optional["media_xref_quotes_aggregate_bool_exp"] = None
    xref_ticket_custom_form_entries: Optional[
        "media_xref_ticket_custom_form_entries_bool_exp"
    ] = None
    xref_ticket_custom_form_entries_aggregate: Optional[
        "media_xref_ticket_custom_form_entries_aggregate_bool_exp"
    ] = None
    xref_tickets: Optional["media_xref_tickets_bool_exp"] = None
    xref_tickets_aggregate: Optional["media_xref_tickets_aggregate_bool_exp"] = None
    xref_travel_logs: Optional["media_xref_travel_logs_bool_exp"] = None
    xref_travel_logs_aggregate: Optional[
        "media_xref_travel_logs_aggregate_bool_exp"
    ] = None
    xref_work_logs: Optional["media_xref_work_logs_bool_exp"] = None
    xref_work_logs_aggregate: Optional["media_xref_work_logs_aggregate_bool_exp"] = None
    xref_work_orders: Optional["media_xref_work_orders_bool_exp"] = None
    xref_work_orders_aggregate: Optional[
        "media_xref_work_orders_aggregate_bool_exp"
    ] = None


class media_uploads_inc_input(BaseModel):
    content_size: Optional[Any] = None


class media_uploads_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    caption: Optional[str] = None
    content_size: Optional[Any] = None
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    orig_filename: Optional[str] = None
    product_id: Optional[Any] = None
    quote_event_id: Optional[Any] = None
    quote_id: Optional[Any] = None
    ticket_custom_form_entry_id: Optional[Any] = None
    ticket_id: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    work_log_id: Optional[Any] = None
    work_order_id: Optional[Any] = None
    work_site_id: Optional[Any] = None
    xref_expense_logs: Optional["media_xref_expense_logs_arr_rel_insert_input"] = None
    xref_invoices: Optional["media_xref_invoices_arr_rel_insert_input"] = None
    xref_products: Optional["media_xref_products_arr_rel_insert_input"] = None
    xref_quote_events: Optional["media_xref_quote_events_arr_rel_insert_input"] = None
    xref_quotes: Optional["media_xref_quotes_arr_rel_insert_input"] = None
    xref_ticket_custom_form_entries: Optional[
        "media_xref_ticket_custom_form_entries_arr_rel_insert_input"
    ] = None
    xref_tickets: Optional["media_xref_tickets_arr_rel_insert_input"] = None
    xref_travel_logs: Optional["media_xref_travel_logs_arr_rel_insert_input"] = None
    xref_work_logs: Optional["media_xref_work_logs_arr_rel_insert_input"] = None
    xref_work_orders: Optional["media_xref_work_orders_arr_rel_insert_input"] = None


class media_uploads_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    caption: Optional[order_by] = None
    content_size: Optional[order_by] = None
    content_type: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expense_log_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    orig_filename: Optional[order_by] = None
    product_id: Optional[order_by] = None
    quote_event_id: Optional[order_by] = None
    quote_id: Optional[order_by] = None
    ticket_custom_form_entry_id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    travel_log_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None
    work_log_id: Optional[order_by] = None
    work_order_id: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class media_uploads_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    caption: Optional[order_by] = None
    content_size: Optional[order_by] = None
    content_type: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expense_log_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    orig_filename: Optional[order_by] = None
    product_id: Optional[order_by] = None
    quote_event_id: Optional[order_by] = None
    quote_id: Optional[order_by] = None
    ticket_custom_form_entry_id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    travel_log_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None
    work_log_id: Optional[order_by] = None
    work_order_id: Optional[order_by] = None
    work_site_id: Optional[order_by] = None


class media_uploads_obj_rel_insert_input(BaseModel):
    data: "media_uploads_insert_input"
    on_conflict: Optional["media_uploads_on_conflict"] = None


class media_uploads_on_conflict(BaseModel):
    constraint: media_uploads_constraint
    update_columns: List[media_uploads_update_column]
    where: Optional["media_uploads_bool_exp"] = None


class media_uploads_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    caption: Optional[order_by] = None
    content_size: Optional[order_by] = None
    content_type: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    expense_log_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    orig_filename: Optional[order_by] = None
    product_id: Optional[order_by] = None
    quote_event_id: Optional[order_by] = None
    quote_id: Optional[order_by] = None
    ticket_custom_form_entry_id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    travel_log_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None
    work_log_id: Optional[order_by] = None
    work_order_id: Optional[order_by] = None
    work_site_id: Optional[order_by] = None
    xref_expense_logs_aggregate: Optional[
        "media_xref_expense_logs_aggregate_order_by"
    ] = None
    xref_invoices_aggregate: Optional["media_xref_invoices_aggregate_order_by"] = None
    xref_products_aggregate: Optional["media_xref_products_aggregate_order_by"] = None
    xref_quote_events_aggregate: Optional[
        "media_xref_quote_events_aggregate_order_by"
    ] = None
    xref_quotes_aggregate: Optional["media_xref_quotes_aggregate_order_by"] = None
    xref_ticket_custom_form_entries_aggregate: Optional[
        "media_xref_ticket_custom_form_entries_aggregate_order_by"
    ] = None
    xref_tickets_aggregate: Optional["media_xref_tickets_aggregate_order_by"] = None
    xref_travel_logs_aggregate: Optional[
        "media_xref_travel_logs_aggregate_order_by"
    ] = None
    xref_work_logs_aggregate: Optional["media_xref_work_logs_aggregate_order_by"] = None
    xref_work_orders_aggregate: Optional[
        "media_xref_work_orders_aggregate_order_by"
    ] = None


class media_uploads_pk_columns_input(BaseModel):
    id: Any


class media_uploads_set_input(BaseModel):
    author_id: Optional[str] = None
    caption: Optional[str] = None
    content_size: Optional[Any] = None
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    organization_name: Optional[str] = None
    orig_filename: Optional[str] = None
    product_id: Optional[Any] = None
    quote_event_id: Optional[Any] = None
    quote_id: Optional[Any] = None
    ticket_custom_form_entry_id: Optional[Any] = None
    ticket_id: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    work_log_id: Optional[Any] = None
    work_order_id: Optional[Any] = None
    work_site_id: Optional[Any] = None


class media_uploads_stddev_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_stddev_pop_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_stddev_samp_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_stream_cursor_input(BaseModel):
    initial_value: "media_uploads_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_uploads_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    caption: Optional[str] = None
    content_size: Optional[Any] = None
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    organization_name: Optional[str] = None
    orig_filename: Optional[str] = None
    product_id: Optional[Any] = None
    quote_event_id: Optional[Any] = None
    quote_id: Optional[Any] = None
    ticket_custom_form_entry_id: Optional[Any] = None
    ticket_id: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    work_log_id: Optional[Any] = None
    work_order_id: Optional[Any] = None
    work_site_id: Optional[Any] = None


class media_uploads_sum_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_updates(BaseModel):
    inc: Optional["media_uploads_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["media_uploads_set_input"] = Field(alias="_set", default=None)
    where: "media_uploads_bool_exp"


class media_uploads_var_pop_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_var_samp_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_uploads_variance_order_by(BaseModel):
    content_size: Optional[order_by] = None


class media_xref_expense_logs_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_expense_logs_aggregate_bool_exp_count"] = None


class media_xref_expense_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_expense_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_expense_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_expense_logs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_expense_logs_max_order_by"] = None
    min: Optional["media_xref_expense_logs_min_order_by"] = None


class media_xref_expense_logs_arr_rel_insert_input(BaseModel):
    data: List["media_xref_expense_logs_insert_input"]
    on_conflict: Optional["media_xref_expense_logs_on_conflict"] = None


class media_xref_expense_logs_bool_exp(BaseModel):
    and_: Optional[List["media_xref_expense_logs_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_expense_logs_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["media_xref_expense_logs_bool_exp"]] = Field(
        alias="_or", default=None
    )
    expense_log: Optional["expense_logs_bool_exp"] = None
    expense_log_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_expense_logs_insert_input(BaseModel):
    expense_log: Optional["expense_logs_obj_rel_insert_input"] = None
    expense_log_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_expense_logs_max_order_by(BaseModel):
    expense_log_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_expense_logs_min_order_by(BaseModel):
    expense_log_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_expense_logs_on_conflict(BaseModel):
    constraint: media_xref_expense_logs_constraint
    update_columns: List[media_xref_expense_logs_update_column]
    where: Optional["media_xref_expense_logs_bool_exp"] = None


class media_xref_expense_logs_order_by(BaseModel):
    expense_log: Optional["expense_logs_order_by"] = None
    expense_log_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_expense_logs_pk_columns_input(BaseModel):
    expense_log_id: Any
    upload_id: Any


class media_xref_expense_logs_set_input(BaseModel):
    expense_log_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_expense_logs_stream_cursor_input(BaseModel):
    initial_value: "media_xref_expense_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_expense_logs_stream_cursor_value_input(BaseModel):
    expense_log_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_expense_logs_updates(BaseModel):
    set: Optional["media_xref_expense_logs_set_input"] = Field(
        alias="_set", default=None
    )
    where: "media_xref_expense_logs_bool_exp"


class media_xref_invoices_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_invoices_aggregate_bool_exp_count"] = None


class media_xref_invoices_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_invoices_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_invoices_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_invoices_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_invoices_max_order_by"] = None
    min: Optional["media_xref_invoices_min_order_by"] = None


class media_xref_invoices_arr_rel_insert_input(BaseModel):
    data: List["media_xref_invoices_insert_input"]
    on_conflict: Optional["media_xref_invoices_on_conflict"] = None


class media_xref_invoices_bool_exp(BaseModel):
    and_: Optional[List["media_xref_invoices_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_invoices_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["media_xref_invoices_bool_exp"]] = Field(
        alias="_or", default=None
    )
    invoice: Optional["invoices_bool_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_invoices_insert_input(BaseModel):
    invoice: Optional["invoices_obj_rel_insert_input"] = None
    invoice_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_invoices_max_order_by(BaseModel):
    invoice_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_invoices_min_order_by(BaseModel):
    invoice_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_invoices_on_conflict(BaseModel):
    constraint: media_xref_invoices_constraint
    update_columns: List[media_xref_invoices_update_column]
    where: Optional["media_xref_invoices_bool_exp"] = None


class media_xref_invoices_order_by(BaseModel):
    invoice: Optional["invoices_order_by"] = None
    invoice_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_invoices_pk_columns_input(BaseModel):
    invoice_id: Any
    upload_id: Any


class media_xref_invoices_set_input(BaseModel):
    invoice_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_invoices_stream_cursor_input(BaseModel):
    initial_value: "media_xref_invoices_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_invoices_stream_cursor_value_input(BaseModel):
    invoice_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_invoices_updates(BaseModel):
    set: Optional["media_xref_invoices_set_input"] = Field(alias="_set", default=None)
    where: "media_xref_invoices_bool_exp"


class media_xref_products_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_products_aggregate_bool_exp_count"] = None


class media_xref_products_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_products_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_products_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_products_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_products_max_order_by"] = None
    min: Optional["media_xref_products_min_order_by"] = None


class media_xref_products_arr_rel_insert_input(BaseModel):
    data: List["media_xref_products_insert_input"]
    on_conflict: Optional["media_xref_products_on_conflict"] = None


class media_xref_products_bool_exp(BaseModel):
    and_: Optional[List["media_xref_products_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_products_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["media_xref_products_bool_exp"]] = Field(
        alias="_or", default=None
    )
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_products_insert_input(BaseModel):
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_products_max_order_by(BaseModel):
    product_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_products_min_order_by(BaseModel):
    product_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_products_on_conflict(BaseModel):
    constraint: media_xref_products_constraint
    update_columns: List[media_xref_products_update_column]
    where: Optional["media_xref_products_bool_exp"] = None


class media_xref_products_order_by(BaseModel):
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_products_pk_columns_input(BaseModel):
    product_id: Any
    upload_id: Any


class media_xref_products_set_input(BaseModel):
    product_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_products_stream_cursor_input(BaseModel):
    initial_value: "media_xref_products_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_products_stream_cursor_value_input(BaseModel):
    product_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_products_updates(BaseModel):
    set: Optional["media_xref_products_set_input"] = Field(alias="_set", default=None)
    where: "media_xref_products_bool_exp"


class media_xref_quote_events_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_quote_events_aggregate_bool_exp_count"] = None


class media_xref_quote_events_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_quote_events_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_quote_events_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_quote_events_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_quote_events_max_order_by"] = None
    min: Optional["media_xref_quote_events_min_order_by"] = None


class media_xref_quote_events_arr_rel_insert_input(BaseModel):
    data: List["media_xref_quote_events_insert_input"]
    on_conflict: Optional["media_xref_quote_events_on_conflict"] = None


class media_xref_quote_events_bool_exp(BaseModel):
    and_: Optional[List["media_xref_quote_events_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_quote_events_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["media_xref_quote_events_bool_exp"]] = Field(
        alias="_or", default=None
    )
    event: Optional["quote_events_bool_exp"] = None
    quote_event_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_quote_events_insert_input(BaseModel):
    event: Optional["quote_events_obj_rel_insert_input"] = None
    quote_event_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_quote_events_max_order_by(BaseModel):
    quote_event_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_quote_events_min_order_by(BaseModel):
    quote_event_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_quote_events_on_conflict(BaseModel):
    constraint: media_xref_quote_events_constraint
    update_columns: List[media_xref_quote_events_update_column]
    where: Optional["media_xref_quote_events_bool_exp"] = None


class media_xref_quote_events_order_by(BaseModel):
    event: Optional["quote_events_order_by"] = None
    quote_event_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_quote_events_pk_columns_input(BaseModel):
    quote_event_id: Any
    upload_id: Any


class media_xref_quote_events_set_input(BaseModel):
    quote_event_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_quote_events_stream_cursor_input(BaseModel):
    initial_value: "media_xref_quote_events_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_quote_events_stream_cursor_value_input(BaseModel):
    quote_event_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_quote_events_updates(BaseModel):
    set: Optional["media_xref_quote_events_set_input"] = Field(
        alias="_set", default=None
    )
    where: "media_xref_quote_events_bool_exp"


class media_xref_quotes_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_quotes_aggregate_bool_exp_count"] = None


class media_xref_quotes_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_quotes_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_quotes_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_quotes_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_quotes_max_order_by"] = None
    min: Optional["media_xref_quotes_min_order_by"] = None


class media_xref_quotes_arr_rel_insert_input(BaseModel):
    data: List["media_xref_quotes_insert_input"]
    on_conflict: Optional["media_xref_quotes_on_conflict"] = None


class media_xref_quotes_bool_exp(BaseModel):
    and_: Optional[List["media_xref_quotes_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_quotes_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["media_xref_quotes_bool_exp"]] = Field(alias="_or", default=None)
    quote: Optional["quote_quotes_bool_exp"] = None
    quote_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_quotes_insert_input(BaseModel):
    quote: Optional["quote_quotes_obj_rel_insert_input"] = None
    quote_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_quotes_max_order_by(BaseModel):
    quote_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_quotes_min_order_by(BaseModel):
    quote_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_quotes_on_conflict(BaseModel):
    constraint: media_xref_quotes_constraint
    update_columns: List[media_xref_quotes_update_column]
    where: Optional["media_xref_quotes_bool_exp"] = None


class media_xref_quotes_order_by(BaseModel):
    quote: Optional["quote_quotes_order_by"] = None
    quote_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_quotes_pk_columns_input(BaseModel):
    quote_id: Any
    upload_id: Any


class media_xref_quotes_set_input(BaseModel):
    quote_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_quotes_stream_cursor_input(BaseModel):
    initial_value: "media_xref_quotes_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_quotes_stream_cursor_value_input(BaseModel):
    quote_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_quotes_updates(BaseModel):
    set: Optional["media_xref_quotes_set_input"] = Field(alias="_set", default=None)
    where: "media_xref_quotes_bool_exp"


class media_xref_ticket_custom_form_entries_aggregate_bool_exp(BaseModel):
    count: Optional[
        "media_xref_ticket_custom_form_entries_aggregate_bool_exp_count"
    ] = None


class media_xref_ticket_custom_form_entries_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_ticket_custom_form_entries_select_column]] = (
        None
    )
    distinct: Optional[bool] = None
    filter: Optional["media_xref_ticket_custom_form_entries_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_ticket_custom_form_entries_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_ticket_custom_form_entries_max_order_by"] = None
    min: Optional["media_xref_ticket_custom_form_entries_min_order_by"] = None


class media_xref_ticket_custom_form_entries_arr_rel_insert_input(BaseModel):
    data: List["media_xref_ticket_custom_form_entries_insert_input"]
    on_conflict: Optional["media_xref_ticket_custom_form_entries_on_conflict"] = None


class media_xref_ticket_custom_form_entries_bool_exp(BaseModel):
    and_: Optional[List["media_xref_ticket_custom_form_entries_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_ticket_custom_form_entries_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["media_xref_ticket_custom_form_entries_bool_exp"]] = Field(
        alias="_or", default=None
    )
    ticket_custom_form_entry: Optional["ticket_custom_form_entries_bool_exp"] = None
    ticket_custom_form_entry_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_ticket_custom_form_entries_insert_input(BaseModel):
    ticket_custom_form_entry: Optional[
        "ticket_custom_form_entries_obj_rel_insert_input"
    ] = None
    ticket_custom_form_entry_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_ticket_custom_form_entries_max_order_by(BaseModel):
    ticket_custom_form_entry_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_ticket_custom_form_entries_min_order_by(BaseModel):
    ticket_custom_form_entry_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_ticket_custom_form_entries_on_conflict(BaseModel):
    constraint: media_xref_ticket_custom_form_entries_constraint
    update_columns: List[media_xref_ticket_custom_form_entries_update_column]
    where: Optional["media_xref_ticket_custom_form_entries_bool_exp"] = None


class media_xref_ticket_custom_form_entries_order_by(BaseModel):
    ticket_custom_form_entry: Optional["ticket_custom_form_entries_order_by"] = None
    ticket_custom_form_entry_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_ticket_custom_form_entries_pk_columns_input(BaseModel):
    ticket_custom_form_entry_id: Any
    upload_id: Any


class media_xref_ticket_custom_form_entries_set_input(BaseModel):
    ticket_custom_form_entry_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_ticket_custom_form_entries_stream_cursor_input(BaseModel):
    initial_value: "media_xref_ticket_custom_form_entries_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_ticket_custom_form_entries_stream_cursor_value_input(BaseModel):
    ticket_custom_form_entry_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_ticket_custom_form_entries_updates(BaseModel):
    set: Optional["media_xref_ticket_custom_form_entries_set_input"] = Field(
        alias="_set", default=None
    )
    where: "media_xref_ticket_custom_form_entries_bool_exp"


class media_xref_tickets_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_tickets_aggregate_bool_exp_count"] = None


class media_xref_tickets_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_tickets_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_tickets_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_tickets_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_tickets_max_order_by"] = None
    min: Optional["media_xref_tickets_min_order_by"] = None


class media_xref_tickets_arr_rel_insert_input(BaseModel):
    data: List["media_xref_tickets_insert_input"]
    on_conflict: Optional["media_xref_tickets_on_conflict"] = None


class media_xref_tickets_bool_exp(BaseModel):
    and_: Optional[List["media_xref_tickets_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_tickets_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["media_xref_tickets_bool_exp"]] = Field(
        alias="_or", default=None
    )
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_tickets_insert_input(BaseModel):
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_tickets_max_order_by(BaseModel):
    ticket_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_tickets_min_order_by(BaseModel):
    ticket_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_tickets_on_conflict(BaseModel):
    constraint: media_xref_tickets_constraint
    update_columns: List[media_xref_tickets_update_column]
    where: Optional["media_xref_tickets_bool_exp"] = None


class media_xref_tickets_order_by(BaseModel):
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_tickets_pk_columns_input(BaseModel):
    ticket_id: Any
    upload_id: Any


class media_xref_tickets_set_input(BaseModel):
    ticket_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_tickets_stream_cursor_input(BaseModel):
    initial_value: "media_xref_tickets_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_tickets_stream_cursor_value_input(BaseModel):
    ticket_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_tickets_updates(BaseModel):
    set: Optional["media_xref_tickets_set_input"] = Field(alias="_set", default=None)
    where: "media_xref_tickets_bool_exp"


class media_xref_travel_logs_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_travel_logs_aggregate_bool_exp_count"] = None


class media_xref_travel_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_travel_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_travel_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_travel_logs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_travel_logs_max_order_by"] = None
    min: Optional["media_xref_travel_logs_min_order_by"] = None


class media_xref_travel_logs_arr_rel_insert_input(BaseModel):
    data: List["media_xref_travel_logs_insert_input"]
    on_conflict: Optional["media_xref_travel_logs_on_conflict"] = None


class media_xref_travel_logs_bool_exp(BaseModel):
    and_: Optional[List["media_xref_travel_logs_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_travel_logs_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["media_xref_travel_logs_bool_exp"]] = Field(
        alias="_or", default=None
    )
    travel_log: Optional["travel_logs_bool_exp"] = None
    travel_log_id: Optional["uuid_comparison_exp"] = None
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None


class media_xref_travel_logs_insert_input(BaseModel):
    travel_log: Optional["travel_logs_obj_rel_insert_input"] = None
    travel_log_id: Optional[Any] = None
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None


class media_xref_travel_logs_max_order_by(BaseModel):
    travel_log_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_travel_logs_min_order_by(BaseModel):
    travel_log_id: Optional[order_by] = None
    upload_id: Optional[order_by] = None


class media_xref_travel_logs_on_conflict(BaseModel):
    constraint: media_xref_travel_logs_constraint
    update_columns: List[media_xref_travel_logs_update_column]
    where: Optional["media_xref_travel_logs_bool_exp"] = None


class media_xref_travel_logs_order_by(BaseModel):
    travel_log: Optional["travel_logs_order_by"] = None
    travel_log_id: Optional[order_by] = None
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None


class media_xref_travel_logs_pk_columns_input(BaseModel):
    travel_log_id: Any
    upload_id: Any


class media_xref_travel_logs_set_input(BaseModel):
    travel_log_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_travel_logs_stream_cursor_input(BaseModel):
    initial_value: "media_xref_travel_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_travel_logs_stream_cursor_value_input(BaseModel):
    travel_log_id: Optional[Any] = None
    upload_id: Optional[Any] = None


class media_xref_travel_logs_updates(BaseModel):
    set: Optional["media_xref_travel_logs_set_input"] = Field(
        alias="_set", default=None
    )
    where: "media_xref_travel_logs_bool_exp"


class media_xref_work_logs_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_work_logs_aggregate_bool_exp_count"] = None


class media_xref_work_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_work_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_work_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_work_logs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_work_logs_max_order_by"] = None
    min: Optional["media_xref_work_logs_min_order_by"] = None


class media_xref_work_logs_arr_rel_insert_input(BaseModel):
    data: List["media_xref_work_logs_insert_input"]
    on_conflict: Optional["media_xref_work_logs_on_conflict"] = None


class media_xref_work_logs_bool_exp(BaseModel):
    and_: Optional[List["media_xref_work_logs_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_work_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["media_xref_work_logs_bool_exp"]] = Field(
        alias="_or", default=None
    )
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None
    work_log: Optional["work_logs_bool_exp"] = None
    work_log_id: Optional["uuid_comparison_exp"] = None


class media_xref_work_logs_insert_input(BaseModel):
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None
    work_log: Optional["work_logs_obj_rel_insert_input"] = None
    work_log_id: Optional[Any] = None


class media_xref_work_logs_max_order_by(BaseModel):
    upload_id: Optional[order_by] = None
    work_log_id: Optional[order_by] = None


class media_xref_work_logs_min_order_by(BaseModel):
    upload_id: Optional[order_by] = None
    work_log_id: Optional[order_by] = None


class media_xref_work_logs_on_conflict(BaseModel):
    constraint: media_xref_work_logs_constraint
    update_columns: List[media_xref_work_logs_update_column]
    where: Optional["media_xref_work_logs_bool_exp"] = None


class media_xref_work_logs_order_by(BaseModel):
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None
    work_log: Optional["work_logs_order_by"] = None
    work_log_id: Optional[order_by] = None


class media_xref_work_logs_pk_columns_input(BaseModel):
    upload_id: Any
    work_log_id: Any


class media_xref_work_logs_set_input(BaseModel):
    upload_id: Optional[Any] = None
    work_log_id: Optional[Any] = None


class media_xref_work_logs_stream_cursor_input(BaseModel):
    initial_value: "media_xref_work_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_work_logs_stream_cursor_value_input(BaseModel):
    upload_id: Optional[Any] = None
    work_log_id: Optional[Any] = None


class media_xref_work_logs_updates(BaseModel):
    set: Optional["media_xref_work_logs_set_input"] = Field(alias="_set", default=None)
    where: "media_xref_work_logs_bool_exp"


class media_xref_work_orders_aggregate_bool_exp(BaseModel):
    count: Optional["media_xref_work_orders_aggregate_bool_exp_count"] = None


class media_xref_work_orders_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[media_xref_work_orders_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["media_xref_work_orders_bool_exp"] = None
    predicate: "Int_comparison_exp"


class media_xref_work_orders_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["media_xref_work_orders_max_order_by"] = None
    min: Optional["media_xref_work_orders_min_order_by"] = None


class media_xref_work_orders_arr_rel_insert_input(BaseModel):
    data: List["media_xref_work_orders_insert_input"]
    on_conflict: Optional["media_xref_work_orders_on_conflict"] = None


class media_xref_work_orders_bool_exp(BaseModel):
    and_: Optional[List["media_xref_work_orders_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["media_xref_work_orders_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["media_xref_work_orders_bool_exp"]] = Field(
        alias="_or", default=None
    )
    upload: Optional["media_uploads_bool_exp"] = None
    upload_id: Optional["uuid_comparison_exp"] = None
    work_order: Optional["demand_orders_bool_exp"] = None
    work_order_id: Optional["uuid_comparison_exp"] = None


class media_xref_work_orders_insert_input(BaseModel):
    upload: Optional["media_uploads_obj_rel_insert_input"] = None
    upload_id: Optional[Any] = None
    work_order: Optional["demand_orders_obj_rel_insert_input"] = None
    work_order_id: Optional[Any] = None


class media_xref_work_orders_max_order_by(BaseModel):
    upload_id: Optional[order_by] = None
    work_order_id: Optional[order_by] = None


class media_xref_work_orders_min_order_by(BaseModel):
    upload_id: Optional[order_by] = None
    work_order_id: Optional[order_by] = None


class media_xref_work_orders_on_conflict(BaseModel):
    constraint: media_xref_work_orders_constraint
    update_columns: List[media_xref_work_orders_update_column]
    where: Optional["media_xref_work_orders_bool_exp"] = None


class media_xref_work_orders_order_by(BaseModel):
    upload: Optional["media_uploads_order_by"] = None
    upload_id: Optional[order_by] = None
    work_order: Optional["demand_orders_order_by"] = None
    work_order_id: Optional[order_by] = None


class media_xref_work_orders_pk_columns_input(BaseModel):
    upload_id: Any
    work_order_id: Any


class media_xref_work_orders_set_input(BaseModel):
    upload_id: Optional[Any] = None
    work_order_id: Optional[Any] = None


class media_xref_work_orders_stream_cursor_input(BaseModel):
    initial_value: "media_xref_work_orders_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class media_xref_work_orders_stream_cursor_value_input(BaseModel):
    upload_id: Optional[Any] = None
    work_order_id: Optional[Any] = None


class media_xref_work_orders_updates(BaseModel):
    set: Optional["media_xref_work_orders_set_input"] = Field(
        alias="_set", default=None
    )
    where: "media_xref_work_orders_bool_exp"


class member_type_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class miles_by_product_organization_agents_args(BaseModel):
    ended_at: Optional[Any] = Field(alias="_ended_at", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    started_at: Optional[Any] = Field(alias="_started_at", default=None)


class miles_per_ticket_by_product_organization_agents_args(BaseModel):
    ended_at: Optional[Any] = Field(alias="_ended_at", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    started_at: Optional[Any] = Field(alias="_started_at", default=None)


class next_order_ref_organizations_args(BaseModel):
    service_date_end: Optional[Any] = Field(alias="_service_date_end", default=None)
    service_date_start: Optional[Any] = Field(alias="_service_date_start", default=None)


class notification_prefs_aggregate_bool_exp(BaseModel):
    bool_and: Optional["notification_prefs_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["notification_prefs_aggregate_bool_exp_bool_or"] = None
    count: Optional["notification_prefs_aggregate_bool_exp_count"] = None


class notification_prefs_aggregate_bool_exp_bool_and(BaseModel):
    arguments: notification_prefs_select_column_notification_prefs_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["notification_prefs_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class notification_prefs_aggregate_bool_exp_bool_or(BaseModel):
    arguments: notification_prefs_select_column_notification_prefs_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["notification_prefs_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class notification_prefs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[notification_prefs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["notification_prefs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class notification_prefs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["notification_prefs_max_order_by"] = None
    min: Optional["notification_prefs_min_order_by"] = None


class notification_prefs_arr_rel_insert_input(BaseModel):
    data: List["notification_prefs_insert_input"]
    on_conflict: Optional["notification_prefs_on_conflict"] = None


class notification_prefs_bool_exp(BaseModel):
    and_: Optional[List["notification_prefs_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["notification_prefs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["notification_prefs_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    email_enabled: Optional["Boolean_comparison_exp"] = None
    event_type: Optional["event_types_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    push_enabled: Optional["Boolean_comparison_exp"] = None
    type: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["String_comparison_exp"] = None


class notification_prefs_insert_input(BaseModel):
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    email_enabled: Optional[bool] = None
    event_type: Optional["event_types_obj_rel_insert_input"] = None
    id: Optional[Any] = None
    push_enabled: Optional[bool] = None
    type: Optional[str] = None
    updated_at: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[str] = None


class notification_prefs_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    type: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class notification_prefs_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    type: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user_id: Optional[order_by] = None


class notification_prefs_on_conflict(BaseModel):
    constraint: notification_prefs_constraint
    update_columns: List[notification_prefs_update_column]
    where: Optional["notification_prefs_bool_exp"] = None


class notification_prefs_order_by(BaseModel):
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    email_enabled: Optional[order_by] = None
    event_type: Optional["event_types_order_by"] = None
    id: Optional[order_by] = None
    push_enabled: Optional[order_by] = None
    type: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class notification_prefs_pk_columns_input(BaseModel):
    id: Any


class notification_prefs_set_input(BaseModel):
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    email_enabled: Optional[bool] = None
    id: Optional[Any] = None
    push_enabled: Optional[bool] = None
    type: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[str] = None


class notification_prefs_stream_cursor_input(BaseModel):
    initial_value: "notification_prefs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class notification_prefs_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    email_enabled: Optional[bool] = None
    id: Optional[Any] = None
    push_enabled: Optional[bool] = None
    type: Optional[str] = None
    updated_at: Optional[Any] = None
    user_id: Optional[str] = None


class notification_prefs_updates(BaseModel):
    set: Optional["notification_prefs_set_input"] = Field(alias="_set", default=None)
    where: "notification_prefs_bool_exp"


class numeric_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class oauth_providers_bool_exp(BaseModel):
    and_: Optional[List["oauth_providers_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["oauth_providers_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["oauth_providers_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class oauth_providers_enum_comparison_exp(BaseModel):
    eq: Optional[oauth_providers_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[oauth_providers_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[oauth_providers_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[oauth_providers_enum]] = Field(alias="_nin", default=None)


class oauth_providers_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class oauth_providers_on_conflict(BaseModel):
    constraint: oauth_providers_constraint
    update_columns: List[oauth_providers_update_column]
    where: Optional["oauth_providers_bool_exp"] = None


class oauth_providers_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class oauth_providers_pk_columns_input(BaseModel):
    value: str


class oauth_providers_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class oauth_providers_stream_cursor_input(BaseModel):
    initial_value: "oauth_providers_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class oauth_providers_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class oauth_providers_updates(BaseModel):
    set: Optional["oauth_providers_set_input"] = Field(alias="_set", default=None)
    where: "oauth_providers_bool_exp"


class org_block_agent_args(BaseModel):
    user_id: Optional[str] = Field(alias="_user_id", default=None)


class org_create_agent_args(BaseModel):
    city: Optional[str] = Field(alias="_city", default=None)
    dl_exp: Optional[Any] = Field(alias="_dl_exp", default=None)
    dl_number: Optional[str] = Field(alias="_dl_number", default=None)
    dl_state: Optional[str] = Field(alias="_dl_state", default=None)
    email: Optional[str] = Field(alias="_email", default=None)
    employee_id: Optional[str] = Field(alias="_employee_id", default=None)
    fname: Optional[str] = Field(alias="_fname", default=None)
    lname: Optional[str] = Field(alias="_lname", default=None)
    phone_number: Optional[str] = Field(alias="_phone_number", default=None)
    role_id: Optional[str] = Field(alias="_role_id", default=None)
    state: Optional[str] = Field(alias="_state", default=None)
    user_id: Optional[str] = Field(alias="_user_id", default=None)


class org_roles_bool_exp(BaseModel):
    and_: Optional[List["org_roles_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["org_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["org_roles_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer_contacts_only: Optional["Boolean_comparison_exp"] = None
    id: Optional["String_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class org_roles_insert_input(BaseModel):
    created_at: Optional[Any] = None
    customer_contacts_only: Optional[bool] = None
    id: Optional[str] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class org_roles_obj_rel_insert_input(BaseModel):
    data: "org_roles_insert_input"
    on_conflict: Optional["org_roles_on_conflict"] = None


class org_roles_on_conflict(BaseModel):
    constraint: org_roles_constraint
    update_columns: List[org_roles_update_column]
    where: Optional["org_roles_bool_exp"] = None


class org_roles_order_by(BaseModel):
    created_at: Optional[order_by] = None
    customer_contacts_only: Optional[order_by] = None
    id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class org_roles_pk_columns_input(BaseModel):
    id: str
    organization_name: str


class org_roles_set_input(BaseModel):
    created_at: Optional[Any] = None
    customer_contacts_only: Optional[bool] = None
    id: Optional[str] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class org_roles_stream_cursor_input(BaseModel):
    initial_value: "org_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class org_roles_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    customer_contacts_only: Optional[bool] = None
    id: Optional[str] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class org_roles_updates(BaseModel):
    set: Optional["org_roles_set_input"] = Field(alias="_set", default=None)
    where: "org_roles_bool_exp"


class org_unblock_agent_args(BaseModel):
    user_id: Optional[str] = Field(alias="_user_id", default=None)


class org_update_agent_args(BaseModel):
    city: Optional[str] = Field(alias="_city", default=None)
    dl_exp: Optional[Any] = Field(alias="_dl_exp", default=None)
    dl_number: Optional[str] = Field(alias="_dl_number", default=None)
    dl_state: Optional[str] = Field(alias="_dl_state", default=None)
    email: Optional[str] = Field(alias="_email", default=None)
    employee_id: Optional[str] = Field(alias="_employee_id", default=None)
    fname: Optional[str] = Field(alias="_fname", default=None)
    lname: Optional[str] = Field(alias="_lname", default=None)
    phone_number: Optional[str] = Field(alias="_phone_number", default=None)
    role_id: Optional[str] = Field(alias="_role_id", default=None)
    state: Optional[str] = Field(alias="_state", default=None)
    user_id: Optional[str] = Field(alias="_user_id", default=None)


class org_users_xref_roles_aggregate_bool_exp(BaseModel):
    count: Optional["org_users_xref_roles_aggregate_bool_exp_count"] = None


class org_users_xref_roles_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[org_users_xref_roles_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["org_users_xref_roles_bool_exp"] = None
    predicate: "Int_comparison_exp"


class org_users_xref_roles_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["org_users_xref_roles_max_order_by"] = None
    min: Optional["org_users_xref_roles_min_order_by"] = None


class org_users_xref_roles_arr_rel_insert_input(BaseModel):
    data: List["org_users_xref_roles_insert_input"]
    on_conflict: Optional["org_users_xref_roles_on_conflict"] = None


class org_users_xref_roles_bool_exp(BaseModel):
    and_: Optional[List["org_users_xref_roles_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["org_users_xref_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["org_users_xref_roles_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    role: Optional["org_roles_bool_exp"] = None
    role_id: Optional["String_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["String_comparison_exp"] = None


class org_users_xref_roles_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    organization_name: Optional[str] = None
    role: Optional["org_roles_obj_rel_insert_input"] = None
    role_id: Optional[str] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[str] = None


class org_users_xref_roles_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    role_id: Optional[order_by] = None
    user_id: Optional[order_by] = None


class org_users_xref_roles_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    role_id: Optional[order_by] = None
    user_id: Optional[order_by] = None


class org_users_xref_roles_on_conflict(BaseModel):
    constraint: org_users_xref_roles_constraint
    update_columns: List[org_users_xref_roles_update_column]
    where: Optional["org_users_xref_roles_bool_exp"] = None


class org_users_xref_roles_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    role: Optional["org_roles_order_by"] = None
    role_id: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class org_users_xref_roles_pk_columns_input(BaseModel):
    organization_name: str
    role_id: str
    user_id: str


class org_users_xref_roles_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    organization_name: Optional[str] = None
    role_id: Optional[str] = None
    user_id: Optional[str] = None


class org_users_xref_roles_stream_cursor_input(BaseModel):
    initial_value: "org_users_xref_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class org_users_xref_roles_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    organization_name: Optional[str] = None
    role_id: Optional[str] = None
    user_id: Optional[str] = None


class org_users_xref_roles_updates(BaseModel):
    set: Optional["org_users_xref_roles_set_input"] = Field(alias="_set", default=None)
    where: "org_users_xref_roles_bool_exp"


class org_xref_feature_flags_aggregate_bool_exp(BaseModel):
    count: Optional["org_xref_feature_flags_aggregate_bool_exp_count"] = None


class org_xref_feature_flags_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[org_xref_feature_flags_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["org_xref_feature_flags_bool_exp"] = None
    predicate: "Int_comparison_exp"


class org_xref_feature_flags_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["org_xref_feature_flags_max_order_by"] = None
    min: Optional["org_xref_feature_flags_min_order_by"] = None


class org_xref_feature_flags_arr_rel_insert_input(BaseModel):
    data: List["org_xref_feature_flags_insert_input"]
    on_conflict: Optional["org_xref_feature_flags_on_conflict"] = None


class org_xref_feature_flags_bool_exp(BaseModel):
    and_: Optional[List["org_xref_feature_flags_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["org_xref_feature_flags_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["org_xref_feature_flags_bool_exp"]] = Field(
        alias="_or", default=None
    )
    feature_flag: Optional["feature_flags_enum_comparison_exp"] = None
    flag: Optional["feature_flags_bool_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None


class org_xref_feature_flags_insert_input(BaseModel):
    feature_flag: Optional[feature_flags_enum] = None
    flag: Optional["feature_flags_obj_rel_insert_input"] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None


class org_xref_feature_flags_max_order_by(BaseModel):
    organization_name: Optional[order_by] = None


class org_xref_feature_flags_min_order_by(BaseModel):
    organization_name: Optional[order_by] = None


class org_xref_feature_flags_on_conflict(BaseModel):
    constraint: org_xref_feature_flags_constraint
    update_columns: List[org_xref_feature_flags_update_column]
    where: Optional["org_xref_feature_flags_bool_exp"] = None


class org_xref_feature_flags_order_by(BaseModel):
    feature_flag: Optional[order_by] = None
    flag: Optional["feature_flags_order_by"] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None


class org_xref_feature_flags_pk_columns_input(BaseModel):
    feature_flag: feature_flags_enum
    organization_name: str


class org_xref_feature_flags_set_input(BaseModel):
    feature_flag: Optional[feature_flags_enum] = None
    organization_name: Optional[str] = None


class org_xref_feature_flags_stream_cursor_input(BaseModel):
    initial_value: "org_xref_feature_flags_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class org_xref_feature_flags_stream_cursor_value_input(BaseModel):
    feature_flag: Optional[feature_flags_enum] = None
    organization_name: Optional[str] = None


class org_xref_feature_flags_updates(BaseModel):
    set: Optional["org_xref_feature_flags_set_input"] = Field(
        alias="_set", default=None
    )
    where: "org_xref_feature_flags_bool_exp"


class organization_agent_prices_aggregate_bool_exp(BaseModel):
    count: Optional["organization_agent_prices_aggregate_bool_exp_count"] = None


class organization_agent_prices_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[organization_agent_prices_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["organization_agent_prices_bool_exp"] = None
    predicate: "Int_comparison_exp"


class organization_agent_prices_aggregate_order_by(BaseModel):
    avg: Optional["organization_agent_prices_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["organization_agent_prices_max_order_by"] = None
    min: Optional["organization_agent_prices_min_order_by"] = None
    stddev: Optional["organization_agent_prices_stddev_order_by"] = None
    stddev_pop: Optional["organization_agent_prices_stddev_pop_order_by"] = None
    stddev_samp: Optional["organization_agent_prices_stddev_samp_order_by"] = None
    sum: Optional["organization_agent_prices_sum_order_by"] = None
    var_pop: Optional["organization_agent_prices_var_pop_order_by"] = None
    var_samp: Optional["organization_agent_prices_var_samp_order_by"] = None
    variance: Optional["organization_agent_prices_variance_order_by"] = None


class organization_agent_prices_arr_rel_insert_input(BaseModel):
    data: List["organization_agent_prices_insert_input"]
    on_conflict: Optional["organization_agent_prices_on_conflict"] = None


class organization_agent_prices_avg_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_bool_exp(BaseModel):
    and_: Optional[List["organization_agent_prices_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["organization_agent_prices_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["organization_agent_prices_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent: Optional["users_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    day_rate_cents: Optional["Int_comparison_exp"] = None
    hourly_rate_cents: Optional["Int_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class organization_agent_prices_inc_input(BaseModel):
    day_rate_cents: Optional[int] = None
    hourly_rate_cents: Optional[int] = None


class organization_agent_prices_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    created_at: Optional[Any] = None
    day_rate_cents: Optional[int] = None
    hourly_rate_cents: Optional[int] = None
    id: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    valid_from: Optional[Any] = None


class organization_agent_prices_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None
    id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class organization_agent_prices_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None
    id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class organization_agent_prices_on_conflict(BaseModel):
    constraint: organization_agent_prices_constraint
    update_columns: List[organization_agent_prices_update_column]
    where: Optional["organization_agent_prices_bool_exp"] = None


class organization_agent_prices_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    agent_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None
    id: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class organization_agent_prices_pk_columns_input(BaseModel):
    id: Any


class organization_agent_prices_set_input(BaseModel):
    agent_id: Optional[str] = None
    created_at: Optional[Any] = None
    day_rate_cents: Optional[int] = None
    hourly_rate_cents: Optional[int] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    valid_from: Optional[Any] = None


class organization_agent_prices_stddev_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_stddev_pop_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_stddev_samp_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_stream_cursor_input(BaseModel):
    initial_value: "organization_agent_prices_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class organization_agent_prices_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    created_at: Optional[Any] = None
    day_rate_cents: Optional[int] = None
    hourly_rate_cents: Optional[int] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    valid_from: Optional[Any] = None


class organization_agent_prices_sum_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_updates(BaseModel):
    inc: Optional["organization_agent_prices_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["organization_agent_prices_set_input"] = Field(
        alias="_set", default=None
    )
    where: "organization_agent_prices_bool_exp"


class organization_agent_prices_var_pop_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_var_samp_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agent_prices_variance_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    hourly_rate_cents: Optional[order_by] = None


class organization_agents_aggregate_bool_exp(BaseModel):
    count: Optional["organization_agents_aggregate_bool_exp_count"] = None


class organization_agents_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[organization_agents_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["organization_agents_bool_exp"] = None
    predicate: "Int_comparison_exp"


class organization_agents_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["organization_agents_max_order_by"] = None
    min: Optional["organization_agents_min_order_by"] = None


class organization_agents_arr_rel_insert_input(BaseModel):
    data: List["organization_agents_insert_input"]
    on_conflict: Optional["organization_agents_on_conflict"] = None


class organization_agents_bool_exp(BaseModel):
    and_: Optional[List["organization_agents_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["organization_agents_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["organization_agents_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent: Optional["users_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    combined_logs: Optional["combined_logs_bool_exp"] = None
    combined_logs_aggregate: Optional["combined_logs_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    drivers_license_expiration: Optional["date_comparison_exp"] = None
    drivers_license_number: Optional["String_comparison_exp"] = None
    drivers_license_state: Optional["String_comparison_exp"] = None
    employee_id: Optional["String_comparison_exp"] = None
    eula_accepted_at: Optional["timestamptz_comparison_exp"] = None
    member_type: Optional["member_type_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    quotes: Optional["quote_quotes_bool_exp"] = None
    quotes_aggregate: Optional["quote_quotes_aggregate_bool_exp"] = None
    roles: Optional["org_users_xref_roles_bool_exp"] = None
    roles_aggregate: Optional["org_users_xref_roles_aggregate_bool_exp"] = None
    shifts: Optional["agent_shifts_bool_exp"] = None
    shifts_aggregate: Optional["agent_shifts_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class organization_agents_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    combined_logs: Optional["combined_logs_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    drivers_license_expiration: Optional[Any] = None
    drivers_license_number: Optional[str] = None
    drivers_license_state: Optional[str] = None
    employee_id: Optional[str] = None
    eula_accepted_at: Optional[Any] = None
    member_type: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    quotes: Optional["quote_quotes_arr_rel_insert_input"] = None
    roles: Optional["org_users_xref_roles_arr_rel_insert_input"] = None
    shifts: Optional["agent_shifts_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None


class organization_agents_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    drivers_license_expiration: Optional[order_by] = None
    drivers_license_number: Optional[order_by] = None
    drivers_license_state: Optional[order_by] = None
    employee_id: Optional[order_by] = None
    eula_accepted_at: Optional[order_by] = None
    member_type: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class organization_agents_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    drivers_license_expiration: Optional[order_by] = None
    drivers_license_number: Optional[order_by] = None
    drivers_license_state: Optional[order_by] = None
    employee_id: Optional[order_by] = None
    eula_accepted_at: Optional[order_by] = None
    member_type: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class organization_agents_obj_rel_insert_input(BaseModel):
    data: "organization_agents_insert_input"
    on_conflict: Optional["organization_agents_on_conflict"] = None


class organization_agents_on_conflict(BaseModel):
    constraint: organization_agents_constraint
    update_columns: List[organization_agents_update_column]
    where: Optional["organization_agents_bool_exp"] = None


class organization_agents_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    agent_id: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    combined_logs_aggregate: Optional["combined_logs_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    drivers_license_expiration: Optional[order_by] = None
    drivers_license_number: Optional[order_by] = None
    drivers_license_state: Optional[order_by] = None
    employee_id: Optional[order_by] = None
    eula_accepted_at: Optional[order_by] = None
    member_type: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    quotes_aggregate: Optional["quote_quotes_aggregate_order_by"] = None
    roles_aggregate: Optional["org_users_xref_roles_aggregate_order_by"] = None
    shifts_aggregate: Optional["agent_shifts_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None


class organization_agents_pk_columns_input(BaseModel):
    agent_id: str
    organization_name: str


class organization_agents_set_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    drivers_license_expiration: Optional[Any] = None
    drivers_license_number: Optional[str] = None
    drivers_license_state: Optional[str] = None
    employee_id: Optional[str] = None
    eula_accepted_at: Optional[Any] = None
    member_type: Optional[Any] = None
    organization_name: Optional[str] = None
    updated_at: Optional[Any] = None


class organization_agents_stream_cursor_input(BaseModel):
    initial_value: "organization_agents_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class organization_agents_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    drivers_license_expiration: Optional[Any] = None
    drivers_license_number: Optional[str] = None
    drivers_license_state: Optional[str] = None
    employee_id: Optional[str] = None
    eula_accepted_at: Optional[Any] = None
    member_type: Optional[Any] = None
    organization_name: Optional[str] = None
    updated_at: Optional[Any] = None


class organization_agents_updates(BaseModel):
    set: Optional["organization_agents_set_input"] = Field(alias="_set", default=None)
    where: "organization_agents_bool_exp"


class organization_timezone_history_aggregate_bool_exp(BaseModel):
    count: Optional["organization_timezone_history_aggregate_bool_exp_count"] = None


class organization_timezone_history_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[organization_timezone_history_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["organization_timezone_history_bool_exp"] = None
    predicate: "Int_comparison_exp"


class organization_timezone_history_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["organization_timezone_history_max_order_by"] = None
    min: Optional["organization_timezone_history_min_order_by"] = None


class organization_timezone_history_arr_rel_insert_input(BaseModel):
    data: List["organization_timezone_history_insert_input"]


class organization_timezone_history_bool_exp(BaseModel):
    and_: Optional[List["organization_timezone_history_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["organization_timezone_history_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["organization_timezone_history_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    timezone_name: Optional["String_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class organization_timezone_history_insert_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    timezone_name: Optional[str] = None
    valid_from: Optional[Any] = None


class organization_timezone_history_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    timezone_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class organization_timezone_history_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    timezone_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class organization_timezone_history_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    timezone_name: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class organization_timezone_history_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    organization_name: Optional[str] = None
    timezone_name: Optional[str] = None
    valid_from: Optional[Any] = None


class organization_timezone_history_stream_cursor_input(BaseModel):
    initial_value: "organization_timezone_history_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class organization_timezone_history_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    organization_name: Optional[str] = None
    timezone_name: Optional[str] = None
    valid_from: Optional[Any] = None


class organization_timezone_history_updates(BaseModel):
    set: Optional["organization_timezone_history_set_input"] = Field(
        alias="_set", default=None
    )
    where: "organization_timezone_history_bool_exp"


class organizations_bool_exp(BaseModel):
    and_: Optional[List["organizations_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["organizations_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["organizations_bool_exp"]] = Field(alias="_or", default=None)
    accent_color: Optional["String_comparison_exp"] = None
    catalogs: Optional["catalogs_bool_exp"] = None
    catalogs_aggregate: Optional["catalogs_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    custom_form_definitions: Optional["custom_form_definitions_bool_exp"] = None
    custom_form_definitions_aggregate: Optional[
        "custom_form_definitions_aggregate_bool_exp"
    ] = None
    customers: Optional["customers_bool_exp"] = None
    customers_aggregate: Optional["customers_aggregate_bool_exp"] = None
    default_agent_day_rate_cents: Optional["Int_comparison_exp"] = None
    default_invoice_net_term: Optional["Int_comparison_exp"] = None
    default_invoice_pivot: Optional["invoice_pivot_options_enum_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    event_notifications: Optional["event_notifications_bool_exp"] = None
    event_notifications_aggregate: Optional[
        "event_notifications_aggregate_bool_exp"
    ] = None
    id: Optional["String_comparison_exp"] = None
    invoice_template_above_line_items: Optional["String_comparison_exp"] = None
    invoice_template_below_line_items: Optional["String_comparison_exp"] = None
    invoices: Optional["invoices_bool_exp"] = None
    invoices_aggregate: Optional["invoices_aggregate_bool_exp"] = None
    last_invoice_number: Optional["Int_comparison_exp"] = None
    last_order_number: Optional["Int_comparison_exp"] = None
    last_quote_number: Optional["Int_comparison_exp"] = None
    last_ticket_number: Optional["Int_comparison_exp"] = None
    logo_square_dark_url: Optional["String_comparison_exp"] = None
    logo_square_light_url: Optional["String_comparison_exp"] = None
    logo_wide_dark_url: Optional["String_comparison_exp"] = None
    logo_wide_light_url: Optional["String_comparison_exp"] = None
    max_break_minutes: Optional["Int_comparison_exp"] = None
    oauth_connections: Optional["organizations_xref_oauth_bool_exp"] = None
    oauth_connections_aggregate: Optional[
        "organizations_xref_oauth_aggregate_bool_exp"
    ] = None
    orders: Optional["demand_orders_bool_exp"] = None
    orders_aggregate: Optional["demand_orders_aggregate_bool_exp"] = None
    organization_agents: Optional["organization_agents_bool_exp"] = None
    organization_agents_aggregate: Optional[
        "organization_agents_aggregate_bool_exp"
    ] = None
    postal_address: Optional["String_comparison_exp"] = None
    price_books: Optional["price_books_bool_exp"] = None
    price_books_aggregate: Optional["price_books_aggregate_bool_exp"] = None
    reply_to_address: Optional["String_comparison_exp"] = None
    short_name: Optional["String_comparison_exp"] = None
    tickets: Optional["tickets_bool_exp"] = None
    tickets_aggregate: Optional["tickets_aggregate_bool_exp"] = None
    timezone_history_entries: Optional["organization_timezone_history_bool_exp"] = None
    timezone_history_entries_aggregate: Optional[
        "organization_timezone_history_aggregate_bool_exp"
    ] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_feature_flags: Optional["org_xref_feature_flags_bool_exp"] = None
    xref_feature_flags_aggregate: Optional[
        "org_xref_feature_flags_aggregate_bool_exp"
    ] = None


class organizations_inc_input(BaseModel):
    default_agent_day_rate_cents: Optional[int] = None
    default_invoice_net_term: Optional[int] = None
    last_invoice_number: Optional[int] = None
    last_order_number: Optional[int] = None
    last_quote_number: Optional[int] = None
    last_ticket_number: Optional[int] = None
    max_break_minutes: Optional[int] = None


class organizations_insert_input(BaseModel):
    accent_color: Optional[str] = None
    catalogs: Optional["catalogs_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    custom_form_definitions: Optional[
        "custom_form_definitions_arr_rel_insert_input"
    ] = None
    customers: Optional["customers_arr_rel_insert_input"] = None
    default_agent_day_rate_cents: Optional[int] = None
    default_invoice_net_term: Optional[int] = None
    default_invoice_pivot: Optional[invoice_pivot_options_enum] = None
    deleted_at: Optional[Any] = None
    event_notifications: Optional["event_notifications_arr_rel_insert_input"] = None
    id: Optional[str] = None
    invoice_template_above_line_items: Optional[str] = None
    invoice_template_below_line_items: Optional[str] = None
    invoices: Optional["invoices_arr_rel_insert_input"] = None
    last_invoice_number: Optional[int] = None
    last_order_number: Optional[int] = None
    last_quote_number: Optional[int] = None
    last_ticket_number: Optional[int] = None
    logo_square_dark_url: Optional[str] = None
    logo_square_light_url: Optional[str] = None
    logo_wide_dark_url: Optional[str] = None
    logo_wide_light_url: Optional[str] = None
    max_break_minutes: Optional[int] = None
    oauth_connections: Optional["organizations_xref_oauth_arr_rel_insert_input"] = None
    orders: Optional["demand_orders_arr_rel_insert_input"] = None
    organization_agents: Optional["organization_agents_arr_rel_insert_input"] = None
    postal_address: Optional[str] = None
    price_books: Optional["price_books_arr_rel_insert_input"] = None
    reply_to_address: Optional[str] = None
    short_name: Optional[str] = None
    tickets: Optional["tickets_arr_rel_insert_input"] = None
    timezone_history_entries: Optional[
        "organization_timezone_history_arr_rel_insert_input"
    ] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    xref_feature_flags: Optional["org_xref_feature_flags_arr_rel_insert_input"] = None


class organizations_obj_rel_insert_input(BaseModel):
    data: "organizations_insert_input"
    on_conflict: Optional["organizations_on_conflict"] = None


class organizations_on_conflict(BaseModel):
    constraint: organizations_constraint
    update_columns: List[organizations_update_column]
    where: Optional["organizations_bool_exp"] = None


class organizations_order_by(BaseModel):
    accent_color: Optional[order_by] = None
    catalogs_aggregate: Optional["catalogs_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    custom_form_definitions_aggregate: Optional[
        "custom_form_definitions_aggregate_order_by"
    ] = None
    customers_aggregate: Optional["customers_aggregate_order_by"] = None
    default_agent_day_rate_cents: Optional[order_by] = None
    default_invoice_net_term: Optional[order_by] = None
    default_invoice_pivot: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    event_notifications_aggregate: Optional[
        "event_notifications_aggregate_order_by"
    ] = None
    id: Optional[order_by] = None
    invoice_template_above_line_items: Optional[order_by] = None
    invoice_template_below_line_items: Optional[order_by] = None
    invoices_aggregate: Optional["invoices_aggregate_order_by"] = None
    last_invoice_number: Optional[order_by] = None
    last_order_number: Optional[order_by] = None
    last_quote_number: Optional[order_by] = None
    last_ticket_number: Optional[order_by] = None
    logo_square_dark_url: Optional[order_by] = None
    logo_square_light_url: Optional[order_by] = None
    logo_wide_dark_url: Optional[order_by] = None
    logo_wide_light_url: Optional[order_by] = None
    max_break_minutes: Optional[order_by] = None
    oauth_connections_aggregate: Optional[
        "organizations_xref_oauth_aggregate_order_by"
    ] = None
    orders_aggregate: Optional["demand_orders_aggregate_order_by"] = None
    organization_agents_aggregate: Optional[
        "organization_agents_aggregate_order_by"
    ] = None
    postal_address: Optional[order_by] = None
    price_books_aggregate: Optional["price_books_aggregate_order_by"] = None
    reply_to_address: Optional[order_by] = None
    short_name: Optional[order_by] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    timezone_history_entries_aggregate: Optional[
        "organization_timezone_history_aggregate_order_by"
    ] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    xref_feature_flags_aggregate: Optional[
        "org_xref_feature_flags_aggregate_order_by"
    ] = None


class organizations_pk_columns_input(BaseModel):
    id: str


class organizations_set_input(BaseModel):
    accent_color: Optional[str] = None
    created_at: Optional[Any] = None
    default_agent_day_rate_cents: Optional[int] = None
    default_invoice_net_term: Optional[int] = None
    default_invoice_pivot: Optional[invoice_pivot_options_enum] = None
    deleted_at: Optional[Any] = None
    id: Optional[str] = None
    invoice_template_above_line_items: Optional[str] = None
    invoice_template_below_line_items: Optional[str] = None
    last_invoice_number: Optional[int] = None
    last_order_number: Optional[int] = None
    last_quote_number: Optional[int] = None
    last_ticket_number: Optional[int] = None
    logo_square_dark_url: Optional[str] = None
    logo_square_light_url: Optional[str] = None
    logo_wide_dark_url: Optional[str] = None
    logo_wide_light_url: Optional[str] = None
    max_break_minutes: Optional[int] = None
    postal_address: Optional[str] = None
    reply_to_address: Optional[str] = None
    short_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class organizations_stream_cursor_input(BaseModel):
    initial_value: "organizations_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class organizations_stream_cursor_value_input(BaseModel):
    accent_color: Optional[str] = None
    created_at: Optional[Any] = None
    default_agent_day_rate_cents: Optional[int] = None
    default_invoice_net_term: Optional[int] = None
    default_invoice_pivot: Optional[invoice_pivot_options_enum] = None
    deleted_at: Optional[Any] = None
    id: Optional[str] = None
    invoice_template_above_line_items: Optional[str] = None
    invoice_template_below_line_items: Optional[str] = None
    last_invoice_number: Optional[int] = None
    last_order_number: Optional[int] = None
    last_quote_number: Optional[int] = None
    last_ticket_number: Optional[int] = None
    logo_square_dark_url: Optional[str] = None
    logo_square_light_url: Optional[str] = None
    logo_wide_dark_url: Optional[str] = None
    logo_wide_light_url: Optional[str] = None
    max_break_minutes: Optional[int] = None
    postal_address: Optional[str] = None
    reply_to_address: Optional[str] = None
    short_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class organizations_updates(BaseModel):
    inc: Optional["organizations_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["organizations_set_input"] = Field(alias="_set", default=None)
    where: "organizations_bool_exp"


class organizations_xref_oauth_aggregate_bool_exp(BaseModel):
    count: Optional["organizations_xref_oauth_aggregate_bool_exp_count"] = None


class organizations_xref_oauth_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[organizations_xref_oauth_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["organizations_xref_oauth_bool_exp"] = None
    predicate: "Int_comparison_exp"


class organizations_xref_oauth_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["organizations_xref_oauth_max_order_by"] = None
    min: Optional["organizations_xref_oauth_min_order_by"] = None


class organizations_xref_oauth_arr_rel_insert_input(BaseModel):
    data: List["organizations_xref_oauth_insert_input"]
    on_conflict: Optional["organizations_xref_oauth_on_conflict"] = None


class organizations_xref_oauth_bool_exp(BaseModel):
    and_: Optional[List["organizations_xref_oauth_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["organizations_xref_oauth_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["organizations_xref_oauth_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    oauth_provider: Optional["oauth_providers_enum_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_id: Optional["String_comparison_exp"] = None
    realm_id: Optional["String_comparison_exp"] = None
    refresh_token: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class organizations_xref_oauth_insert_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    oauth_provider: Optional[oauth_providers_enum] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_id: Optional[str] = None
    realm_id: Optional[str] = None
    refresh_token: Optional[str] = None
    updated_at: Optional[Any] = None


class organizations_xref_oauth_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    organization_id: Optional[order_by] = None
    realm_id: Optional[order_by] = None
    refresh_token: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class organizations_xref_oauth_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    organization_id: Optional[order_by] = None
    realm_id: Optional[order_by] = None
    refresh_token: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class organizations_xref_oauth_on_conflict(BaseModel):
    constraint: organizations_xref_oauth_constraint
    update_columns: List[organizations_xref_oauth_update_column]
    where: Optional["organizations_xref_oauth_bool_exp"] = None


class organizations_xref_oauth_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    oauth_provider: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_id: Optional[order_by] = None
    realm_id: Optional[order_by] = None
    refresh_token: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class organizations_xref_oauth_pk_columns_input(BaseModel):
    oauth_provider: oauth_providers_enum
    organization_id: str


class organizations_xref_oauth_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    oauth_provider: Optional[oauth_providers_enum] = None
    organization_id: Optional[str] = None
    realm_id: Optional[str] = None
    refresh_token: Optional[str] = None
    updated_at: Optional[Any] = None


class organizations_xref_oauth_stream_cursor_input(BaseModel):
    initial_value: "organizations_xref_oauth_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class organizations_xref_oauth_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    oauth_provider: Optional[oauth_providers_enum] = None
    organization_id: Optional[str] = None
    realm_id: Optional[str] = None
    refresh_token: Optional[str] = None
    updated_at: Optional[Any] = None


class organizations_xref_oauth_updates(BaseModel):
    set: Optional["organizations_xref_oauth_set_input"] = Field(
        alias="_set", default=None
    )
    where: "organizations_xref_oauth_bool_exp"


class payment_statuses_bool_exp(BaseModel):
    and_: Optional[List["payment_statuses_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["payment_statuses_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["payment_statuses_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class payment_statuses_enum_comparison_exp(BaseModel):
    eq: Optional[payment_statuses_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[payment_statuses_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[payment_statuses_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[payment_statuses_enum]] = Field(alias="_nin", default=None)


class payment_statuses_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class payment_statuses_on_conflict(BaseModel):
    constraint: payment_statuses_constraint
    update_columns: List[payment_statuses_update_column]
    where: Optional["payment_statuses_bool_exp"] = None


class payment_statuses_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class payment_statuses_pk_columns_input(BaseModel):
    value: str


class payment_statuses_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class payment_statuses_stream_cursor_input(BaseModel):
    initial_value: "payment_statuses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class payment_statuses_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class payment_statuses_updates(BaseModel):
    set: Optional["payment_statuses_set_input"] = Field(alias="_set", default=None)
    where: "payment_statuses_bool_exp"


class price_book_agent_prices_aggregate_bool_exp(BaseModel):
    count: Optional["price_book_agent_prices_aggregate_bool_exp_count"] = None


class price_book_agent_prices_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[price_book_agent_prices_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["price_book_agent_prices_bool_exp"] = None
    predicate: "Int_comparison_exp"


class price_book_agent_prices_aggregate_order_by(BaseModel):
    avg: Optional["price_book_agent_prices_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["price_book_agent_prices_max_order_by"] = None
    min: Optional["price_book_agent_prices_min_order_by"] = None
    stddev: Optional["price_book_agent_prices_stddev_order_by"] = None
    stddev_pop: Optional["price_book_agent_prices_stddev_pop_order_by"] = None
    stddev_samp: Optional["price_book_agent_prices_stddev_samp_order_by"] = None
    sum: Optional["price_book_agent_prices_sum_order_by"] = None
    var_pop: Optional["price_book_agent_prices_var_pop_order_by"] = None
    var_samp: Optional["price_book_agent_prices_var_samp_order_by"] = None
    variance: Optional["price_book_agent_prices_variance_order_by"] = None


class price_book_agent_prices_arr_rel_insert_input(BaseModel):
    data: List["price_book_agent_prices_insert_input"]
    on_conflict: Optional["price_book_agent_prices_on_conflict"] = None


class price_book_agent_prices_avg_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_bool_exp(BaseModel):
    and_: Optional[List["price_book_agent_prices_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["price_book_agent_prices_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["price_book_agent_prices_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent: Optional["users_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    day_rate_cents: Optional["Int_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    labor_hour_rate_cents: Optional["Int_comparison_exp"] = None
    mile_rate_cents: Optional["Int_comparison_exp"] = None
    overtime_hour_rate_cents: Optional["Int_comparison_exp"] = None
    price_book: Optional["price_books_bool_exp"] = None
    price_book_id: Optional["uuid_comparison_exp"] = None
    travel_hour_rate_cents: Optional["Int_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class price_book_agent_prices_inc_input(BaseModel):
    day_rate_cents: Optional[int] = None
    labor_hour_rate_cents: Optional[int] = None
    mile_rate_cents: Optional[int] = None
    overtime_hour_rate_cents: Optional[int] = None
    travel_hour_rate_cents: Optional[int] = None


class price_book_agent_prices_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    day_rate_cents: Optional[int] = None
    id: Optional[Any] = None
    labor_hour_rate_cents: Optional[int] = None
    mile_rate_cents: Optional[int] = None
    overtime_hour_rate_cents: Optional[int] = None
    price_book: Optional["price_books_obj_rel_insert_input"] = None
    price_book_id: Optional[Any] = None
    travel_hour_rate_cents: Optional[int] = None
    valid_from: Optional[Any] = None


class price_book_agent_prices_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    day_rate_cents: Optional[order_by] = None
    id: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class price_book_agent_prices_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    day_rate_cents: Optional[order_by] = None
    id: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class price_book_agent_prices_on_conflict(BaseModel):
    constraint: price_book_agent_prices_constraint
    update_columns: List[price_book_agent_prices_update_column]
    where: Optional["price_book_agent_prices_bool_exp"] = None


class price_book_agent_prices_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    agent_id: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    day_rate_cents: Optional[order_by] = None
    id: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    price_book: Optional["price_books_order_by"] = None
    price_book_id: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class price_book_agent_prices_pk_columns_input(BaseModel):
    id: Any


class price_book_agent_prices_set_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    day_rate_cents: Optional[int] = None
    id: Optional[Any] = None
    labor_hour_rate_cents: Optional[int] = None
    mile_rate_cents: Optional[int] = None
    overtime_hour_rate_cents: Optional[int] = None
    price_book_id: Optional[Any] = None
    travel_hour_rate_cents: Optional[int] = None
    valid_from: Optional[Any] = None


class price_book_agent_prices_stddev_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_stddev_pop_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_stddev_samp_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_stream_cursor_input(BaseModel):
    initial_value: "price_book_agent_prices_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class price_book_agent_prices_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    day_rate_cents: Optional[int] = None
    id: Optional[Any] = None
    labor_hour_rate_cents: Optional[int] = None
    mile_rate_cents: Optional[int] = None
    overtime_hour_rate_cents: Optional[int] = None
    price_book_id: Optional[Any] = None
    travel_hour_rate_cents: Optional[int] = None
    valid_from: Optional[Any] = None


class price_book_agent_prices_sum_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_updates(BaseModel):
    inc: Optional["price_book_agent_prices_inc_input"] = Field(
        alias="_inc", default=None
    )
    set: Optional["price_book_agent_prices_set_input"] = Field(
        alias="_set", default=None
    )
    where: "price_book_agent_prices_bool_exp"


class price_book_agent_prices_var_pop_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_var_samp_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_book_agent_prices_variance_order_by(BaseModel):
    day_rate_cents: Optional[order_by] = None
    labor_hour_rate_cents: Optional[order_by] = None
    mile_rate_cents: Optional[order_by] = None
    overtime_hour_rate_cents: Optional[order_by] = None
    travel_hour_rate_cents: Optional[order_by] = None


class price_books_aggregate_bool_exp(BaseModel):
    count: Optional["price_books_aggregate_bool_exp_count"] = None


class price_books_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[price_books_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["price_books_bool_exp"] = None
    predicate: "Int_comparison_exp"


class price_books_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["price_books_max_order_by"] = None
    min: Optional["price_books_min_order_by"] = None


class price_books_append_input(BaseModel):
    notesj: Optional[Any] = None


class price_books_arr_rel_insert_input(BaseModel):
    data: List["price_books_insert_input"]
    on_conflict: Optional["price_books_on_conflict"] = None


class price_books_bool_exp(BaseModel):
    and_: Optional[List["price_books_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["price_books_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["price_books_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customers: Optional["customers_bool_exp"] = None
    customers_aggregate: Optional["customers_aggregate_bool_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    product_prices: Optional["product_prices_bool_exp"] = None
    product_prices_aggregate: Optional["product_prices_aggregate_bool_exp"] = None
    title: Optional["String_comparison_exp"] = None
    travel_prices: Optional["travel_prices_bool_exp"] = None
    travel_prices_aggregate: Optional["travel_prices_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class price_books_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class price_books_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class price_books_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class price_books_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customers: Optional["customers_arr_rel_insert_input"] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    product_prices: Optional["product_prices_arr_rel_insert_input"] = None
    title: Optional[str] = None
    travel_prices: Optional["travel_prices_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None


class price_books_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class price_books_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class price_books_obj_rel_insert_input(BaseModel):
    data: "price_books_insert_input"
    on_conflict: Optional["price_books_on_conflict"] = None


class price_books_on_conflict(BaseModel):
    constraint: price_books_constraint
    update_columns: List[price_books_update_column]
    where: Optional["price_books_bool_exp"] = None


class price_books_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customers_aggregate: Optional["customers_aggregate_order_by"] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    product_prices_aggregate: Optional["product_prices_aggregate_order_by"] = None
    title: Optional[order_by] = None
    travel_prices_aggregate: Optional["travel_prices_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None


class price_books_pk_columns_input(BaseModel):
    id: Any


class price_books_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class price_books_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class price_books_stream_cursor_input(BaseModel):
    initial_value: "price_books_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class price_books_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class price_books_updates(BaseModel):
    append: Optional["price_books_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["price_books_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["price_books_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["price_books_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["price_books_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["price_books_set_input"] = Field(alias="_set", default=None)
    where: "price_books_bool_exp"


class product_prices_aggregate_bool_exp(BaseModel):
    count: Optional["product_prices_aggregate_bool_exp_count"] = None


class product_prices_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[product_prices_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["product_prices_bool_exp"] = None
    predicate: "Int_comparison_exp"


class product_prices_aggregate_order_by(BaseModel):
    avg: Optional["product_prices_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["product_prices_max_order_by"] = None
    min: Optional["product_prices_min_order_by"] = None
    stddev: Optional["product_prices_stddev_order_by"] = None
    stddev_pop: Optional["product_prices_stddev_pop_order_by"] = None
    stddev_samp: Optional["product_prices_stddev_samp_order_by"] = None
    sum: Optional["product_prices_sum_order_by"] = None
    var_pop: Optional["product_prices_var_pop_order_by"] = None
    var_samp: Optional["product_prices_var_samp_order_by"] = None
    variance: Optional["product_prices_variance_order_by"] = None


class product_prices_arr_rel_insert_input(BaseModel):
    data: List["product_prices_insert_input"]
    on_conflict: Optional["product_prices_on_conflict"] = None


class product_prices_avg_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_bool_exp(BaseModel):
    and_: Optional[List["product_prices_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["product_prices_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["product_prices_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    billing_unit: Optional["String_comparison_exp"] = None
    cents_per_unit: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    price_book: Optional["price_books_bool_exp"] = None
    price_book_id: Optional["uuid_comparison_exp"] = None
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class product_prices_inc_input(BaseModel):
    cents_per_unit: Optional[int] = None


class product_prices_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    billing_unit: Optional[str] = None
    cents_per_unit: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    price_book: Optional["price_books_obj_rel_insert_input"] = None
    price_book_id: Optional[Any] = None
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class product_prices_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    billing_unit: Optional[order_by] = None
    cents_per_unit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    product_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class product_prices_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    billing_unit: Optional[order_by] = None
    cents_per_unit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    product_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class product_prices_on_conflict(BaseModel):
    constraint: product_prices_constraint
    update_columns: List[product_prices_update_column]
    where: Optional["product_prices_bool_exp"] = None


class product_prices_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    billing_unit: Optional[order_by] = None
    cents_per_unit: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    price_book: Optional["price_books_order_by"] = None
    price_book_id: Optional[order_by] = None
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class product_prices_pk_columns_input(BaseModel):
    id: Any


class product_prices_set_input(BaseModel):
    author_id: Optional[str] = None
    billing_unit: Optional[str] = None
    cents_per_unit: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    price_book_id: Optional[Any] = None
    product_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class product_prices_stddev_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_stddev_pop_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_stddev_samp_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_stream_cursor_input(BaseModel):
    initial_value: "product_prices_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class product_prices_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    billing_unit: Optional[str] = None
    cents_per_unit: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    price_book_id: Optional[Any] = None
    product_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class product_prices_sum_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_updates(BaseModel):
    inc: Optional["product_prices_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["product_prices_set_input"] = Field(alias="_set", default=None)
    where: "product_prices_bool_exp"


class product_prices_var_pop_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_var_samp_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_prices_variance_order_by(BaseModel):
    cents_per_unit: Optional[order_by] = None


class product_types_bool_exp(BaseModel):
    and_: Optional[List["product_types_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["product_types_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["product_types_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    products: Optional["products_bool_exp"] = None
    products_aggregate: Optional["products_aggregate_bool_exp"] = None
    value: Optional["String_comparison_exp"] = None


class product_types_enum_comparison_exp(BaseModel):
    eq: Optional[product_types_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[product_types_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[product_types_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[product_types_enum]] = Field(alias="_nin", default=None)


class product_types_insert_input(BaseModel):
    comment: Optional[str] = None
    products: Optional["products_arr_rel_insert_input"] = None
    value: Optional[str] = None


class product_types_on_conflict(BaseModel):
    constraint: product_types_constraint
    update_columns: List[product_types_update_column]
    where: Optional["product_types_bool_exp"] = None


class product_types_order_by(BaseModel):
    comment: Optional[order_by] = None
    products_aggregate: Optional["products_aggregate_order_by"] = None
    value: Optional[order_by] = None


class product_types_pk_columns_input(BaseModel):
    value: str


class product_types_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class product_types_stream_cursor_input(BaseModel):
    initial_value: "product_types_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class product_types_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class product_types_updates(BaseModel):
    set: Optional["product_types_set_input"] = Field(alias="_set", default=None)
    where: "product_types_bool_exp"


class products_aggregate_bool_exp(BaseModel):
    count: Optional["products_aggregate_bool_exp_count"] = None


class products_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[products_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["products_bool_exp"] = None
    predicate: "Int_comparison_exp"


class products_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["products_max_order_by"] = None
    min: Optional["products_min_order_by"] = None


class products_arr_rel_insert_input(BaseModel):
    data: List["products_insert_input"]
    on_conflict: Optional["products_on_conflict"] = None


class products_bool_exp(BaseModel):
    and_: Optional[List["products_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["products_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["products_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    catalog: Optional["catalogs_bool_exp"] = None
    catalog_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    description: Optional["String_comparison_exp"] = None
    external_id: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    prices: Optional["product_prices_bool_exp"] = None
    prices_aggregate: Optional["product_prices_aggregate_bool_exp"] = None
    product_type: Optional["product_types_enum_comparison_exp"] = None
    products_xref_custom_forms: Optional["products_xref_custom_forms_bool_exp"] = None
    products_xref_custom_forms_aggregate: Optional[
        "products_xref_custom_forms_aggregate_bool_exp"
    ] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_products: Optional["media_xref_products_bool_exp"] = None
    xref_products_aggregate: Optional["media_xref_products_aggregate_bool_exp"] = None


class products_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    catalog: Optional["catalogs_obj_rel_insert_input"] = None
    catalog_id: Optional[Any] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    description: Optional[str] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    prices: Optional["product_prices_arr_rel_insert_input"] = None
    product_type: Optional[product_types_enum] = None
    products_xref_custom_forms: Optional[
        "products_xref_custom_forms_arr_rel_insert_input"
    ] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    xref_products: Optional["media_xref_products_arr_rel_insert_input"] = None


class products_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    catalog_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    description: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class products_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    catalog_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    description: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class products_obj_rel_insert_input(BaseModel):
    data: "products_insert_input"
    on_conflict: Optional["products_on_conflict"] = None


class products_on_conflict(BaseModel):
    constraint: products_constraint
    update_columns: List[products_update_column]
    where: Optional["products_bool_exp"] = None


class products_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    catalog: Optional["catalogs_order_by"] = None
    catalog_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    description: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    prices_aggregate: Optional["product_prices_aggregate_order_by"] = None
    product_type: Optional[order_by] = None
    products_xref_custom_forms_aggregate: Optional[
        "products_xref_custom_forms_aggregate_order_by"
    ] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    xref_products_aggregate: Optional["media_xref_products_aggregate_order_by"] = None


class products_pk_columns_input(BaseModel):
    id: Any


class products_set_input(BaseModel):
    author_id: Optional[str] = None
    catalog_id: Optional[Any] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    description: Optional[str] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    product_type: Optional[product_types_enum] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class products_stream_cursor_input(BaseModel):
    initial_value: "products_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class products_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    catalog_id: Optional[Any] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    description: Optional[str] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    product_type: Optional[product_types_enum] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class products_updates(BaseModel):
    set: Optional["products_set_input"] = Field(alias="_set", default=None)
    where: "products_bool_exp"


class products_xref_custom_forms_aggregate_bool_exp(BaseModel):
    bool_and: Optional["products_xref_custom_forms_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["products_xref_custom_forms_aggregate_bool_exp_bool_or"] = None
    count: Optional["products_xref_custom_forms_aggregate_bool_exp_count"] = None


class products_xref_custom_forms_aggregate_bool_exp_bool_and(BaseModel):
    arguments: products_xref_custom_forms_select_column_products_xref_custom_forms_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["products_xref_custom_forms_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class products_xref_custom_forms_aggregate_bool_exp_bool_or(BaseModel):
    arguments: products_xref_custom_forms_select_column_products_xref_custom_forms_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["products_xref_custom_forms_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class products_xref_custom_forms_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[products_xref_custom_forms_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["products_xref_custom_forms_bool_exp"] = None
    predicate: "Int_comparison_exp"


class products_xref_custom_forms_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["products_xref_custom_forms_max_order_by"] = None
    min: Optional["products_xref_custom_forms_min_order_by"] = None


class products_xref_custom_forms_arr_rel_insert_input(BaseModel):
    data: List["products_xref_custom_forms_insert_input"]
    on_conflict: Optional["products_xref_custom_forms_on_conflict"] = None


class products_xref_custom_forms_bool_exp(BaseModel):
    and_: Optional[List["products_xref_custom_forms_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["products_xref_custom_forms_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["products_xref_custom_forms_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    custom_form_definition: Optional["custom_form_definitions_bool_exp"] = None
    custom_form_definition_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_required: Optional["Boolean_comparison_exp"] = None
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None


class products_xref_custom_forms_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definition: Optional["custom_form_definitions_obj_rel_insert_input"] = (
        None
    )
    custom_form_definition_id: Optional[Any] = None
    id: Optional[Any] = None
    is_required: Optional[bool] = None
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None


class products_xref_custom_forms_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definition_id: Optional[order_by] = None
    id: Optional[order_by] = None
    product_id: Optional[order_by] = None


class products_xref_custom_forms_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definition_id: Optional[order_by] = None
    id: Optional[order_by] = None
    product_id: Optional[order_by] = None


class products_xref_custom_forms_on_conflict(BaseModel):
    constraint: products_xref_custom_forms_constraint
    update_columns: List[products_xref_custom_forms_update_column]
    where: Optional["products_xref_custom_forms_bool_exp"] = None


class products_xref_custom_forms_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definition: Optional["custom_form_definitions_order_by"] = None
    custom_form_definition_id: Optional[order_by] = None
    id: Optional[order_by] = None
    is_required: Optional[order_by] = None
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None


class products_xref_custom_forms_pk_columns_input(BaseModel):
    id: Any


class products_xref_custom_forms_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definition_id: Optional[Any] = None
    id: Optional[Any] = None
    is_required: Optional[bool] = None
    product_id: Optional[Any] = None


class products_xref_custom_forms_stream_cursor_input(BaseModel):
    initial_value: "products_xref_custom_forms_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class products_xref_custom_forms_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definition_id: Optional[Any] = None
    id: Optional[Any] = None
    is_required: Optional[bool] = None
    product_id: Optional[Any] = None


class products_xref_custom_forms_updates(BaseModel):
    set: Optional["products_xref_custom_forms_set_input"] = Field(
        alias="_set", default=None
    )
    where: "products_xref_custom_forms_bool_exp"


class quote_accept_args(BaseModel):
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)


class quote_archive_args(BaseModel):
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)


class quote_clone_args(BaseModel):
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)


class quote_comment_args(BaseModel):
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)


class quote_create_args(BaseModel):
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    items: Optional[Any] = Field(alias="_items", default=None)
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)
    ref: Optional[str] = Field(alias="_ref", default=None)
    service_date_end: Optional[Any] = Field(alias="_service_date_end", default=None)
    service_date_start: Optional[Any] = Field(alias="_service_date_start", default=None)
    valid_until: Optional[Any] = Field(alias="_valid_until", default=None)


class quote_event_types_bool_exp(BaseModel):
    and_: Optional[List["quote_event_types_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["quote_event_types_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["quote_event_types_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class quote_event_types_enum_comparison_exp(BaseModel):
    eq: Optional[quote_event_types_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[quote_event_types_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[quote_event_types_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[quote_event_types_enum]] = Field(alias="_nin", default=None)


class quote_event_types_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class quote_event_types_on_conflict(BaseModel):
    constraint: quote_event_types_constraint
    update_columns: List[quote_event_types_update_column]
    where: Optional["quote_event_types_bool_exp"] = None


class quote_event_types_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class quote_event_types_pk_columns_input(BaseModel):
    value: str


class quote_event_types_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class quote_event_types_stream_cursor_input(BaseModel):
    initial_value: "quote_event_types_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class quote_event_types_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class quote_event_types_updates(BaseModel):
    set: Optional["quote_event_types_set_input"] = Field(alias="_set", default=None)
    where: "quote_event_types_bool_exp"


class quote_events_aggregate_bool_exp(BaseModel):
    count: Optional["quote_events_aggregate_bool_exp_count"] = None


class quote_events_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[quote_events_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["quote_events_bool_exp"] = None
    predicate: "Int_comparison_exp"


class quote_events_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["quote_events_max_order_by"] = None
    min: Optional["quote_events_min_order_by"] = None


class quote_events_append_input(BaseModel):
    notesj: Optional[Any] = None


class quote_events_arr_rel_insert_input(BaseModel):
    data: List["quote_events_insert_input"]
    on_conflict: Optional["quote_events_on_conflict"] = None


class quote_events_bool_exp(BaseModel):
    and_: Optional[List["quote_events_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["quote_events_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["quote_events_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    cloned_from_quote: Optional["quote_quotes_bool_exp"] = None
    cloned_from_quote_id: Optional["uuid_comparison_exp"] = None
    cloned_to_quote: Optional["quote_quotes_bool_exp"] = None
    cloned_to_quote_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    desired_reviewer: Optional["users_bool_exp"] = None
    desired_reviewer_id: Optional["String_comparison_exp"] = None
    event_type: Optional["quote_event_types_enum_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    order: Optional["demand_orders_bool_exp"] = None
    order_id: Optional["uuid_comparison_exp"] = None
    quote: Optional["quote_quotes_bool_exp"] = None
    quote_id: Optional["uuid_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_quote_events_bool_exp"] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_quote_events_aggregate_bool_exp"
    ] = None


class quote_events_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class quote_events_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class quote_events_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class quote_events_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    cloned_from_quote: Optional["quote_quotes_obj_rel_insert_input"] = None
    cloned_from_quote_id: Optional[Any] = None
    cloned_to_quote: Optional["quote_quotes_obj_rel_insert_input"] = None
    cloned_to_quote_id: Optional[Any] = None
    created_at: Optional[Any] = None
    desired_reviewer: Optional["users_obj_rel_insert_input"] = None
    desired_reviewer_id: Optional[str] = None
    event_type: Optional[quote_event_types_enum] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order: Optional["demand_orders_obj_rel_insert_input"] = None
    order_id: Optional[Any] = None
    quote: Optional["quote_quotes_obj_rel_insert_input"] = None
    quote_id: Optional[Any] = None
    xref_media_uploads: Optional["media_xref_quote_events_arr_rel_insert_input"] = None


class quote_events_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cloned_from_quote_id: Optional[order_by] = None
    cloned_to_quote_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    desired_reviewer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    order_id: Optional[order_by] = None
    quote_id: Optional[order_by] = None


class quote_events_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cloned_from_quote_id: Optional[order_by] = None
    cloned_to_quote_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    desired_reviewer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    order_id: Optional[order_by] = None
    quote_id: Optional[order_by] = None


class quote_events_obj_rel_insert_input(BaseModel):
    data: "quote_events_insert_input"
    on_conflict: Optional["quote_events_on_conflict"] = None


class quote_events_on_conflict(BaseModel):
    constraint: quote_events_constraint
    update_columns: List[quote_events_update_column]
    where: Optional["quote_events_bool_exp"] = None


class quote_events_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    cloned_from_quote: Optional["quote_quotes_order_by"] = None
    cloned_from_quote_id: Optional[order_by] = None
    cloned_to_quote: Optional["quote_quotes_order_by"] = None
    cloned_to_quote_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    desired_reviewer: Optional["users_order_by"] = None
    desired_reviewer_id: Optional[order_by] = None
    event_type: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    order: Optional["demand_orders_order_by"] = None
    order_id: Optional[order_by] = None
    quote: Optional["quote_quotes_order_by"] = None
    quote_id: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_quote_events_aggregate_order_by"
    ] = None


class quote_events_pk_columns_input(BaseModel):
    id: Any


class quote_events_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class quote_events_set_input(BaseModel):
    author_id: Optional[str] = None
    cloned_from_quote_id: Optional[Any] = None
    cloned_to_quote_id: Optional[Any] = None
    created_at: Optional[Any] = None
    desired_reviewer_id: Optional[str] = None
    event_type: Optional[quote_event_types_enum] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order_id: Optional[Any] = None
    quote_id: Optional[Any] = None


class quote_events_stream_cursor_input(BaseModel):
    initial_value: "quote_events_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class quote_events_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    cloned_from_quote_id: Optional[Any] = None
    cloned_to_quote_id: Optional[Any] = None
    created_at: Optional[Any] = None
    desired_reviewer_id: Optional[str] = None
    event_type: Optional[quote_event_types_enum] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order_id: Optional[Any] = None
    quote_id: Optional[Any] = None


class quote_events_updates(BaseModel):
    append: Optional["quote_events_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["quote_events_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["quote_events_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["quote_events_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["quote_events_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["quote_events_set_input"] = Field(alias="_set", default=None)
    where: "quote_events_bool_exp"


class quote_items_aggregate_bool_exp(BaseModel):
    count: Optional["quote_items_aggregate_bool_exp_count"] = None


class quote_items_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[quote_items_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["quote_items_bool_exp"] = None
    predicate: "Int_comparison_exp"


class quote_items_aggregate_order_by(BaseModel):
    avg: Optional["quote_items_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["quote_items_max_order_by"] = None
    min: Optional["quote_items_min_order_by"] = None
    stddev: Optional["quote_items_stddev_order_by"] = None
    stddev_pop: Optional["quote_items_stddev_pop_order_by"] = None
    stddev_samp: Optional["quote_items_stddev_samp_order_by"] = None
    sum: Optional["quote_items_sum_order_by"] = None
    var_pop: Optional["quote_items_var_pop_order_by"] = None
    var_samp: Optional["quote_items_var_samp_order_by"] = None
    variance: Optional["quote_items_variance_order_by"] = None


class quote_items_append_input(BaseModel):
    notesj: Optional[Any] = None


class quote_items_arr_rel_insert_input(BaseModel):
    data: List["quote_items_insert_input"]
    on_conflict: Optional["quote_items_on_conflict"] = None


class quote_items_avg_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_bool_exp(BaseModel):
    and_: Optional[List["quote_items_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["quote_items_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["quote_items_bool_exp"]] = Field(alias="_or", default=None)
    agent: Optional["users_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    agent_unconfirmed: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    product: Optional["products_bool_exp"] = None
    product_id: Optional["uuid_comparison_exp"] = None
    product_unconfirmed: Optional["String_comparison_exp"] = None
    qty: Optional["Int_comparison_exp"] = None
    quote: Optional["quote_quotes_bool_exp"] = None
    quote_id: Optional["uuid_comparison_exp"] = None
    subtotal_cents: Optional["Int_comparison_exp"] = None
    subtotal_override_cents: Optional["Int_comparison_exp"] = None
    unit_price_cents: Optional["Int_comparison_exp"] = None
    unit_price_override_cents: Optional["Int_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_site: Optional["work_sites_bool_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None
    work_site_unconfirmed: Optional["String_comparison_exp"] = None


class quote_items_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class quote_items_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class quote_items_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class quote_items_inc_input(BaseModel):
    qty: Optional[int] = None
    subtotal_cents: Optional[int] = None
    subtotal_override_cents: Optional[int] = None
    unit_price_cents: Optional[int] = None
    unit_price_override_cents: Optional[int] = None


class quote_items_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    agent_unconfirmed: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    product: Optional["products_obj_rel_insert_input"] = None
    product_id: Optional[Any] = None
    product_unconfirmed: Optional[str] = None
    qty: Optional[int] = None
    quote: Optional["quote_quotes_obj_rel_insert_input"] = None
    quote_id: Optional[Any] = None
    subtotal_cents: Optional[int] = None
    subtotal_override_cents: Optional[int] = None
    unit_price_cents: Optional[int] = None
    unit_price_override_cents: Optional[int] = None
    updated_at: Optional[Any] = None
    work_site: Optional["work_sites_obj_rel_insert_input"] = None
    work_site_id: Optional[Any] = None
    work_site_unconfirmed: Optional[str] = None


class quote_items_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    agent_unconfirmed: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    product_id: Optional[order_by] = None
    product_unconfirmed: Optional[order_by] = None
    qty: Optional[order_by] = None
    quote_id: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_site_id: Optional[order_by] = None
    work_site_unconfirmed: Optional[order_by] = None


class quote_items_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    agent_unconfirmed: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    product_id: Optional[order_by] = None
    product_unconfirmed: Optional[order_by] = None
    qty: Optional[order_by] = None
    quote_id: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_site_id: Optional[order_by] = None
    work_site_unconfirmed: Optional[order_by] = None


class quote_items_on_conflict(BaseModel):
    constraint: quote_items_constraint
    update_columns: List[quote_items_update_column]
    where: Optional["quote_items_bool_exp"] = None


class quote_items_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    agent_id: Optional[order_by] = None
    agent_unconfirmed: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    product: Optional["products_order_by"] = None
    product_id: Optional[order_by] = None
    product_unconfirmed: Optional[order_by] = None
    qty: Optional[order_by] = None
    quote: Optional["quote_quotes_order_by"] = None
    quote_id: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    work_site: Optional["work_sites_order_by"] = None
    work_site_id: Optional[order_by] = None
    work_site_unconfirmed: Optional[order_by] = None


class quote_items_pk_columns_input(BaseModel):
    id: Any


class quote_items_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class quote_items_set_input(BaseModel):
    agent_id: Optional[str] = None
    agent_unconfirmed: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    product_id: Optional[Any] = None
    product_unconfirmed: Optional[str] = None
    qty: Optional[int] = None
    quote_id: Optional[Any] = None
    subtotal_cents: Optional[int] = None
    subtotal_override_cents: Optional[int] = None
    unit_price_cents: Optional[int] = None
    unit_price_override_cents: Optional[int] = None
    updated_at: Optional[Any] = None
    work_site_id: Optional[Any] = None
    work_site_unconfirmed: Optional[str] = None


class quote_items_stddev_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_stddev_pop_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_stddev_samp_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_stream_cursor_input(BaseModel):
    initial_value: "quote_items_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class quote_items_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    agent_unconfirmed: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    product_id: Optional[Any] = None
    product_unconfirmed: Optional[str] = None
    qty: Optional[int] = None
    quote_id: Optional[Any] = None
    subtotal_cents: Optional[int] = None
    subtotal_override_cents: Optional[int] = None
    unit_price_cents: Optional[int] = None
    unit_price_override_cents: Optional[int] = None
    updated_at: Optional[Any] = None
    work_site_id: Optional[Any] = None
    work_site_unconfirmed: Optional[str] = None


class quote_items_sum_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_updates(BaseModel):
    append: Optional["quote_items_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["quote_items_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["quote_items_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["quote_items_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["quote_items_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["quote_items_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["quote_items_set_input"] = Field(alias="_set", default=None)
    where: "quote_items_bool_exp"


class quote_items_var_pop_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_var_samp_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_items_variance_order_by(BaseModel):
    qty: Optional[order_by] = None
    subtotal_cents: Optional[order_by] = None
    subtotal_override_cents: Optional[order_by] = None
    unit_price_cents: Optional[order_by] = None
    unit_price_override_cents: Optional[order_by] = None


class quote_mark_as_sent_args(BaseModel):
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)
    user_ids: Optional[Any] = Field(alias="_user_ids", default=None)


class quote_quotes_aggregate_bool_exp(BaseModel):
    count: Optional["quote_quotes_aggregate_bool_exp_count"] = None


class quote_quotes_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[quote_quotes_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["quote_quotes_bool_exp"] = None
    predicate: "Int_comparison_exp"


class quote_quotes_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["quote_quotes_max_order_by"] = None
    min: Optional["quote_quotes_min_order_by"] = None


class quote_quotes_append_input(BaseModel):
    notesj: Optional[Any] = None


class quote_quotes_arr_rel_insert_input(BaseModel):
    data: List["quote_quotes_insert_input"]
    on_conflict: Optional["quote_quotes_on_conflict"] = None


class quote_quotes_bool_exp(BaseModel):
    and_: Optional[List["quote_quotes_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["quote_quotes_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["quote_quotes_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    delivery_status: Optional["delivery_statuses_enum_comparison_exp"] = None
    events: Optional["quote_events_bool_exp"] = None
    events_aggregate: Optional["quote_events_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    items: Optional["quote_items_bool_exp"] = None
    items_aggregate: Optional["quote_items_aggregate_bool_exp"] = None
    lifecycle_status: Optional["lifecycle_statuses_enum_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    orders: Optional["demand_orders_bool_exp"] = None
    orders_aggregate: Optional["demand_orders_aggregate_bool_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    ref: Optional["String_comparison_exp"] = None
    review_status: Optional["review_statuses_enum_comparison_exp"] = None
    service_date_end: Optional["timestamptz_comparison_exp"] = None
    service_date_start: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    valid_until: Optional["timestamptz_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_quotes_bool_exp"] = None
    xref_media_uploads_aggregate: Optional["media_xref_quotes_aggregate_bool_exp"] = (
        None
    )


class quote_quotes_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class quote_quotes_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class quote_quotes_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class quote_quotes_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    delivery_status: Optional[delivery_statuses_enum] = None
    events: Optional["quote_events_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    items: Optional["quote_items_arr_rel_insert_input"] = None
    lifecycle_status: Optional[lifecycle_statuses_enum] = None
    notesj: Optional[Any] = None
    orders: Optional["demand_orders_arr_rel_insert_input"] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    review_status: Optional[review_statuses_enum] = None
    service_date_end: Optional[Any] = None
    service_date_start: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_until: Optional[Any] = None
    xref_media_uploads: Optional["media_xref_quotes_arr_rel_insert_input"] = None


class quote_quotes_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    service_date_end: Optional[order_by] = None
    service_date_start: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_until: Optional[order_by] = None


class quote_quotes_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    service_date_end: Optional[order_by] = None
    service_date_start: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_until: Optional[order_by] = None


class quote_quotes_obj_rel_insert_input(BaseModel):
    data: "quote_quotes_insert_input"
    on_conflict: Optional["quote_quotes_on_conflict"] = None


class quote_quotes_on_conflict(BaseModel):
    constraint: quote_quotes_constraint
    update_columns: List[quote_quotes_update_column]
    where: Optional["quote_quotes_bool_exp"] = None


class quote_quotes_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    delivery_status: Optional[order_by] = None
    events_aggregate: Optional["quote_events_aggregate_order_by"] = None
    id: Optional[order_by] = None
    items_aggregate: Optional["quote_items_aggregate_order_by"] = None
    lifecycle_status: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    orders_aggregate: Optional["demand_orders_aggregate_order_by"] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    review_status: Optional[order_by] = None
    service_date_end: Optional[order_by] = None
    service_date_start: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_until: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional["media_xref_quotes_aggregate_order_by"] = (
        None
    )


class quote_quotes_pk_columns_input(BaseModel):
    id: Any


class quote_quotes_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class quote_quotes_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    delivery_status: Optional[delivery_statuses_enum] = None
    id: Optional[Any] = None
    lifecycle_status: Optional[lifecycle_statuses_enum] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    review_status: Optional[review_statuses_enum] = None
    service_date_end: Optional[Any] = None
    service_date_start: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_until: Optional[Any] = None


class quote_quotes_stream_cursor_input(BaseModel):
    initial_value: "quote_quotes_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class quote_quotes_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    delivery_status: Optional[delivery_statuses_enum] = None
    id: Optional[Any] = None
    lifecycle_status: Optional[lifecycle_statuses_enum] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    review_status: Optional[review_statuses_enum] = None
    service_date_end: Optional[Any] = None
    service_date_start: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_until: Optional[Any] = None


class quote_quotes_updates(BaseModel):
    append: Optional["quote_quotes_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["quote_quotes_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["quote_quotes_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["quote_quotes_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["quote_quotes_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["quote_quotes_set_input"] = Field(alias="_set", default=None)
    where: "quote_quotes_bool_exp"


class quote_reject_args(BaseModel):
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)


class quote_unarchive_args(BaseModel):
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)


class quote_update_args(BaseModel):
    customer_id: Optional[Any] = Field(alias="_customer_id", default=None)
    items: Optional[Any] = Field(alias="_items", default=None)
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    notes: Optional[Any] = Field(alias="_notes", default=None)
    quote_id: Optional[Any] = Field(alias="_quote_id", default=None)
    ref: Optional[str] = Field(alias="_ref", default=None)
    service_date_end: Optional[Any] = Field(alias="_service_date_end", default=None)
    service_date_start: Optional[Any] = Field(alias="_service_date_start", default=None)
    valid_until: Optional[Any] = Field(alias="_valid_until", default=None)


class report_uploads_append_input(BaseModel):
    report_params: Optional[Any] = None


class report_uploads_bool_exp(BaseModel):
    and_: Optional[List["report_uploads_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["report_uploads_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["report_uploads_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    content_size: Optional["Int_comparison_exp"] = None
    content_type: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    filename: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    report_params: Optional["jsonb_comparison_exp"] = None
    report_type: Optional["String_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    url: Optional["String_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["String_comparison_exp"] = None
    work_site: Optional["work_sites_bool_exp"] = None
    work_site_id: Optional["uuid_comparison_exp"] = None


class report_uploads_delete_at_path_input(BaseModel):
    report_params: Optional[List[str]] = None


class report_uploads_delete_elem_input(BaseModel):
    report_params: Optional[int] = None


class report_uploads_delete_key_input(BaseModel):
    report_params: Optional[str] = None


class report_uploads_inc_input(BaseModel):
    content_size: Optional[int] = None


class report_uploads_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    content_size: Optional[int] = None
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    filename: Optional[str] = None
    id: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    report_params: Optional[Any] = None
    report_type: Optional[str] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[str] = None
    work_site: Optional["work_sites_obj_rel_insert_input"] = None
    work_site_id: Optional[Any] = None


class report_uploads_on_conflict(BaseModel):
    constraint: report_uploads_constraint
    update_columns: List[report_uploads_update_column]
    where: Optional["report_uploads_bool_exp"] = None


class report_uploads_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    content_size: Optional[order_by] = None
    content_type: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    filename: Optional[order_by] = None
    id: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    report_params: Optional[order_by] = None
    report_type: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None
    work_site: Optional["work_sites_order_by"] = None
    work_site_id: Optional[order_by] = None


class report_uploads_pk_columns_input(BaseModel):
    id: Any


class report_uploads_prepend_input(BaseModel):
    report_params: Optional[Any] = None


class report_uploads_set_input(BaseModel):
    author_id: Optional[str] = None
    content_size: Optional[int] = None
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    filename: Optional[str] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    report_params: Optional[Any] = None
    report_type: Optional[str] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    user_id: Optional[str] = None
    work_site_id: Optional[Any] = None


class report_uploads_stream_cursor_input(BaseModel):
    initial_value: "report_uploads_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class report_uploads_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    content_size: Optional[int] = None
    content_type: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    filename: Optional[str] = None
    id: Optional[Any] = None
    organization_name: Optional[str] = None
    report_params: Optional[Any] = None
    report_type: Optional[str] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None
    user_id: Optional[str] = None
    work_site_id: Optional[Any] = None


class report_uploads_updates(BaseModel):
    append: Optional["report_uploads_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["report_uploads_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["report_uploads_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["report_uploads_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["report_uploads_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["report_uploads_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["report_uploads_set_input"] = Field(alias="_set", default=None)
    where: "report_uploads_bool_exp"


class review_statuses_bool_exp(BaseModel):
    and_: Optional[List["review_statuses_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["review_statuses_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["review_statuses_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    tickets: Optional["tickets_bool_exp"] = None
    tickets_aggregate: Optional["tickets_aggregate_bool_exp"] = None
    value: Optional["String_comparison_exp"] = None


class review_statuses_enum_comparison_exp(BaseModel):
    eq: Optional[review_statuses_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[review_statuses_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[review_statuses_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[review_statuses_enum]] = Field(alias="_nin", default=None)


class review_statuses_insert_input(BaseModel):
    comment: Optional[str] = None
    tickets: Optional["tickets_arr_rel_insert_input"] = None
    value: Optional[str] = None


class review_statuses_obj_rel_insert_input(BaseModel):
    data: "review_statuses_insert_input"
    on_conflict: Optional["review_statuses_on_conflict"] = None


class review_statuses_on_conflict(BaseModel):
    constraint: review_statuses_constraint
    update_columns: List[review_statuses_update_column]
    where: Optional["review_statuses_bool_exp"] = None


class review_statuses_order_by(BaseModel):
    comment: Optional[order_by] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    value: Optional[order_by] = None


class review_statuses_pk_columns_input(BaseModel):
    value: str


class review_statuses_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class review_statuses_stream_cursor_input(BaseModel):
    initial_value: "review_statuses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class review_statuses_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class review_statuses_updates(BaseModel):
    set: Optional["review_statuses_set_input"] = Field(alias="_set", default=None)
    where: "review_statuses_bool_exp"


class search_work_sites_args(BaseModel):
    query: Optional[str] = Field(alias="_query", default=None)


class signatures_bool_exp(BaseModel):
    and_: Optional[List["signatures_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["signatures_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["signatures_bool_exp"]] = Field(alias="_or", default=None)
    author_email: Optional["String_comparison_exp"] = None
    author_name: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    customer: Optional["customers_bool_exp"] = None
    customer_id: Optional["uuid_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    requester_id: Optional["String_comparison_exp"] = None
    url: Optional["String_comparison_exp"] = None


class signatures_insert_input(BaseModel):
    author_email: Optional[str] = None
    author_name: Optional[str] = None
    created_at: Optional[Any] = None
    customer: Optional["customers_obj_rel_insert_input"] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    requester_id: Optional[str] = None
    url: Optional[str] = None


class signatures_obj_rel_insert_input(BaseModel):
    data: "signatures_insert_input"
    on_conflict: Optional["signatures_on_conflict"] = None


class signatures_on_conflict(BaseModel):
    constraint: signatures_constraint
    update_columns: List[signatures_update_column]
    where: Optional["signatures_bool_exp"] = None


class signatures_order_by(BaseModel):
    author_email: Optional[order_by] = None
    author_name: Optional[order_by] = None
    created_at: Optional[order_by] = None
    customer: Optional["customers_order_by"] = None
    customer_id: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    requester_id: Optional[order_by] = None
    url: Optional[order_by] = None


class signatures_pk_columns_input(BaseModel):
    id: Any


class signatures_set_input(BaseModel):
    author_email: Optional[str] = None
    author_name: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    requester_id: Optional[str] = None
    url: Optional[str] = None


class signatures_stream_cursor_input(BaseModel):
    initial_value: "signatures_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class signatures_stream_cursor_value_input(BaseModel):
    author_email: Optional[str] = None
    author_name: Optional[str] = None
    created_at: Optional[Any] = None
    customer_id: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    requester_id: Optional[str] = None
    url: Optional[str] = None


class signatures_updates(BaseModel):
    set: Optional["signatures_set_input"] = Field(alias="_set", default=None)
    where: "signatures_bool_exp"


class ticket_activity_bool_exp(BaseModel):
    and_: Optional[List["ticket_activity_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["ticket_activity_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["ticket_activity_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    expense_log: Optional["expense_logs_bool_exp"] = None
    expense_log_id: Optional["uuid_comparison_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_custom_form_entry: Optional["ticket_custom_form_entries_bool_exp"] = None
    ticket_custom_form_entry_id: Optional["uuid_comparison_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    ticket_review_event: Optional["ticket_review_events_bool_exp"] = None
    ticket_review_event_id: Optional["uuid_comparison_exp"] = None
    travel_log: Optional["travel_logs_bool_exp"] = None
    travel_log_id: Optional["uuid_comparison_exp"] = None
    work_log: Optional["work_logs_bool_exp"] = None
    work_log_id: Optional["uuid_comparison_exp"] = None


class ticket_activity_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    expense_log: Optional["expense_logs_order_by"] = None
    expense_log_id: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_custom_form_entry: Optional["ticket_custom_form_entries_order_by"] = None
    ticket_custom_form_entry_id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    ticket_review_event: Optional["ticket_review_events_order_by"] = None
    ticket_review_event_id: Optional[order_by] = None
    travel_log: Optional["travel_logs_order_by"] = None
    travel_log_id: Optional[order_by] = None
    work_log: Optional["work_logs_order_by"] = None
    work_log_id: Optional[order_by] = None


class ticket_activity_stream_cursor_input(BaseModel):
    initial_value: "ticket_activity_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_activity_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    ended_at: Optional[Any] = None
    expense_log_id: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_custom_form_entry_id: Optional[Any] = None
    ticket_id: Optional[Any] = None
    ticket_review_event_id: Optional[Any] = None
    travel_log_id: Optional[Any] = None
    work_log_id: Optional[Any] = None


class ticket_agents_aggregate_bool_exp(BaseModel):
    count: Optional["ticket_agents_aggregate_bool_exp_count"] = None


class ticket_agents_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[ticket_agents_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["ticket_agents_bool_exp"] = None
    predicate: "Int_comparison_exp"


class ticket_agents_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["ticket_agents_max_order_by"] = None
    min: Optional["ticket_agents_min_order_by"] = None


class ticket_agents_arr_rel_insert_input(BaseModel):
    data: List["ticket_agents_insert_input"]
    on_conflict: Optional["ticket_agents_on_conflict"] = None


class ticket_agents_bool_exp(BaseModel):
    and_: Optional[List["ticket_agents_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["ticket_agents_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["ticket_agents_bool_exp"]] = Field(alias="_or", default=None)
    agent: Optional["users_bool_exp"] = None
    agent_id: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class ticket_agents_insert_input(BaseModel):
    agent: Optional["users_obj_rel_insert_input"] = None
    agent_id: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class ticket_agents_max_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class ticket_agents_min_order_by(BaseModel):
    agent_id: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class ticket_agents_on_conflict(BaseModel):
    constraint: ticket_agents_constraint
    update_columns: List[ticket_agents_update_column]
    where: Optional["ticket_agents_bool_exp"] = None


class ticket_agents_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    agent_id: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class ticket_agents_pk_columns_input(BaseModel):
    id: Any


class ticket_agents_set_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class ticket_agents_stream_cursor_input(BaseModel):
    initial_value: "ticket_agents_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_agents_stream_cursor_value_input(BaseModel):
    agent_id: Optional[str] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class ticket_agents_updates(BaseModel):
    set: Optional["ticket_agents_set_input"] = Field(alias="_set", default=None)
    where: "ticket_agents_bool_exp"


class ticket_aggregates_all_bool_exp(BaseModel):
    and_: Optional[List["ticket_aggregates_all_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["ticket_aggregates_all_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["ticket_aggregates_all_bool_exp"]] = Field(
        alias="_or", default=None
    )
    calloff_total: Optional["bigint_comparison_exp"] = None
    dedicated_total: Optional["bigint_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    ticket_status: Optional["String_comparison_exp"] = None
    total: Optional["bigint_comparison_exp"] = None


class ticket_aggregates_all_order_by(BaseModel):
    calloff_total: Optional[order_by] = None
    dedicated_total: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ticket_status: Optional[order_by] = None
    total: Optional[order_by] = None


class ticket_aggregates_all_stream_cursor_input(BaseModel):
    initial_value: "ticket_aggregates_all_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_aggregates_all_stream_cursor_value_input(BaseModel):
    calloff_total: Optional[Any] = None
    dedicated_total: Optional[Any] = None
    organization_name: Optional[str] = None
    ticket_status: Optional[str] = None
    total: Optional[Any] = None


class ticket_aggregates_by_agent_bool_exp(BaseModel):
    and_: Optional[List["ticket_aggregates_by_agent_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["ticket_aggregates_by_agent_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["ticket_aggregates_by_agent_bool_exp"]] = Field(
        alias="_or", default=None
    )
    agent: Optional["users_bool_exp"] = None
    assigned_agent_id: Optional["String_comparison_exp"] = None
    calloff_total: Optional["bigint_comparison_exp"] = None
    dedicated_total: Optional["bigint_comparison_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    status: Optional["ticket_statuses_bool_exp"] = None
    ticket_status: Optional["String_comparison_exp"] = None
    total: Optional["bigint_comparison_exp"] = None


class ticket_aggregates_by_agent_order_by(BaseModel):
    agent: Optional["users_order_by"] = None
    assigned_agent_id: Optional[order_by] = None
    calloff_total: Optional[order_by] = None
    dedicated_total: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    status: Optional["ticket_statuses_order_by"] = None
    ticket_status: Optional[order_by] = None
    total: Optional[order_by] = None


class ticket_aggregates_by_agent_stream_cursor_input(BaseModel):
    initial_value: "ticket_aggregates_by_agent_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_aggregates_by_agent_stream_cursor_value_input(BaseModel):
    assigned_agent_id: Optional[str] = None
    calloff_total: Optional[Any] = None
    dedicated_total: Optional[Any] = None
    organization_name: Optional[str] = None
    ticket_status: Optional[str] = None
    total: Optional[Any] = None


class ticket_custom_form_entries_aggregate_bool_exp(BaseModel):
    count: Optional["ticket_custom_form_entries_aggregate_bool_exp_count"] = None


class ticket_custom_form_entries_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[ticket_custom_form_entries_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["ticket_custom_form_entries_bool_exp"] = None
    predicate: "Int_comparison_exp"


class ticket_custom_form_entries_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["ticket_custom_form_entries_max_order_by"] = None
    min: Optional["ticket_custom_form_entries_min_order_by"] = None


class ticket_custom_form_entries_append_input(BaseModel):
    original_payload: Optional[Any] = None
    payload: Optional[Any] = None


class ticket_custom_form_entries_arr_rel_insert_input(BaseModel):
    data: List["ticket_custom_form_entries_insert_input"]
    on_conflict: Optional["ticket_custom_form_entries_on_conflict"] = None


class ticket_custom_form_entries_bool_exp(BaseModel):
    and_: Optional[List["ticket_custom_form_entries_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["ticket_custom_form_entries_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["ticket_custom_form_entries_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    custom_form_definition: Optional["custom_form_definitions_bool_exp"] = None
    custom_form_definition_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    original_payload: Optional["jsonb_comparison_exp"] = None
    payload: Optional["jsonb_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_ticket_custom_form_entries_bool_exp"] = (
        None
    )
    xref_media_uploads_aggregate: Optional[
        "media_xref_ticket_custom_form_entries_aggregate_bool_exp"
    ] = None


class ticket_custom_form_entries_delete_at_path_input(BaseModel):
    original_payload: Optional[List[str]] = None
    payload: Optional[List[str]] = None


class ticket_custom_form_entries_delete_elem_input(BaseModel):
    original_payload: Optional[int] = None
    payload: Optional[int] = None


class ticket_custom_form_entries_delete_key_input(BaseModel):
    original_payload: Optional[str] = None
    payload: Optional[str] = None


class ticket_custom_form_entries_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definition: Optional["custom_form_definitions_obj_rel_insert_input"] = (
        None
    )
    custom_form_definition_id: Optional[Any] = None
    id: Optional[Any] = None
    original_payload: Optional[Any] = None
    payload: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    xref_media_uploads: Optional[
        "media_xref_ticket_custom_form_entries_arr_rel_insert_input"
    ] = None


class ticket_custom_form_entries_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definition_id: Optional[order_by] = None
    id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class ticket_custom_form_entries_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definition_id: Optional[order_by] = None
    id: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class ticket_custom_form_entries_obj_rel_insert_input(BaseModel):
    data: "ticket_custom_form_entries_insert_input"
    on_conflict: Optional["ticket_custom_form_entries_on_conflict"] = None


class ticket_custom_form_entries_on_conflict(BaseModel):
    constraint: ticket_custom_form_entries_constraint
    update_columns: List[ticket_custom_form_entries_update_column]
    where: Optional["ticket_custom_form_entries_bool_exp"] = None


class ticket_custom_form_entries_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definition: Optional["custom_form_definitions_order_by"] = None
    custom_form_definition_id: Optional[order_by] = None
    id: Optional[order_by] = None
    original_payload: Optional[order_by] = None
    payload: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_ticket_custom_form_entries_aggregate_order_by"
    ] = None


class ticket_custom_form_entries_pk_columns_input(BaseModel):
    id: Any


class ticket_custom_form_entries_prepend_input(BaseModel):
    original_payload: Optional[Any] = None
    payload: Optional[Any] = None


class ticket_custom_form_entries_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definition_id: Optional[Any] = None
    id: Optional[Any] = None
    original_payload: Optional[Any] = None
    payload: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class ticket_custom_form_entries_stream_cursor_input(BaseModel):
    initial_value: "ticket_custom_form_entries_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_custom_form_entries_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definition_id: Optional[Any] = None
    id: Optional[Any] = None
    original_payload: Optional[Any] = None
    payload: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class ticket_custom_form_entries_updates(BaseModel):
    append: Optional["ticket_custom_form_entries_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["ticket_custom_form_entries_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["ticket_custom_form_entries_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["ticket_custom_form_entries_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["ticket_custom_form_entries_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["ticket_custom_form_entries_set_input"] = Field(
        alias="_set", default=None
    )
    where: "ticket_custom_form_entries_bool_exp"


class ticket_dates_bool_exp(BaseModel):
    and_: Optional[List["ticket_dates_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["ticket_dates_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["ticket_dates_bool_exp"]] = Field(alias="_or", default=None)
    first_work: Optional["timestamptz_comparison_exp"] = None
    last_work: Optional["timestamptz_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None


class ticket_dates_insert_input(BaseModel):
    first_work: Optional[Any] = None
    last_work: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None


class ticket_dates_obj_rel_insert_input(BaseModel):
    data: "ticket_dates_insert_input"


class ticket_dates_order_by(BaseModel):
    first_work: Optional[order_by] = None
    last_work: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None


class ticket_dates_stream_cursor_input(BaseModel):
    initial_value: "ticket_dates_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_dates_stream_cursor_value_input(BaseModel):
    first_work: Optional[Any] = None
    last_work: Optional[Any] = None
    ticket_id: Optional[Any] = None


class ticket_review_event_types_bool_exp(BaseModel):
    and_: Optional[List["ticket_review_event_types_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["ticket_review_event_types_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["ticket_review_event_types_bool_exp"]] = Field(
        alias="_or", default=None
    )
    comment: Optional["String_comparison_exp"] = None
    ticket_review_events: Optional["ticket_review_events_bool_exp"] = None
    ticket_review_events_aggregate: Optional[
        "ticket_review_events_aggregate_bool_exp"
    ] = None
    value: Optional["String_comparison_exp"] = None


class ticket_review_event_types_enum_comparison_exp(BaseModel):
    eq: Optional[ticket_review_event_types_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[ticket_review_event_types_enum]] = Field(
        alias="_in", default=None
    )
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[ticket_review_event_types_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[ticket_review_event_types_enum]] = Field(
        alias="_nin", default=None
    )


class ticket_review_event_types_insert_input(BaseModel):
    comment: Optional[str] = None
    ticket_review_events: Optional["ticket_review_events_arr_rel_insert_input"] = None
    value: Optional[str] = None


class ticket_review_event_types_obj_rel_insert_input(BaseModel):
    data: "ticket_review_event_types_insert_input"
    on_conflict: Optional["ticket_review_event_types_on_conflict"] = None


class ticket_review_event_types_on_conflict(BaseModel):
    constraint: ticket_review_event_types_constraint
    update_columns: List[ticket_review_event_types_update_column]
    where: Optional["ticket_review_event_types_bool_exp"] = None


class ticket_review_event_types_order_by(BaseModel):
    comment: Optional[order_by] = None
    ticket_review_events_aggregate: Optional[
        "ticket_review_events_aggregate_order_by"
    ] = None
    value: Optional[order_by] = None


class ticket_review_event_types_pk_columns_input(BaseModel):
    value: str


class ticket_review_event_types_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class ticket_review_event_types_stream_cursor_input(BaseModel):
    initial_value: "ticket_review_event_types_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_review_event_types_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class ticket_review_event_types_updates(BaseModel):
    set: Optional["ticket_review_event_types_set_input"] = Field(
        alias="_set", default=None
    )
    where: "ticket_review_event_types_bool_exp"


class ticket_review_events_aggregate_bool_exp(BaseModel):
    count: Optional["ticket_review_events_aggregate_bool_exp_count"] = None


class ticket_review_events_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[ticket_review_events_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["ticket_review_events_bool_exp"] = None
    predicate: "Int_comparison_exp"


class ticket_review_events_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["ticket_review_events_max_order_by"] = None
    min: Optional["ticket_review_events_min_order_by"] = None


class ticket_review_events_append_input(BaseModel):
    notesj: Optional[Any] = None


class ticket_review_events_arr_rel_insert_input(BaseModel):
    data: List["ticket_review_events_insert_input"]
    on_conflict: Optional["ticket_review_events_on_conflict"] = None


class ticket_review_events_bool_exp(BaseModel):
    and_: Optional[List["ticket_review_events_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["ticket_review_events_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["ticket_review_events_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    desired_reviewer: Optional["users_bool_exp"] = None
    desired_reviewer_id: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_review_event_type_by_ticket_review_event_type: Optional[
        "ticket_review_event_types_bool_exp"
    ] = Field(alias="ticketReviewEventTypeByTicketReviewEventType", default=None)
    ticket_id: Optional["uuid_comparison_exp"] = None
    ticket_review_event_type: Optional[
        "ticket_review_event_types_enum_comparison_exp"
    ] = None


class ticket_review_events_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class ticket_review_events_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class ticket_review_events_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class ticket_review_events_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    desired_reviewer: Optional["users_obj_rel_insert_input"] = None
    desired_reviewer_id: Optional[str] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_review_event_type_by_ticket_review_event_type: Optional[
        "ticket_review_event_types_obj_rel_insert_input"
    ] = Field(alias="ticketReviewEventTypeByTicketReviewEventType", default=None)
    ticket_id: Optional[Any] = None
    ticket_review_event_type: Optional[ticket_review_event_types_enum] = None


class ticket_review_events_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    desired_reviewer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    ticket_id: Optional[order_by] = None


class ticket_review_events_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    desired_reviewer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    ticket_id: Optional[order_by] = None


class ticket_review_events_on_conflict(BaseModel):
    constraint: ticket_review_events_constraint
    update_columns: List[ticket_review_events_update_column]
    where: Optional["ticket_review_events_bool_exp"] = None


class ticket_review_events_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    desired_reviewer: Optional["users_order_by"] = None
    desired_reviewer_id: Optional[order_by] = None
    id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_review_event_type_by_ticket_review_event_type: Optional[
        "ticket_review_event_types_order_by"
    ] = Field(alias="ticketReviewEventTypeByTicketReviewEventType", default=None)
    ticket_id: Optional[order_by] = None
    ticket_review_event_type: Optional[order_by] = None


class ticket_review_events_pk_columns_input(BaseModel):
    id: Any


class ticket_review_events_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class ticket_review_events_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    desired_reviewer_id: Optional[str] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    ticket_id: Optional[Any] = None
    ticket_review_event_type: Optional[ticket_review_event_types_enum] = None


class ticket_review_events_stream_cursor_input(BaseModel):
    initial_value: "ticket_review_events_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_review_events_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    desired_reviewer_id: Optional[str] = None
    id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    ticket_id: Optional[Any] = None
    ticket_review_event_type: Optional[ticket_review_event_types_enum] = None


class ticket_review_events_updates(BaseModel):
    append: Optional["ticket_review_events_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["ticket_review_events_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["ticket_review_events_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["ticket_review_events_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["ticket_review_events_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["ticket_review_events_set_input"] = Field(alias="_set", default=None)
    where: "ticket_review_events_bool_exp"


class ticket_statuses_bool_exp(BaseModel):
    and_: Optional[List["ticket_statuses_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["ticket_statuses_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["ticket_statuses_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    tickets: Optional["tickets_bool_exp"] = None
    tickets_aggregate: Optional["tickets_aggregate_bool_exp"] = None
    value: Optional["String_comparison_exp"] = None


class ticket_statuses_enum_comparison_exp(BaseModel):
    eq: Optional[ticket_statuses_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[ticket_statuses_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[ticket_statuses_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[ticket_statuses_enum]] = Field(alias="_nin", default=None)


class ticket_statuses_insert_input(BaseModel):
    comment: Optional[str] = None
    tickets: Optional["tickets_arr_rel_insert_input"] = None
    value: Optional[str] = None


class ticket_statuses_obj_rel_insert_input(BaseModel):
    data: "ticket_statuses_insert_input"
    on_conflict: Optional["ticket_statuses_on_conflict"] = None


class ticket_statuses_on_conflict(BaseModel):
    constraint: ticket_statuses_constraint
    update_columns: List[ticket_statuses_update_column]
    where: Optional["ticket_statuses_bool_exp"] = None


class ticket_statuses_order_by(BaseModel):
    comment: Optional[order_by] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    value: Optional[order_by] = None


class ticket_statuses_pk_columns_input(BaseModel):
    value: str


class ticket_statuses_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class ticket_statuses_stream_cursor_input(BaseModel):
    initial_value: "ticket_statuses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class ticket_statuses_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class ticket_statuses_updates(BaseModel):
    set: Optional["ticket_statuses_set_input"] = Field(alias="_set", default=None)
    where: "ticket_statuses_bool_exp"


class tickets_aggregate_bool_exp(BaseModel):
    count: Optional["tickets_aggregate_bool_exp_count"] = None


class tickets_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[tickets_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["tickets_bool_exp"] = None
    predicate: "Int_comparison_exp"


class tickets_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["tickets_max_order_by"] = None
    min: Optional["tickets_min_order_by"] = None


class tickets_append_input(BaseModel):
    notesj: Optional[Any] = None


class tickets_arr_rel_insert_input(BaseModel):
    data: List["tickets_insert_input"]
    on_conflict: Optional["tickets_on_conflict"] = None


class tickets_bool_exp(BaseModel):
    and_: Optional[List["tickets_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["tickets_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["tickets_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    combined_logs: Optional["combined_logs_bool_exp"] = None
    combined_logs_aggregate: Optional["combined_logs_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    date_range: Optional["ticket_dates_bool_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    expense_logs: Optional["expense_logs_bool_exp"] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_bool_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    manually_scheduled_at: Optional["timestamptz_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    order_item: Optional["demand_order_items_bool_exp"] = None
    order_item_id: Optional["uuid_comparison_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    ref: Optional["String_comparison_exp"] = None
    review_status_by_review_status: Optional["review_statuses_bool_exp"] = Field(
        alias="reviewStatusByReviewStatus", default=None
    )
    review_status: Optional["review_statuses_enum_comparison_exp"] = None
    reviewer: Optional["users_bool_exp"] = None
    reviewer_id: Optional["String_comparison_exp"] = None
    signature: Optional["signatures_bool_exp"] = None
    signature_id: Optional["uuid_comparison_exp"] = None
    ticket_status_by_ticket_status: Optional["ticket_statuses_bool_exp"] = Field(
        alias="ticketStatusByTicketStatus", default=None
    )
    ticket_agents: Optional["ticket_agents_bool_exp"] = None
    ticket_agents_aggregate: Optional["ticket_agents_aggregate_bool_exp"] = None
    ticket_custom_form_entries: Optional["ticket_custom_form_entries_bool_exp"] = None
    ticket_custom_form_entries_aggregate: Optional[
        "ticket_custom_form_entries_aggregate_bool_exp"
    ] = None
    ticket_review_events: Optional["ticket_review_events_bool_exp"] = None
    ticket_review_events_aggregate: Optional[
        "ticket_review_events_aggregate_bool_exp"
    ] = None
    ticket_status: Optional["ticket_statuses_enum_comparison_exp"] = None
    travel_logs: Optional["travel_logs_bool_exp"] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    work_logs: Optional["work_logs_bool_exp"] = None
    work_logs_aggregate: Optional["work_logs_aggregate_bool_exp"] = None
    xref_media_uploads: Optional["media_xref_tickets_bool_exp"] = None
    xref_media_uploads_aggregate: Optional["media_xref_tickets_aggregate_bool_exp"] = (
        None
    )


class tickets_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class tickets_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class tickets_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class tickets_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    combined_logs: Optional["combined_logs_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    date_range: Optional["ticket_dates_obj_rel_insert_input"] = None
    deleted_at: Optional[Any] = None
    expense_logs: Optional["expense_logs_arr_rel_insert_input"] = None
    id: Optional[Any] = None
    manually_scheduled_at: Optional[Any] = None
    notesj: Optional[Any] = None
    order_item: Optional["demand_order_items_obj_rel_insert_input"] = None
    order_item_id: Optional[Any] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    review_status_by_review_status: Optional["review_statuses_obj_rel_insert_input"] = (
        Field(alias="reviewStatusByReviewStatus", default=None)
    )
    review_status: Optional[review_statuses_enum] = None
    reviewer: Optional["users_obj_rel_insert_input"] = None
    reviewer_id: Optional[str] = None
    signature: Optional["signatures_obj_rel_insert_input"] = None
    signature_id: Optional[Any] = None
    ticket_status_by_ticket_status: Optional["ticket_statuses_obj_rel_insert_input"] = (
        Field(alias="ticketStatusByTicketStatus", default=None)
    )
    ticket_agents: Optional["ticket_agents_arr_rel_insert_input"] = None
    ticket_custom_form_entries: Optional[
        "ticket_custom_form_entries_arr_rel_insert_input"
    ] = None
    ticket_review_events: Optional["ticket_review_events_arr_rel_insert_input"] = None
    ticket_status: Optional[ticket_statuses_enum] = None
    travel_logs: Optional["travel_logs_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    work_logs: Optional["work_logs_arr_rel_insert_input"] = None
    xref_media_uploads: Optional["media_xref_tickets_arr_rel_insert_input"] = None


class tickets_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    manually_scheduled_at: Optional[order_by] = None
    notes: Optional[order_by] = None
    order_item_id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    reviewer_id: Optional[order_by] = None
    signature_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class tickets_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    manually_scheduled_at: Optional[order_by] = None
    notes: Optional[order_by] = None
    order_item_id: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    reviewer_id: Optional[order_by] = None
    signature_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class tickets_obj_rel_insert_input(BaseModel):
    data: "tickets_insert_input"
    on_conflict: Optional["tickets_on_conflict"] = None


class tickets_on_conflict(BaseModel):
    constraint: tickets_constraint
    update_columns: List[tickets_update_column]
    where: Optional["tickets_bool_exp"] = None


class tickets_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    combined_logs_aggregate: Optional["combined_logs_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    date_range: Optional["ticket_dates_order_by"] = None
    deleted_at: Optional[order_by] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_order_by"] = None
    id: Optional[order_by] = None
    manually_scheduled_at: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    order_item: Optional["demand_order_items_order_by"] = None
    order_item_id: Optional[order_by] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    ref: Optional[order_by] = None
    review_status_by_review_status: Optional["review_statuses_order_by"] = Field(
        alias="reviewStatusByReviewStatus", default=None
    )
    review_status: Optional[order_by] = None
    reviewer: Optional["users_order_by"] = None
    reviewer_id: Optional[order_by] = None
    signature: Optional["signatures_order_by"] = None
    signature_id: Optional[order_by] = None
    ticket_status_by_ticket_status: Optional["ticket_statuses_order_by"] = Field(
        alias="ticketStatusByTicketStatus", default=None
    )
    ticket_agents_aggregate: Optional["ticket_agents_aggregate_order_by"] = None
    ticket_custom_form_entries_aggregate: Optional[
        "ticket_custom_form_entries_aggregate_order_by"
    ] = None
    ticket_review_events_aggregate: Optional[
        "ticket_review_events_aggregate_order_by"
    ] = None
    ticket_status: Optional[order_by] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    work_logs_aggregate: Optional["work_logs_aggregate_order_by"] = None
    xref_media_uploads_aggregate: Optional["media_xref_tickets_aggregate_order_by"] = (
        None
    )


class tickets_pk_columns_input(BaseModel):
    id: Any


class tickets_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class tickets_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    manually_scheduled_at: Optional[Any] = None
    notesj: Optional[Any] = None
    order_item_id: Optional[Any] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    review_status: Optional[review_statuses_enum] = None
    reviewer_id: Optional[str] = None
    signature_id: Optional[Any] = None
    ticket_status: Optional[ticket_statuses_enum] = None
    updated_at: Optional[Any] = None


class tickets_stream_cursor_input(BaseModel):
    initial_value: "tickets_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class tickets_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    manually_scheduled_at: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    order_item_id: Optional[Any] = None
    organization_name: Optional[str] = None
    ref: Optional[str] = None
    review_status: Optional[review_statuses_enum] = None
    reviewer_id: Optional[str] = None
    signature_id: Optional[Any] = None
    ticket_status: Optional[ticket_statuses_enum] = None
    updated_at: Optional[Any] = None


class tickets_updates(BaseModel):
    append: Optional["tickets_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["tickets_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["tickets_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["tickets_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["tickets_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["tickets_set_input"] = Field(alias="_set", default=None)
    where: "tickets_bool_exp"


class time_sheet_billing_intervals_bool_exp(BaseModel):
    and_: Optional[List["time_sheet_billing_intervals_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["time_sheet_billing_intervals_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["time_sheet_billing_intervals_bool_exp"]] = Field(
        alias="_or", default=None
    )
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class time_sheet_billing_intervals_enum_comparison_exp(BaseModel):
    eq: Optional[time_sheet_billing_intervals_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[time_sheet_billing_intervals_enum]] = Field(
        alias="_in", default=None
    )
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[time_sheet_billing_intervals_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[time_sheet_billing_intervals_enum]] = Field(
        alias="_nin", default=None
    )


class time_sheet_billing_intervals_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class time_sheet_billing_intervals_on_conflict(BaseModel):
    constraint: time_sheet_billing_intervals_constraint
    update_columns: List[time_sheet_billing_intervals_update_column]
    where: Optional["time_sheet_billing_intervals_bool_exp"] = None


class time_sheet_billing_intervals_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class time_sheet_billing_intervals_pk_columns_input(BaseModel):
    value: str


class time_sheet_billing_intervals_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class time_sheet_billing_intervals_stream_cursor_input(BaseModel):
    initial_value: "time_sheet_billing_intervals_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class time_sheet_billing_intervals_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class time_sheet_billing_intervals_updates(BaseModel):
    set: Optional["time_sheet_billing_intervals_set_input"] = Field(
        alias="_set", default=None
    )
    where: "time_sheet_billing_intervals_bool_exp"


class time_sheet_entries_by_month_args(BaseModel):
    day_in_month: Optional[Any] = Field(alias="_day_in_month", default=None)
    timezone: Optional[str] = Field(alias="_timezone", default=None)


class time_sheet_rules_aggregate_bool_exp(BaseModel):
    count: Optional["time_sheet_rules_aggregate_bool_exp_count"] = None


class time_sheet_rules_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[time_sheet_rules_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["time_sheet_rules_bool_exp"] = None
    predicate: "Int_comparison_exp"


class time_sheet_rules_aggregate_order_by(BaseModel):
    avg: Optional["time_sheet_rules_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["time_sheet_rules_max_order_by"] = None
    min: Optional["time_sheet_rules_min_order_by"] = None
    stddev: Optional["time_sheet_rules_stddev_order_by"] = None
    stddev_pop: Optional["time_sheet_rules_stddev_pop_order_by"] = None
    stddev_samp: Optional["time_sheet_rules_stddev_samp_order_by"] = None
    sum: Optional["time_sheet_rules_sum_order_by"] = None
    var_pop: Optional["time_sheet_rules_var_pop_order_by"] = None
    var_samp: Optional["time_sheet_rules_var_samp_order_by"] = None
    variance: Optional["time_sheet_rules_variance_order_by"] = None


class time_sheet_rules_arr_rel_insert_input(BaseModel):
    data: List["time_sheet_rules_insert_input"]
    on_conflict: Optional["time_sheet_rules_on_conflict"] = None


class time_sheet_rules_avg_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_bool_exp(BaseModel):
    and_: Optional[List["time_sheet_rules_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["time_sheet_rules_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["time_sheet_rules_bool_exp"]] = Field(alias="_or", default=None)
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    modifier: Optional["numeric_comparison_exp"] = None
    ruleset: Optional["time_sheet_rulesets_bool_exp"] = None
    ruleset_id: Optional["uuid_comparison_exp"] = None
    threshold_hours: Optional["numeric_comparison_exp"] = None
    time_unit: Optional["time_units_enum_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class time_sheet_rules_inc_input(BaseModel):
    modifier: Optional[Any] = None
    threshold_hours: Optional[Any] = None


class time_sheet_rules_insert_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    modifier: Optional[Any] = None
    ruleset: Optional["time_sheet_rulesets_obj_rel_insert_input"] = None
    ruleset_id: Optional[Any] = None
    threshold_hours: Optional[Any] = None
    time_unit: Optional[time_units_enum] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class time_sheet_rules_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    modifier: Optional[order_by] = None
    ruleset_id: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class time_sheet_rules_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    modifier: Optional[order_by] = None
    ruleset_id: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class time_sheet_rules_on_conflict(BaseModel):
    constraint: time_sheet_rules_constraint
    update_columns: List[time_sheet_rules_update_column]
    where: Optional["time_sheet_rules_bool_exp"] = None


class time_sheet_rules_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    modifier: Optional[order_by] = None
    ruleset: Optional["time_sheet_rulesets_order_by"] = None
    ruleset_id: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None
    time_unit: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class time_sheet_rules_pk_columns_input(BaseModel):
    id: Any


class time_sheet_rules_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    modifier: Optional[Any] = None
    ruleset_id: Optional[Any] = None
    threshold_hours: Optional[Any] = None
    time_unit: Optional[time_units_enum] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class time_sheet_rules_stddev_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_stddev_pop_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_stddev_samp_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_stream_cursor_input(BaseModel):
    initial_value: "time_sheet_rules_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class time_sheet_rules_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    modifier: Optional[Any] = None
    ruleset_id: Optional[Any] = None
    threshold_hours: Optional[Any] = None
    time_unit: Optional[time_units_enum] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class time_sheet_rules_sum_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_updates(BaseModel):
    inc: Optional["time_sheet_rules_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["time_sheet_rules_set_input"] = Field(alias="_set", default=None)
    where: "time_sheet_rules_bool_exp"


class time_sheet_rules_var_pop_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_var_samp_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rules_variance_order_by(BaseModel):
    modifier: Optional[order_by] = None
    threshold_hours: Optional[order_by] = None


class time_sheet_rulesets_append_input(BaseModel):
    notesj: Optional[Any] = None


class time_sheet_rulesets_bool_exp(BaseModel):
    and_: Optional[List["time_sheet_rulesets_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["time_sheet_rulesets_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["time_sheet_rulesets_bool_exp"]] = Field(
        alias="_or", default=None
    )
    author_id: Optional["String_comparison_exp"] = None
    billing_interval: Optional["time_sheet_billing_intervals_enum_comparison_exp"] = (
        None
    )
    contract: Optional["customer_contracts_bool_exp"] = None
    contract_aggregate: Optional["customer_contracts_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    rules: Optional["time_sheet_rules_bool_exp"] = None
    rules_aggregate: Optional["time_sheet_rules_aggregate_bool_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class time_sheet_rulesets_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class time_sheet_rulesets_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class time_sheet_rulesets_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class time_sheet_rulesets_insert_input(BaseModel):
    author_id: Optional[str] = None
    billing_interval: Optional[time_sheet_billing_intervals_enum] = None
    contract: Optional["customer_contracts_arr_rel_insert_input"] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    rules: Optional["time_sheet_rules_arr_rel_insert_input"] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class time_sheet_rulesets_obj_rel_insert_input(BaseModel):
    data: "time_sheet_rulesets_insert_input"
    on_conflict: Optional["time_sheet_rulesets_on_conflict"] = None


class time_sheet_rulesets_on_conflict(BaseModel):
    constraint: time_sheet_rulesets_constraint
    update_columns: List[time_sheet_rulesets_update_column]
    where: Optional["time_sheet_rulesets_bool_exp"] = None


class time_sheet_rulesets_order_by(BaseModel):
    author_id: Optional[order_by] = None
    billing_interval: Optional[order_by] = None
    contract_aggregate: Optional["customer_contracts_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    notesj: Optional[order_by] = None
    rules_aggregate: Optional["time_sheet_rules_aggregate_order_by"] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class time_sheet_rulesets_pk_columns_input(BaseModel):
    id: Any


class time_sheet_rulesets_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class time_sheet_rulesets_set_input(BaseModel):
    author_id: Optional[str] = None
    billing_interval: Optional[time_sheet_billing_intervals_enum] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class time_sheet_rulesets_stream_cursor_input(BaseModel):
    initial_value: "time_sheet_rulesets_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class time_sheet_rulesets_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    billing_interval: Optional[time_sheet_billing_intervals_enum] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    notesj: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class time_sheet_rulesets_updates(BaseModel):
    append: Optional["time_sheet_rulesets_append_input"] = Field(
        alias="_append", default=None
    )
    delete_at_path: Optional["time_sheet_rulesets_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["time_sheet_rulesets_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["time_sheet_rulesets_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["time_sheet_rulesets_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["time_sheet_rulesets_set_input"] = Field(alias="_set", default=None)
    where: "time_sheet_rulesets_bool_exp"


class time_units_bool_exp(BaseModel):
    and_: Optional[List["time_units_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["time_units_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["time_units_bool_exp"]] = Field(alias="_or", default=None)
    comment: Optional["String_comparison_exp"] = None
    value: Optional["String_comparison_exp"] = None


class time_units_enum_comparison_exp(BaseModel):
    eq: Optional[time_units_enum] = Field(alias="_eq", default=None)
    in_: Optional[List[time_units_enum]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    neq: Optional[time_units_enum] = Field(alias="_neq", default=None)
    nin: Optional[List[time_units_enum]] = Field(alias="_nin", default=None)


class time_units_insert_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class time_units_on_conflict(BaseModel):
    constraint: time_units_constraint
    update_columns: List[time_units_update_column]
    where: Optional["time_units_bool_exp"] = None


class time_units_order_by(BaseModel):
    comment: Optional[order_by] = None
    value: Optional[order_by] = None


class time_units_pk_columns_input(BaseModel):
    value: str


class time_units_set_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class time_units_stream_cursor_input(BaseModel):
    initial_value: "time_units_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class time_units_stream_cursor_value_input(BaseModel):
    comment: Optional[str] = None
    value: Optional[str] = None


class time_units_updates(BaseModel):
    set: Optional["time_units_set_input"] = Field(alias="_set", default=None)
    where: "time_units_bool_exp"


class timestamptz_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class travel_hours_by_product_organization_agents_args(BaseModel):
    ended_at: Optional[Any] = Field(alias="_ended_at", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    started_at: Optional[Any] = Field(alias="_started_at", default=None)


class travel_hours_per_ticket_by_product_organization_agents_args(BaseModel):
    ended_at: Optional[Any] = Field(alias="_ended_at", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    started_at: Optional[Any] = Field(alias="_started_at", default=None)


class travel_logs_aggregate_bool_exp(BaseModel):
    count: Optional["travel_logs_aggregate_bool_exp_count"] = None


class travel_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[travel_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["travel_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class travel_logs_aggregate_order_by(BaseModel):
    avg: Optional["travel_logs_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["travel_logs_max_order_by"] = None
    min: Optional["travel_logs_min_order_by"] = None
    stddev: Optional["travel_logs_stddev_order_by"] = None
    stddev_pop: Optional["travel_logs_stddev_pop_order_by"] = None
    stddev_samp: Optional["travel_logs_stddev_samp_order_by"] = None
    sum: Optional["travel_logs_sum_order_by"] = None
    var_pop: Optional["travel_logs_var_pop_order_by"] = None
    var_samp: Optional["travel_logs_var_samp_order_by"] = None
    variance: Optional["travel_logs_variance_order_by"] = None


class travel_logs_append_input(BaseModel):
    notesj: Optional[Any] = None


class travel_logs_arr_rel_insert_input(BaseModel):
    data: List["travel_logs_insert_input"]
    on_conflict: Optional["travel_logs_on_conflict"] = None


class travel_logs_avg_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_bool_exp(BaseModel):
    and_: Optional[List["travel_logs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["travel_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["travel_logs_bool_exp"]] = Field(alias="_or", default=None)
    arrived_at: Optional["timestamptz_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    departed_at: Optional["timestamptz_comparison_exp"] = None
    from_work_site: Optional["work_sites_bool_exp"] = None
    from_work_site_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice: Optional["invoices_bool_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    miles_traveled: Optional["numeric_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    shifts: Optional["agent_shifts_bool_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    to_work_site: Optional["work_sites_bool_exp"] = None
    to_work_site_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_travel_logs_bool_exp"] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_travel_logs_aggregate_bool_exp"
    ] = None


class travel_logs_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class travel_logs_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class travel_logs_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class travel_logs_inc_input(BaseModel):
    miles_traveled: Optional[Any] = None


class travel_logs_insert_input(BaseModel):
    arrived_at: Optional[Any] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    departed_at: Optional[Any] = None
    from_work_site: Optional["work_sites_obj_rel_insert_input"] = None
    from_work_site_id: Optional[Any] = None
    id: Optional[Any] = None
    invoice: Optional["invoices_obj_rel_insert_input"] = None
    invoice_id: Optional[Any] = None
    miles_traveled: Optional[Any] = None
    notesj: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    to_work_site: Optional["work_sites_obj_rel_insert_input"] = None
    to_work_site_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    xref_media_uploads: Optional["media_xref_travel_logs_arr_rel_insert_input"] = None


class travel_logs_max_order_by(BaseModel):
    arrived_at: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    departed_at: Optional[order_by] = None
    from_work_site_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    miles_traveled: Optional[order_by] = None
    notes: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    to_work_site_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class travel_logs_min_order_by(BaseModel):
    arrived_at: Optional[order_by] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    departed_at: Optional[order_by] = None
    from_work_site_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    miles_traveled: Optional[order_by] = None
    notes: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    to_work_site_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class travel_logs_obj_rel_insert_input(BaseModel):
    data: "travel_logs_insert_input"
    on_conflict: Optional["travel_logs_on_conflict"] = None


class travel_logs_on_conflict(BaseModel):
    constraint: travel_logs_constraint
    update_columns: List[travel_logs_update_column]
    where: Optional["travel_logs_bool_exp"] = None


class travel_logs_order_by(BaseModel):
    arrived_at: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    departed_at: Optional[order_by] = None
    from_work_site: Optional["work_sites_order_by"] = None
    from_work_site_id: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice: Optional["invoices_order_by"] = None
    invoice_id: Optional[order_by] = None
    miles_traveled: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    shifts_aggregate: Optional["agent_shifts_aggregate_order_by"] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    to_work_site: Optional["work_sites_order_by"] = None
    to_work_site_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_travel_logs_aggregate_order_by"
    ] = None


class travel_logs_pk_columns_input(BaseModel):
    id: Any


class travel_logs_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class travel_logs_set_input(BaseModel):
    arrived_at: Optional[Any] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    departed_at: Optional[Any] = None
    from_work_site_id: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    miles_traveled: Optional[Any] = None
    notesj: Optional[Any] = None
    ticket_id: Optional[Any] = None
    to_work_site_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class travel_logs_stddev_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_stddev_pop_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_stddev_samp_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_stream_cursor_input(BaseModel):
    initial_value: "travel_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class travel_logs_stream_cursor_value_input(BaseModel):
    arrived_at: Optional[Any] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    departed_at: Optional[Any] = None
    from_work_site_id: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    miles_traveled: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    ticket_id: Optional[Any] = None
    to_work_site_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class travel_logs_sum_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_updates(BaseModel):
    append: Optional["travel_logs_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["travel_logs_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["travel_logs_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["travel_logs_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    inc: Optional["travel_logs_inc_input"] = Field(alias="_inc", default=None)
    prepend: Optional["travel_logs_prepend_input"] = Field(
        alias="_prepend", default=None
    )
    set: Optional["travel_logs_set_input"] = Field(alias="_set", default=None)
    where: "travel_logs_bool_exp"


class travel_logs_var_pop_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_var_samp_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_logs_variance_order_by(BaseModel):
    miles_traveled: Optional[order_by] = None


class travel_prices_aggregate_bool_exp(BaseModel):
    count: Optional["travel_prices_aggregate_bool_exp_count"] = None


class travel_prices_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[travel_prices_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["travel_prices_bool_exp"] = None
    predicate: "Int_comparison_exp"


class travel_prices_aggregate_order_by(BaseModel):
    avg: Optional["travel_prices_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["travel_prices_max_order_by"] = None
    min: Optional["travel_prices_min_order_by"] = None
    stddev: Optional["travel_prices_stddev_order_by"] = None
    stddev_pop: Optional["travel_prices_stddev_pop_order_by"] = None
    stddev_samp: Optional["travel_prices_stddev_samp_order_by"] = None
    sum: Optional["travel_prices_sum_order_by"] = None
    var_pop: Optional["travel_prices_var_pop_order_by"] = None
    var_samp: Optional["travel_prices_var_samp_order_by"] = None
    variance: Optional["travel_prices_variance_order_by"] = None


class travel_prices_arr_rel_insert_input(BaseModel):
    data: List["travel_prices_insert_input"]
    on_conflict: Optional["travel_prices_on_conflict"] = None


class travel_prices_avg_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_bool_exp(BaseModel):
    and_: Optional[List["travel_prices_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["travel_prices_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["travel_prices_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    cents_per_hour: Optional["Int_comparison_exp"] = None
    cents_per_mile: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    price_book: Optional["price_books_bool_exp"] = None
    price_book_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    valid_from: Optional["timestamptz_comparison_exp"] = None


class travel_prices_inc_input(BaseModel):
    cents_per_hour: Optional[int] = None
    cents_per_mile: Optional[int] = None


class travel_prices_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    cents_per_hour: Optional[int] = None
    cents_per_mile: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    price_book: Optional["price_books_obj_rel_insert_input"] = None
    price_book_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class travel_prices_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class travel_prices_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    price_book_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class travel_prices_on_conflict(BaseModel):
    constraint: travel_prices_constraint
    update_columns: List[travel_prices_update_column]
    where: Optional["travel_prices_bool_exp"] = None


class travel_prices_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    id: Optional[order_by] = None
    price_book: Optional["price_books_order_by"] = None
    price_book_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    valid_from: Optional[order_by] = None


class travel_prices_pk_columns_input(BaseModel):
    id: Any


class travel_prices_set_input(BaseModel):
    author_id: Optional[str] = None
    cents_per_hour: Optional[int] = None
    cents_per_mile: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    price_book_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class travel_prices_stddev_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_stddev_pop_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_stddev_samp_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_stream_cursor_input(BaseModel):
    initial_value: "travel_prices_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class travel_prices_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    cents_per_hour: Optional[int] = None
    cents_per_mile: Optional[int] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    id: Optional[Any] = None
    price_book_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    valid_from: Optional[Any] = None


class travel_prices_sum_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_updates(BaseModel):
    inc: Optional["travel_prices_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["travel_prices_set_input"] = Field(alias="_set", default=None)
    where: "travel_prices_bool_exp"


class travel_prices_var_pop_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_var_samp_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class travel_prices_variance_order_by(BaseModel):
    cents_per_hour: Optional[order_by] = None
    cents_per_mile: Optional[order_by] = None


class update_customer_work_site_args(BaseModel):
    accounting_id: Optional[str] = Field(alias="_accounting_id", default=None)
    api: Optional[str] = Field(alias="_api", default=None)
    county: Optional[str] = Field(alias="_county", default=None)
    customers_xref_work_sites_id: Optional[Any] = Field(
        alias="_customers_xref_work_sites_id", default=None
    )
    lat: Optional[str] = Field(alias="_lat", default=None)
    lng: Optional[str] = Field(alias="_lng", default=None)
    merge_ids: Optional[Any] = Field(alias="_merge_ids", default=None)
    state: Optional[str] = Field(alias="_state", default=None)
    title: Optional[str] = Field(alias="_title", default=None)


class update_ticket_args(BaseModel):
    assigned_agent_ids: Optional[Any] = Field(alias="_assigned_agent_ids", default=None)
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    requires_signature: Optional[bool] = Field(
        alias="_requires_signature", default=None
    )
    ticket_id: Optional[Any] = Field(alias="_ticket_id", default=None)
    ticket_notes: Optional[Any] = Field(alias="_ticket_notes", default=None)
    work_site_id: Optional[Any] = Field(alias="_work_site_id", default=None)
    work_site_unconfirmed: Optional[str] = Field(
        alias="_work_site_unconfirmed", default=None
    )


class update_travel_log_args(BaseModel):
    arrival_site_id: Optional[Any] = Field(alias="_arrival_site_id", default=None)
    arrival_site_unconfirmed: Optional[str] = Field(
        alias="_arrival_site_unconfirmed", default=None
    )
    arrived_at: Optional[Any] = Field(alias="_arrived_at", default=None)
    departed_at: Optional[Any] = Field(alias="_departed_at", default=None)
    departure_site_id: Optional[Any] = Field(alias="_departure_site_id", default=None)
    departure_site_unconfirmed: Optional[str] = Field(
        alias="_departure_site_unconfirmed", default=None
    )
    media_upload_ids: Optional[Any] = Field(alias="_media_upload_ids", default=None)
    miles_traveled: Optional[int] = Field(alias="_miles_traveled", default=None)
    notesj: Optional[Any] = Field(alias="_notesj", default=None)
    travel_log_id: Optional[Any] = Field(alias="_travel_log_id", default=None)


class user_subs_aggregate_bool_exp(BaseModel):
    count: Optional["user_subs_aggregate_bool_exp_count"] = None


class user_subs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[user_subs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["user_subs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class user_subs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["user_subs_max_order_by"] = None
    min: Optional["user_subs_min_order_by"] = None


class user_subs_append_input(BaseModel):
    subscription: Optional[Any] = None


class user_subs_arr_rel_insert_input(BaseModel):
    data: List["user_subs_insert_input"]
    on_conflict: Optional["user_subs_on_conflict"] = None


class user_subs_bool_exp(BaseModel):
    and_: Optional[List["user_subs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["user_subs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["user_subs_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    subscription: Optional["jsonb_comparison_exp"] = None
    user: Optional["users_bool_exp"] = None
    user_id: Optional["String_comparison_exp"] = None


class user_subs_delete_at_path_input(BaseModel):
    subscription: Optional[List[str]] = None


class user_subs_delete_elem_input(BaseModel):
    subscription: Optional[int] = None


class user_subs_delete_key_input(BaseModel):
    subscription: Optional[str] = None


class user_subs_insert_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    subscription: Optional[Any] = None
    user: Optional["users_obj_rel_insert_input"] = None
    user_id: Optional[str] = None


class user_subs_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    user_id: Optional[order_by] = None


class user_subs_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    user_id: Optional[order_by] = None


class user_subs_on_conflict(BaseModel):
    constraint: user_subs_constraint
    update_columns: List[user_subs_update_column]
    where: Optional["user_subs_bool_exp"] = None


class user_subs_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    subscription: Optional[order_by] = None
    user: Optional["users_order_by"] = None
    user_id: Optional[order_by] = None


class user_subs_pk_columns_input(BaseModel):
    id: Any


class user_subs_prepend_input(BaseModel):
    subscription: Optional[Any] = None


class user_subs_set_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    subscription: Optional[Any] = None
    user_id: Optional[str] = None


class user_subs_stream_cursor_input(BaseModel):
    initial_value: "user_subs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class user_subs_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    subscription: Optional[Any] = None
    user_id: Optional[str] = None


class user_subs_updates(BaseModel):
    append: Optional["user_subs_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["user_subs_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["user_subs_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["user_subs_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["user_subs_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["user_subs_set_input"] = Field(alias="_set", default=None)
    where: "user_subs_bool_exp"


class users_bool_exp(BaseModel):
    and_: Optional[List["users_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["users_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["users_bool_exp"]] = Field(alias="_or", default=None)
    agent_prices: Optional["organization_agent_prices_bool_exp"] = None
    agent_prices_aggregate: Optional["organization_agent_prices_aggregate_bool_exp"] = (
        None
    )
    avatar: Optional["media_uploads_bool_exp"] = None
    avatar_id: Optional["uuid_comparison_exp"] = None
    catalogs: Optional["catalogs_bool_exp"] = None
    catalogs_aggregate: Optional["catalogs_aggregate_bool_exp"] = None
    city: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    custom_form_definitions: Optional["custom_form_definitions_bool_exp"] = None
    custom_form_definitions_aggregate: Optional[
        "custom_form_definitions_aggregate_bool_exp"
    ] = None
    customer_agents: Optional["customer_agents_bool_exp"] = None
    customer_agents_aggregate: Optional["customer_agents_aggregate_bool_exp"] = None
    customer_contacts: Optional["customer_contacts_bool_exp"] = None
    customer_contacts_aggregate: Optional["customer_contacts_aggregate_bool_exp"] = None
    customers: Optional["customers_bool_exp"] = None
    customers_aggregate: Optional["customers_aggregate_bool_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    email: Optional["citext_comparison_exp"] = None
    expense_logs: Optional["expense_logs_bool_exp"] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_bool_exp"] = None
    first_seen_at: Optional["timestamptz_comparison_exp"] = None
    fname: Optional["String_comparison_exp"] = None
    full_name: Optional["String_comparison_exp"] = None
    id: Optional["String_comparison_exp"] = None
    invoices: Optional["invoices_bool_exp"] = None
    invoices_aggregate: Optional["invoices_aggregate_bool_exp"] = None
    last_seen_at: Optional["timestamptz_comparison_exp"] = None
    lname: Optional["String_comparison_exp"] = None
    media_uploads: Optional["media_uploads_bool_exp"] = None
    media_uploads_aggregate: Optional["media_uploads_aggregate_bool_exp"] = None
    notification_prefs: Optional["notification_prefs_bool_exp"] = None
    notification_prefs_aggregate: Optional["notification_prefs_aggregate_bool_exp"] = (
        None
    )
    orders: Optional["demand_orders_bool_exp"] = None
    orders_aggregate: Optional["demand_orders_aggregate_bool_exp"] = None
    organization_agents: Optional["organization_agents_bool_exp"] = None
    organization_agents_aggregate: Optional[
        "organization_agents_aggregate_bool_exp"
    ] = None
    payments: Optional["customer_payments_bool_exp"] = None
    payments_aggregate: Optional["customer_payments_aggregate_bool_exp"] = None
    phone_number: Optional["String_comparison_exp"] = None
    price_book_agent_prices: Optional["price_book_agent_prices_bool_exp"] = None
    price_book_agent_prices_aggregate: Optional[
        "price_book_agent_prices_aggregate_bool_exp"
    ] = None
    price_books: Optional["price_books_bool_exp"] = None
    price_books_aggregate: Optional["price_books_aggregate_bool_exp"] = None
    products: Optional["products_bool_exp"] = None
    products_aggregate: Optional["products_aggregate_bool_exp"] = None
    staff_since: Optional["timestamptz_comparison_exp"] = None
    state: Optional["String_comparison_exp"] = None
    ticket_agents: Optional["ticket_agents_bool_exp"] = None
    ticket_agents_aggregate: Optional["ticket_agents_aggregate_bool_exp"] = None
    ticket_custom_form_entries: Optional["ticket_custom_form_entries_bool_exp"] = None
    ticket_custom_form_entries_aggregate: Optional[
        "ticket_custom_form_entries_aggregate_bool_exp"
    ] = None
    ticket_review_events: Optional["ticket_review_events_bool_exp"] = None
    ticket_review_events_aggregate: Optional[
        "ticket_review_events_aggregate_bool_exp"
    ] = None
    tickets: Optional["tickets_bool_exp"] = None
    tickets_aggregate: Optional["tickets_aggregate_bool_exp"] = None
    travel_logs: Optional["travel_logs_bool_exp"] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    user_subs: Optional["user_subs_bool_exp"] = None
    user_subs_aggregate: Optional["user_subs_aggregate_bool_exp"] = None
    work_logs: Optional["work_logs_bool_exp"] = None
    work_logs_aggregate: Optional["work_logs_aggregate_bool_exp"] = None
    work_sites: Optional["work_sites_bool_exp"] = None
    work_sites_aggregate: Optional["work_sites_aggregate_bool_exp"] = None
    xref_roles: Optional["org_users_xref_roles_bool_exp"] = None
    xref_roles_aggregate: Optional["org_users_xref_roles_aggregate_bool_exp"] = None


class users_insert_input(BaseModel):
    agent_prices: Optional["organization_agent_prices_arr_rel_insert_input"] = None
    avatar: Optional["media_uploads_obj_rel_insert_input"] = None
    avatar_id: Optional[Any] = None
    catalogs: Optional["catalogs_arr_rel_insert_input"] = None
    city: Optional[str] = None
    created_at: Optional[Any] = None
    custom_form_definitions: Optional[
        "custom_form_definitions_arr_rel_insert_input"
    ] = None
    customer_agents: Optional["customer_agents_arr_rel_insert_input"] = None
    customer_contacts: Optional["customer_contacts_arr_rel_insert_input"] = None
    customers: Optional["customers_arr_rel_insert_input"] = None
    deleted_at: Optional[Any] = None
    email: Optional[Any] = None
    expense_logs: Optional["expense_logs_arr_rel_insert_input"] = None
    first_seen_at: Optional[Any] = None
    fname: Optional[str] = None
    id: Optional[str] = None
    invoices: Optional["invoices_arr_rel_insert_input"] = None
    last_seen_at: Optional[Any] = None
    lname: Optional[str] = None
    media_uploads: Optional["media_uploads_arr_rel_insert_input"] = None
    notification_prefs: Optional["notification_prefs_arr_rel_insert_input"] = None
    orders: Optional["demand_orders_arr_rel_insert_input"] = None
    organization_agents: Optional["organization_agents_arr_rel_insert_input"] = None
    payments: Optional["customer_payments_arr_rel_insert_input"] = None
    phone_number: Optional[str] = None
    price_book_agent_prices: Optional[
        "price_book_agent_prices_arr_rel_insert_input"
    ] = None
    price_books: Optional["price_books_arr_rel_insert_input"] = None
    products: Optional["products_arr_rel_insert_input"] = None
    staff_since: Optional[Any] = None
    state: Optional[str] = None
    ticket_agents: Optional["ticket_agents_arr_rel_insert_input"] = None
    ticket_custom_form_entries: Optional[
        "ticket_custom_form_entries_arr_rel_insert_input"
    ] = None
    ticket_review_events: Optional["ticket_review_events_arr_rel_insert_input"] = None
    tickets: Optional["tickets_arr_rel_insert_input"] = None
    travel_logs: Optional["travel_logs_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None
    user_subs: Optional["user_subs_arr_rel_insert_input"] = None
    work_logs: Optional["work_logs_arr_rel_insert_input"] = None
    work_sites: Optional["work_sites_arr_rel_insert_input"] = None
    xref_roles: Optional["org_users_xref_roles_arr_rel_insert_input"] = None


class users_obj_rel_insert_input(BaseModel):
    data: "users_insert_input"
    on_conflict: Optional["users_on_conflict"] = None


class users_on_conflict(BaseModel):
    constraint: users_constraint
    update_columns: List[users_update_column]
    where: Optional["users_bool_exp"] = None


class users_order_by(BaseModel):
    agent_prices_aggregate: Optional["organization_agent_prices_aggregate_order_by"] = (
        None
    )
    avatar: Optional["media_uploads_order_by"] = None
    avatar_id: Optional[order_by] = None
    catalogs_aggregate: Optional["catalogs_aggregate_order_by"] = None
    city: Optional[order_by] = None
    created_at: Optional[order_by] = None
    custom_form_definitions_aggregate: Optional[
        "custom_form_definitions_aggregate_order_by"
    ] = None
    customer_agents_aggregate: Optional["customer_agents_aggregate_order_by"] = None
    customer_contacts_aggregate: Optional["customer_contacts_aggregate_order_by"] = None
    customers_aggregate: Optional["customers_aggregate_order_by"] = None
    deleted_at: Optional[order_by] = None
    email: Optional[order_by] = None
    expense_logs_aggregate: Optional["expense_logs_aggregate_order_by"] = None
    first_seen_at: Optional[order_by] = None
    fname: Optional[order_by] = None
    full_name: Optional[order_by] = None
    id: Optional[order_by] = None
    invoices_aggregate: Optional["invoices_aggregate_order_by"] = None
    last_seen_at: Optional[order_by] = None
    lname: Optional[order_by] = None
    media_uploads_aggregate: Optional["media_uploads_aggregate_order_by"] = None
    notification_prefs_aggregate: Optional["notification_prefs_aggregate_order_by"] = (
        None
    )
    orders_aggregate: Optional["demand_orders_aggregate_order_by"] = None
    organization_agents_aggregate: Optional[
        "organization_agents_aggregate_order_by"
    ] = None
    payments_aggregate: Optional["customer_payments_aggregate_order_by"] = None
    phone_number: Optional[order_by] = None
    price_book_agent_prices_aggregate: Optional[
        "price_book_agent_prices_aggregate_order_by"
    ] = None
    price_books_aggregate: Optional["price_books_aggregate_order_by"] = None
    products_aggregate: Optional["products_aggregate_order_by"] = None
    staff_since: Optional[order_by] = None
    state: Optional[order_by] = None
    ticket_agents_aggregate: Optional["ticket_agents_aggregate_order_by"] = None
    ticket_custom_form_entries_aggregate: Optional[
        "ticket_custom_form_entries_aggregate_order_by"
    ] = None
    ticket_review_events_aggregate: Optional[
        "ticket_review_events_aggregate_order_by"
    ] = None
    tickets_aggregate: Optional["tickets_aggregate_order_by"] = None
    travel_logs_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None
    user_subs_aggregate: Optional["user_subs_aggregate_order_by"] = None
    work_logs_aggregate: Optional["work_logs_aggregate_order_by"] = None
    work_sites_aggregate: Optional["work_sites_aggregate_order_by"] = None
    xref_roles_aggregate: Optional["org_users_xref_roles_aggregate_order_by"] = None


class users_pk_columns_input(BaseModel):
    id: str


class users_set_input(BaseModel):
    avatar_id: Optional[Any] = None
    city: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    email: Optional[Any] = None
    first_seen_at: Optional[Any] = None
    fname: Optional[str] = None
    id: Optional[str] = None
    last_seen_at: Optional[Any] = None
    lname: Optional[str] = None
    phone_number: Optional[str] = None
    staff_since: Optional[Any] = None
    state: Optional[str] = None
    updated_at: Optional[Any] = None


class users_stream_cursor_input(BaseModel):
    initial_value: "users_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class users_stream_cursor_value_input(BaseModel):
    avatar_id: Optional[Any] = None
    city: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    email: Optional[Any] = None
    first_seen_at: Optional[Any] = None
    fname: Optional[str] = None
    full_name: Optional[str] = None
    id: Optional[str] = None
    last_seen_at: Optional[Any] = None
    lname: Optional[str] = None
    phone_number: Optional[str] = None
    staff_since: Optional[Any] = None
    state: Optional[str] = None
    updated_at: Optional[Any] = None


class users_updates(BaseModel):
    set: Optional["users_set_input"] = Field(alias="_set", default=None)
    where: "users_bool_exp"


class uuid_array_comparison_exp(BaseModel):
    contained_in: Optional[List[Any]] = Field(alias="_contained_in", default=None)
    contains: Optional[List[Any]] = Field(alias="_contains", default=None)
    eq: Optional[List[Any]] = Field(alias="_eq", default=None)
    gt: Optional[List[Any]] = Field(alias="_gt", default=None)
    gte: Optional[List[Any]] = Field(alias="_gte", default=None)
    in_: Optional[List[List[Any]]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[List[Any]] = Field(alias="_lt", default=None)
    lte: Optional[List[Any]] = Field(alias="_lte", default=None)
    neq: Optional[List[Any]] = Field(alias="_neq", default=None)
    nin: Optional[List[List[Any]]] = Field(alias="_nin", default=None)


class uuid_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class work_hours_by_product_organization_agents_args(BaseModel):
    ended_at: Optional[Any] = Field(alias="_ended_at", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    started_at: Optional[Any] = Field(alias="_started_at", default=None)


class work_hours_per_ticket_by_product_organization_agents_args(BaseModel):
    ended_at: Optional[Any] = Field(alias="_ended_at", default=None)
    product_id: Optional[Any] = Field(alias="_product_id", default=None)
    started_at: Optional[Any] = Field(alias="_started_at", default=None)


class work_logs_aggregate_bool_exp(BaseModel):
    count: Optional["work_logs_aggregate_bool_exp_count"] = None


class work_logs_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[work_logs_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["work_logs_bool_exp"] = None
    predicate: "Int_comparison_exp"


class work_logs_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["work_logs_max_order_by"] = None
    min: Optional["work_logs_min_order_by"] = None


class work_logs_append_input(BaseModel):
    notesj: Optional[Any] = None


class work_logs_arr_rel_insert_input(BaseModel):
    data: List["work_logs_insert_input"]
    on_conflict: Optional["work_logs_on_conflict"] = None


class work_logs_bool_exp(BaseModel):
    and_: Optional[List["work_logs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["work_logs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["work_logs_bool_exp"]] = Field(alias="_or", default=None)
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    ended_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    invoice: Optional["invoices_bool_exp"] = None
    invoice_id: Optional["uuid_comparison_exp"] = None
    notes: Optional["String_comparison_exp"] = None
    notesj: Optional["jsonb_comparison_exp"] = None
    shifts: Optional["agent_shifts_bool_exp"] = None
    started_at: Optional["timestamptz_comparison_exp"] = None
    ticket: Optional["tickets_bool_exp"] = None
    ticket_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    xref_media_uploads: Optional["media_xref_work_logs_bool_exp"] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_work_logs_aggregate_bool_exp"
    ] = None


class work_logs_delete_at_path_input(BaseModel):
    notesj: Optional[List[str]] = None


class work_logs_delete_elem_input(BaseModel):
    notesj: Optional[int] = None


class work_logs_delete_key_input(BaseModel):
    notesj: Optional[str] = None


class work_logs_insert_input(BaseModel):
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice: Optional["invoices_obj_rel_insert_input"] = None
    invoice_id: Optional[Any] = None
    notesj: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket: Optional["tickets_obj_rel_insert_input"] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    xref_media_uploads: Optional["media_xref_work_logs_arr_rel_insert_input"] = None


class work_logs_max_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class work_logs_min_order_by(BaseModel):
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    started_at: Optional[order_by] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class work_logs_obj_rel_insert_input(BaseModel):
    data: "work_logs_insert_input"
    on_conflict: Optional["work_logs_on_conflict"] = None


class work_logs_on_conflict(BaseModel):
    constraint: work_logs_constraint
    update_columns: List[work_logs_update_column]
    where: Optional["work_logs_bool_exp"] = None


class work_logs_order_by(BaseModel):
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    ended_at: Optional[order_by] = None
    id: Optional[order_by] = None
    invoice: Optional["invoices_order_by"] = None
    invoice_id: Optional[order_by] = None
    notes: Optional[order_by] = None
    notesj: Optional[order_by] = None
    shifts_aggregate: Optional["agent_shifts_aggregate_order_by"] = None
    started_at: Optional[order_by] = None
    ticket: Optional["tickets_order_by"] = None
    ticket_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    xref_media_uploads_aggregate: Optional[
        "media_xref_work_logs_aggregate_order_by"
    ] = None


class work_logs_pk_columns_input(BaseModel):
    id: Any


class work_logs_prepend_input(BaseModel):
    notesj: Optional[Any] = None


class work_logs_set_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    notesj: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class work_logs_stream_cursor_input(BaseModel):
    initial_value: "work_logs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class work_logs_stream_cursor_value_input(BaseModel):
    author_id: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    ended_at: Optional[Any] = None
    id: Optional[Any] = None
    invoice_id: Optional[Any] = None
    notes: Optional[str] = None
    notesj: Optional[Any] = None
    started_at: Optional[Any] = None
    ticket_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class work_logs_updates(BaseModel):
    append: Optional["work_logs_append_input"] = Field(alias="_append", default=None)
    delete_at_path: Optional["work_logs_delete_at_path_input"] = Field(
        alias="_delete_at_path", default=None
    )
    delete_elem: Optional["work_logs_delete_elem_input"] = Field(
        alias="_delete_elem", default=None
    )
    delete_key: Optional["work_logs_delete_key_input"] = Field(
        alias="_delete_key", default=None
    )
    prepend: Optional["work_logs_prepend_input"] = Field(alias="_prepend", default=None)
    set: Optional["work_logs_set_input"] = Field(alias="_set", default=None)
    where: "work_logs_bool_exp"


class work_sites_aggregate_bool_exp(BaseModel):
    count: Optional["work_sites_aggregate_bool_exp_count"] = None


class work_sites_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[work_sites_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["work_sites_bool_exp"] = None
    predicate: "Int_comparison_exp"


class work_sites_aggregate_order_by(BaseModel):
    avg: Optional["work_sites_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["work_sites_max_order_by"] = None
    min: Optional["work_sites_min_order_by"] = None
    stddev: Optional["work_sites_stddev_order_by"] = None
    stddev_pop: Optional["work_sites_stddev_pop_order_by"] = None
    stddev_samp: Optional["work_sites_stddev_samp_order_by"] = None
    sum: Optional["work_sites_sum_order_by"] = None
    var_pop: Optional["work_sites_var_pop_order_by"] = None
    var_samp: Optional["work_sites_var_samp_order_by"] = None
    variance: Optional["work_sites_variance_order_by"] = None


class work_sites_arr_rel_insert_input(BaseModel):
    data: List["work_sites_insert_input"]
    on_conflict: Optional["work_sites_on_conflict"] = None


class work_sites_avg_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_bool_exp(BaseModel):
    and_: Optional[List["work_sites_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["work_sites_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["work_sites_bool_exp"]] = Field(alias="_or", default=None)
    api: Optional["String_comparison_exp"] = None
    author: Optional["users_bool_exp"] = None
    author_id: Optional["String_comparison_exp"] = None
    confirmed_at: Optional["timestamptz_comparison_exp"] = None
    county: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    current_customer: Optional["customers_xref_work_sites_bool_exp"] = None
    deleted_at: Optional["timestamptz_comparison_exp"] = None
    external_id: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    lat: Optional["numeric_comparison_exp"] = None
    lng: Optional["numeric_comparison_exp"] = None
    order_items: Optional["demand_order_items_bool_exp"] = None
    order_items_aggregate: Optional["demand_order_items_aggregate_bool_exp"] = None
    organization: Optional["organizations_bool_exp"] = None
    organization_name: Optional["String_comparison_exp"] = None
    standardized_title: Optional["String_comparison_exp"] = None
    state: Optional["String_comparison_exp"] = None
    title: Optional["citext_comparison_exp"] = None
    travel_logs_from: Optional["travel_logs_bool_exp"] = None
    travel_logs_from_aggregate: Optional["travel_logs_aggregate_bool_exp"] = None
    travel_logs_to: Optional["travel_logs_bool_exp"] = None
    travel_logs_to_aggregate: Optional["travel_logs_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class work_sites_inc_input(BaseModel):
    lat: Optional[Any] = None
    lng: Optional[Any] = None


class work_sites_insert_input(BaseModel):
    api: Optional[str] = None
    author: Optional["users_obj_rel_insert_input"] = None
    author_id: Optional[str] = None
    confirmed_at: Optional[Any] = None
    county: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    lat: Optional[Any] = None
    lng: Optional[Any] = None
    order_items: Optional["demand_order_items_arr_rel_insert_input"] = None
    organization: Optional["organizations_obj_rel_insert_input"] = None
    organization_name: Optional[str] = None
    standardized_title: Optional[str] = None
    state: Optional[str] = None
    title: Optional[Any] = None
    travel_logs_from: Optional["travel_logs_arr_rel_insert_input"] = None
    travel_logs_to: Optional["travel_logs_arr_rel_insert_input"] = None
    updated_at: Optional[Any] = None


class work_sites_max_order_by(BaseModel):
    api: Optional[order_by] = None
    author_id: Optional[order_by] = None
    confirmed_at: Optional[order_by] = None
    county: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    standardized_title: Optional[order_by] = None
    state: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class work_sites_min_order_by(BaseModel):
    api: Optional[order_by] = None
    author_id: Optional[order_by] = None
    confirmed_at: Optional[order_by] = None
    county: Optional[order_by] = None
    created_at: Optional[order_by] = None
    deleted_at: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None
    organization_name: Optional[order_by] = None
    standardized_title: Optional[order_by] = None
    state: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class work_sites_obj_rel_insert_input(BaseModel):
    data: "work_sites_insert_input"
    on_conflict: Optional["work_sites_on_conflict"] = None


class work_sites_on_conflict(BaseModel):
    constraint: work_sites_constraint
    update_columns: List[work_sites_update_column]
    where: Optional["work_sites_bool_exp"] = None


class work_sites_order_by(BaseModel):
    api: Optional[order_by] = None
    author: Optional["users_order_by"] = None
    author_id: Optional[order_by] = None
    confirmed_at: Optional[order_by] = None
    county: Optional[order_by] = None
    created_at: Optional[order_by] = None
    current_customer_aggregate: Optional[
        "customers_xref_work_sites_aggregate_order_by"
    ] = None
    deleted_at: Optional[order_by] = None
    external_id: Optional[order_by] = None
    id: Optional[order_by] = None
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None
    order_items_aggregate: Optional["demand_order_items_aggregate_order_by"] = None
    organization: Optional["organizations_order_by"] = None
    organization_name: Optional[order_by] = None
    standardized_title: Optional[order_by] = None
    state: Optional[order_by] = None
    title: Optional[order_by] = None
    travel_logs_from_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    travel_logs_to_aggregate: Optional["travel_logs_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None


class work_sites_pk_columns_input(BaseModel):
    id: Any


class work_sites_set_input(BaseModel):
    api: Optional[str] = None
    author_id: Optional[str] = None
    confirmed_at: Optional[Any] = None
    county: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    lat: Optional[Any] = None
    lng: Optional[Any] = None
    organization_name: Optional[str] = None
    standardized_title: Optional[str] = None
    state: Optional[str] = None
    title: Optional[Any] = None
    updated_at: Optional[Any] = None


class work_sites_stddev_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_stddev_pop_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_stddev_samp_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_stream_cursor_input(BaseModel):
    initial_value: "work_sites_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class work_sites_stream_cursor_value_input(BaseModel):
    api: Optional[str] = None
    author_id: Optional[str] = None
    confirmed_at: Optional[Any] = None
    county: Optional[str] = None
    created_at: Optional[Any] = None
    deleted_at: Optional[Any] = None
    external_id: Optional[str] = None
    id: Optional[Any] = None
    lat: Optional[Any] = None
    lng: Optional[Any] = None
    organization_name: Optional[str] = None
    standardized_title: Optional[str] = None
    state: Optional[str] = None
    title: Optional[Any] = None
    updated_at: Optional[Any] = None


class work_sites_sum_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_updates(BaseModel):
    inc: Optional["work_sites_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["work_sites_set_input"] = Field(alias="_set", default=None)
    where: "work_sites_bool_exp"


class work_sites_var_pop_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_var_samp_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


class work_sites_variance_order_by(BaseModel):
    lat: Optional[order_by] = None
    lng: Optional[order_by] = None


agent_shift_generated_bool_exp.model_rebuild()
agent_shift_generated_stream_cursor_input.model_rebuild()
agent_shift_overrides_bool_exp.model_rebuild()
agent_shift_overrides_obj_rel_insert_input.model_rebuild()
agent_shift_overrides_on_conflict.model_rebuild()
agent_shift_overrides_order_by.model_rebuild()
agent_shift_overrides_stream_cursor_input.model_rebuild()
agent_shift_overrides_updates.model_rebuild()
agent_shifts_aggregate_bool_exp.model_rebuild()
agent_shifts_aggregate_bool_exp_count.model_rebuild()
agent_shifts_aggregate_order_by.model_rebuild()
agent_shifts_arr_rel_insert_input.model_rebuild()
agent_shifts_bool_exp.model_rebuild()
agent_shifts_insert_input.model_rebuild()
agent_shifts_order_by.model_rebuild()
agent_shifts_stream_cursor_input.model_rebuild()
announcements_bool_exp.model_rebuild()
announcements_insert_input.model_rebuild()
announcements_on_conflict.model_rebuild()
announcements_order_by.model_rebuild()
announcements_stream_cursor_input.model_rebuild()
announcements_updates.model_rebuild()
auth_api_keys_bool_exp.model_rebuild()
auth_api_keys_on_conflict.model_rebuild()
auth_api_keys_stream_cursor_input.model_rebuild()
auth_api_keys_updates.model_rebuild()
billing_units_bool_exp.model_rebuild()
billing_units_on_conflict.model_rebuild()
billing_units_stream_cursor_input.model_rebuild()
billing_units_updates.model_rebuild()
catalogs_aggregate_bool_exp.model_rebuild()
catalogs_aggregate_bool_exp_count.model_rebuild()
catalogs_aggregate_order_by.model_rebuild()
catalogs_arr_rel_insert_input.model_rebuild()
catalogs_bool_exp.model_rebuild()
catalogs_insert_input.model_rebuild()
catalogs_obj_rel_insert_input.model_rebuild()
catalogs_on_conflict.model_rebuild()
catalogs_order_by.model_rebuild()
catalogs_stream_cursor_input.model_rebuild()
catalogs_updates.model_rebuild()
combined_logs_aggregate_bool_exp.model_rebuild()
combined_logs_aggregate_bool_exp_count.model_rebuild()
combined_logs_aggregate_order_by.model_rebuild()
combined_logs_arr_rel_insert_input.model_rebuild()
combined_logs_bool_exp.model_rebuild()
combined_logs_insert_input.model_rebuild()
combined_logs_order_by.model_rebuild()
combined_logs_stream_cursor_input.model_rebuild()
custom_form_definitions_aggregate_bool_exp.model_rebuild()
custom_form_definitions_aggregate_bool_exp_count.model_rebuild()
custom_form_definitions_aggregate_order_by.model_rebuild()
custom_form_definitions_arr_rel_insert_input.model_rebuild()
custom_form_definitions_bool_exp.model_rebuild()
custom_form_definitions_insert_input.model_rebuild()
custom_form_definitions_obj_rel_insert_input.model_rebuild()
custom_form_definitions_on_conflict.model_rebuild()
custom_form_definitions_order_by.model_rebuild()
custom_form_definitions_stream_cursor_input.model_rebuild()
custom_form_definitions_updates.model_rebuild()
custom_form_domains_bool_exp.model_rebuild()
custom_form_domains_on_conflict.model_rebuild()
custom_form_domains_stream_cursor_input.model_rebuild()
custom_form_domains_updates.model_rebuild()
customer_agents_aggregate_bool_exp.model_rebuild()
customer_agents_aggregate_bool_exp_count.model_rebuild()
customer_agents_aggregate_order_by.model_rebuild()
customer_agents_arr_rel_insert_input.model_rebuild()
customer_agents_bool_exp.model_rebuild()
customer_agents_insert_input.model_rebuild()
customer_agents_on_conflict.model_rebuild()
customer_agents_order_by.model_rebuild()
customer_agents_stream_cursor_input.model_rebuild()
customer_agents_updates.model_rebuild()
customer_contacts_aggregate_bool_exp.model_rebuild()
customer_contacts_aggregate_bool_exp_count.model_rebuild()
customer_contacts_aggregate_order_by.model_rebuild()
customer_contacts_arr_rel_insert_input.model_rebuild()
customer_contacts_bool_exp.model_rebuild()
customer_contacts_insert_input.model_rebuild()
customer_contacts_on_conflict.model_rebuild()
customer_contacts_order_by.model_rebuild()
customer_contacts_stream_cursor_input.model_rebuild()
customer_contacts_updates.model_rebuild()
customer_contracts_aggregate_bool_exp.model_rebuild()
customer_contracts_aggregate_bool_exp_count.model_rebuild()
customer_contracts_aggregate_order_by.model_rebuild()
customer_contracts_arr_rel_insert_input.model_rebuild()
customer_contracts_bool_exp.model_rebuild()
customer_contracts_insert_input.model_rebuild()
customer_contracts_on_conflict.model_rebuild()
customer_contracts_order_by.model_rebuild()
customer_contracts_stream_cursor_input.model_rebuild()
customer_contracts_updates.model_rebuild()
customer_ledgers_bool_exp.model_rebuild()
customer_ledgers_on_conflict.model_rebuild()
customer_ledgers_stream_cursor_input.model_rebuild()
customer_ledgers_updates.model_rebuild()
customer_payments_aggregate_bool_exp.model_rebuild()
customer_payments_aggregate_bool_exp_count.model_rebuild()
customer_payments_aggregate_order_by.model_rebuild()
customer_payments_arr_rel_insert_input.model_rebuild()
customer_payments_bool_exp.model_rebuild()
customer_payments_insert_input.model_rebuild()
customer_payments_on_conflict.model_rebuild()
customer_payments_order_by.model_rebuild()
customer_payments_stream_cursor_input.model_rebuild()
customer_payments_updates.model_rebuild()
customer_timezone_history_bool_exp.model_rebuild()
customer_timezone_history_insert_input.model_rebuild()
customer_timezone_history_order_by.model_rebuild()
customer_timezone_history_stream_cursor_input.model_rebuild()
customer_timezone_history_updates.model_rebuild()
customers_aggregate_bool_exp.model_rebuild()
customers_aggregate_bool_exp_bool_and.model_rebuild()
customers_aggregate_bool_exp_bool_or.model_rebuild()
customers_aggregate_bool_exp_count.model_rebuild()
customers_aggregate_order_by.model_rebuild()
customers_arr_rel_insert_input.model_rebuild()
customers_bool_exp.model_rebuild()
customers_insert_input.model_rebuild()
customers_obj_rel_insert_input.model_rebuild()
customers_on_conflict.model_rebuild()
customers_order_by.model_rebuild()
customers_stream_cursor_input.model_rebuild()
customers_updates.model_rebuild()
customers_xref_work_sites_aggregate_bool_exp.model_rebuild()
customers_xref_work_sites_aggregate_bool_exp_count.model_rebuild()
customers_xref_work_sites_aggregate_order_by.model_rebuild()
customers_xref_work_sites_arr_rel_insert_input.model_rebuild()
customers_xref_work_sites_bool_exp.model_rebuild()
customers_xref_work_sites_insert_input.model_rebuild()
customers_xref_work_sites_on_conflict.model_rebuild()
customers_xref_work_sites_order_by.model_rebuild()
customers_xref_work_sites_stream_cursor_input.model_rebuild()
customers_xref_work_sites_updates.model_rebuild()
delivery_statuses_bool_exp.model_rebuild()
delivery_statuses_on_conflict.model_rebuild()
delivery_statuses_stream_cursor_input.model_rebuild()
delivery_statuses_updates.model_rebuild()
demand_order_event_types_bool_exp.model_rebuild()
demand_order_event_types_on_conflict.model_rebuild()
demand_order_event_types_stream_cursor_input.model_rebuild()
demand_order_event_types_updates.model_rebuild()
demand_order_events_bool_exp.model_rebuild()
demand_order_events_on_conflict.model_rebuild()
demand_order_events_stream_cursor_input.model_rebuild()
demand_order_events_updates.model_rebuild()
demand_order_items_aggregate_bool_exp.model_rebuild()
demand_order_items_aggregate_bool_exp_bool_and.model_rebuild()
demand_order_items_aggregate_bool_exp_bool_or.model_rebuild()
demand_order_items_aggregate_bool_exp_count.model_rebuild()
demand_order_items_aggregate_order_by.model_rebuild()
demand_order_items_arr_rel_insert_input.model_rebuild()
demand_order_items_bool_exp.model_rebuild()
demand_order_items_insert_input.model_rebuild()
demand_order_items_obj_rel_insert_input.model_rebuild()
demand_order_items_on_conflict.model_rebuild()
demand_order_items_order_by.model_rebuild()
demand_order_items_stream_cursor_input.model_rebuild()
demand_order_items_updates.model_rebuild()
demand_orders_aggregate_bool_exp.model_rebuild()
demand_orders_aggregate_bool_exp_count.model_rebuild()
demand_orders_aggregate_order_by.model_rebuild()
demand_orders_arr_rel_insert_input.model_rebuild()
demand_orders_bool_exp.model_rebuild()
demand_orders_insert_input.model_rebuild()
demand_orders_obj_rel_insert_input.model_rebuild()
demand_orders_on_conflict.model_rebuild()
demand_orders_order_by.model_rebuild()
demand_orders_stream_cursor_input.model_rebuild()
demand_orders_updates.model_rebuild()
event_notifications_aggregate_bool_exp.model_rebuild()
event_notifications_aggregate_bool_exp_count.model_rebuild()
event_notifications_aggregate_order_by.model_rebuild()
event_notifications_arr_rel_insert_input.model_rebuild()
event_notifications_bool_exp.model_rebuild()
event_notifications_insert_input.model_rebuild()
event_notifications_on_conflict.model_rebuild()
event_notifications_order_by.model_rebuild()
event_notifications_stream_cursor_input.model_rebuild()
event_notifications_updates.model_rebuild()
event_types_aggregate_bool_exp.model_rebuild()
event_types_aggregate_bool_exp_count.model_rebuild()
event_types_aggregate_order_by.model_rebuild()
event_types_arr_rel_insert_input.model_rebuild()
event_types_bool_exp.model_rebuild()
event_types_insert_input.model_rebuild()
event_types_obj_rel_insert_input.model_rebuild()
event_types_on_conflict.model_rebuild()
event_types_order_by.model_rebuild()
event_types_stream_cursor_input.model_rebuild()
event_types_updates.model_rebuild()
expense_logs_aggregate_bool_exp.model_rebuild()
expense_logs_aggregate_bool_exp_bool_and.model_rebuild()
expense_logs_aggregate_bool_exp_bool_or.model_rebuild()
expense_logs_aggregate_bool_exp_count.model_rebuild()
expense_logs_aggregate_order_by.model_rebuild()
expense_logs_arr_rel_insert_input.model_rebuild()
expense_logs_bool_exp.model_rebuild()
expense_logs_insert_input.model_rebuild()
expense_logs_obj_rel_insert_input.model_rebuild()
expense_logs_on_conflict.model_rebuild()
expense_logs_order_by.model_rebuild()
expense_logs_stream_cursor_input.model_rebuild()
expense_logs_updates.model_rebuild()
expense_types_bool_exp.model_rebuild()
expense_types_insert_input.model_rebuild()
expense_types_obj_rel_insert_input.model_rebuild()
expense_types_on_conflict.model_rebuild()
expense_types_order_by.model_rebuild()
expense_types_stream_cursor_input.model_rebuild()
expense_types_updates.model_rebuild()
feature_flags_bool_exp.model_rebuild()
feature_flags_insert_input.model_rebuild()
feature_flags_obj_rel_insert_input.model_rebuild()
feature_flags_on_conflict.model_rebuild()
feature_flags_order_by.model_rebuild()
feature_flags_stream_cursor_input.model_rebuild()
feature_flags_updates.model_rebuild()
interfaces_activity_day_totals_bool_exp.model_rebuild()
interfaces_activity_day_totals_stream_cursor_input.model_rebuild()
interfaces_activity_day_totals_updates.model_rebuild()
interfaces_api_token_pair_bool_exp.model_rebuild()
interfaces_api_token_pair_on_conflict.model_rebuild()
interfaces_api_token_pair_stream_cursor_input.model_rebuild()
interfaces_api_token_pair_updates.model_rebuild()
interfaces_billing_totals_aggregate_order_by.model_rebuild()
interfaces_billing_totals_bool_exp.model_rebuild()
interfaces_billing_totals_stream_cursor_input.model_rebuild()
interfaces_billing_totals_updates.model_rebuild()
interfaces_daily_logs_summary_bool_exp.model_rebuild()
interfaces_daily_logs_summary_insert_input.model_rebuild()
interfaces_daily_logs_summary_order_by.model_rebuild()
interfaces_daily_logs_summary_stream_cursor_input.model_rebuild()
interfaces_daily_logs_summary_updates.model_rebuild()
interfaces_logs_by_interval_bool_exp.model_rebuild()
interfaces_logs_by_interval_stream_cursor_input.model_rebuild()
interfaces_logs_by_interval_updates.model_rebuild()
interfaces_time_sheet_entries_aggregate_order_by.model_rebuild()
interfaces_time_sheet_entries_bool_exp.model_rebuild()
interfaces_time_sheet_entries_insert_input.model_rebuild()
interfaces_time_sheet_entries_order_by.model_rebuild()
interfaces_time_sheet_entries_stream_cursor_input.model_rebuild()
interfaces_time_sheet_entries_updates.model_rebuild()
invoice_ledgers_aggregate_bool_exp.model_rebuild()
invoice_ledgers_aggregate_bool_exp_count.model_rebuild()
invoice_ledgers_aggregate_order_by.model_rebuild()
invoice_ledgers_arr_rel_insert_input.model_rebuild()
invoice_ledgers_bool_exp.model_rebuild()
invoice_ledgers_on_conflict.model_rebuild()
invoice_ledgers_stream_cursor_input.model_rebuild()
invoice_ledgers_updates.model_rebuild()
invoice_line_items_aggregate_bool_exp.model_rebuild()
invoice_line_items_aggregate_bool_exp_count.model_rebuild()
invoice_line_items_aggregate_order_by.model_rebuild()
invoice_line_items_arr_rel_insert_input.model_rebuild()
invoice_line_items_bool_exp.model_rebuild()
invoice_line_items_insert_input.model_rebuild()
invoice_line_items_on_conflict.model_rebuild()
invoice_line_items_order_by.model_rebuild()
invoice_line_items_stream_cursor_input.model_rebuild()
invoice_line_items_updates.model_rebuild()
invoice_payments_aggregate_bool_exp.model_rebuild()
invoice_payments_aggregate_bool_exp_count.model_rebuild()
invoice_payments_aggregate_order_by.model_rebuild()
invoice_payments_arr_rel_insert_input.model_rebuild()
invoice_payments_bool_exp.model_rebuild()
invoice_payments_insert_input.model_rebuild()
invoice_payments_on_conflict.model_rebuild()
invoice_payments_order_by.model_rebuild()
invoice_payments_stream_cursor_input.model_rebuild()
invoice_payments_updates.model_rebuild()
invoice_pivot_options_bool_exp.model_rebuild()
invoice_pivot_options_on_conflict.model_rebuild()
invoice_pivot_options_stream_cursor_input.model_rebuild()
invoice_pivot_options_updates.model_rebuild()
invoices_aggregate_bool_exp.model_rebuild()
invoices_aggregate_bool_exp_count.model_rebuild()
invoices_aggregate_order_by.model_rebuild()
invoices_arr_rel_insert_input.model_rebuild()
invoices_bool_exp.model_rebuild()
invoices_insert_input.model_rebuild()
invoices_obj_rel_insert_input.model_rebuild()
invoices_on_conflict.model_rebuild()
invoices_order_by.model_rebuild()
invoices_stream_cursor_input.model_rebuild()
invoices_updates.model_rebuild()
jsonb_cast_exp.model_rebuild()
jsonb_comparison_exp.model_rebuild()
lifecycle_statuses_bool_exp.model_rebuild()
lifecycle_statuses_insert_input.model_rebuild()
lifecycle_statuses_obj_rel_insert_input.model_rebuild()
lifecycle_statuses_on_conflict.model_rebuild()
lifecycle_statuses_order_by.model_rebuild()
lifecycle_statuses_stream_cursor_input.model_rebuild()
lifecycle_statuses_updates.model_rebuild()
media_uploads_aggregate_bool_exp.model_rebuild()
media_uploads_aggregate_bool_exp_count.model_rebuild()
media_uploads_aggregate_order_by.model_rebuild()
media_uploads_arr_rel_insert_input.model_rebuild()
media_uploads_bool_exp.model_rebuild()
media_uploads_insert_input.model_rebuild()
media_uploads_obj_rel_insert_input.model_rebuild()
media_uploads_on_conflict.model_rebuild()
media_uploads_order_by.model_rebuild()
media_uploads_stream_cursor_input.model_rebuild()
media_uploads_updates.model_rebuild()
media_xref_expense_logs_aggregate_bool_exp.model_rebuild()
media_xref_expense_logs_aggregate_bool_exp_count.model_rebuild()
media_xref_expense_logs_aggregate_order_by.model_rebuild()
media_xref_expense_logs_arr_rel_insert_input.model_rebuild()
media_xref_expense_logs_bool_exp.model_rebuild()
media_xref_expense_logs_insert_input.model_rebuild()
media_xref_expense_logs_on_conflict.model_rebuild()
media_xref_expense_logs_order_by.model_rebuild()
media_xref_expense_logs_stream_cursor_input.model_rebuild()
media_xref_expense_logs_updates.model_rebuild()
media_xref_invoices_aggregate_bool_exp.model_rebuild()
media_xref_invoices_aggregate_bool_exp_count.model_rebuild()
media_xref_invoices_aggregate_order_by.model_rebuild()
media_xref_invoices_arr_rel_insert_input.model_rebuild()
media_xref_invoices_bool_exp.model_rebuild()
media_xref_invoices_insert_input.model_rebuild()
media_xref_invoices_on_conflict.model_rebuild()
media_xref_invoices_order_by.model_rebuild()
media_xref_invoices_stream_cursor_input.model_rebuild()
media_xref_invoices_updates.model_rebuild()
media_xref_products_aggregate_bool_exp.model_rebuild()
media_xref_products_aggregate_bool_exp_count.model_rebuild()
media_xref_products_aggregate_order_by.model_rebuild()
media_xref_products_arr_rel_insert_input.model_rebuild()
media_xref_products_bool_exp.model_rebuild()
media_xref_products_insert_input.model_rebuild()
media_xref_products_on_conflict.model_rebuild()
media_xref_products_order_by.model_rebuild()
media_xref_products_stream_cursor_input.model_rebuild()
media_xref_products_updates.model_rebuild()
media_xref_quote_events_aggregate_bool_exp.model_rebuild()
media_xref_quote_events_aggregate_bool_exp_count.model_rebuild()
media_xref_quote_events_aggregate_order_by.model_rebuild()
media_xref_quote_events_arr_rel_insert_input.model_rebuild()
media_xref_quote_events_bool_exp.model_rebuild()
media_xref_quote_events_insert_input.model_rebuild()
media_xref_quote_events_on_conflict.model_rebuild()
media_xref_quote_events_order_by.model_rebuild()
media_xref_quote_events_stream_cursor_input.model_rebuild()
media_xref_quote_events_updates.model_rebuild()
media_xref_quotes_aggregate_bool_exp.model_rebuild()
media_xref_quotes_aggregate_bool_exp_count.model_rebuild()
media_xref_quotes_aggregate_order_by.model_rebuild()
media_xref_quotes_arr_rel_insert_input.model_rebuild()
media_xref_quotes_bool_exp.model_rebuild()
media_xref_quotes_insert_input.model_rebuild()
media_xref_quotes_on_conflict.model_rebuild()
media_xref_quotes_order_by.model_rebuild()
media_xref_quotes_stream_cursor_input.model_rebuild()
media_xref_quotes_updates.model_rebuild()
media_xref_ticket_custom_form_entries_aggregate_bool_exp.model_rebuild()
media_xref_ticket_custom_form_entries_aggregate_bool_exp_count.model_rebuild()
media_xref_ticket_custom_form_entries_aggregate_order_by.model_rebuild()
media_xref_ticket_custom_form_entries_arr_rel_insert_input.model_rebuild()
media_xref_ticket_custom_form_entries_bool_exp.model_rebuild()
media_xref_ticket_custom_form_entries_insert_input.model_rebuild()
media_xref_ticket_custom_form_entries_on_conflict.model_rebuild()
media_xref_ticket_custom_form_entries_order_by.model_rebuild()
media_xref_ticket_custom_form_entries_stream_cursor_input.model_rebuild()
media_xref_ticket_custom_form_entries_updates.model_rebuild()
media_xref_tickets_aggregate_bool_exp.model_rebuild()
media_xref_tickets_aggregate_bool_exp_count.model_rebuild()
media_xref_tickets_aggregate_order_by.model_rebuild()
media_xref_tickets_arr_rel_insert_input.model_rebuild()
media_xref_tickets_bool_exp.model_rebuild()
media_xref_tickets_insert_input.model_rebuild()
media_xref_tickets_on_conflict.model_rebuild()
media_xref_tickets_order_by.model_rebuild()
media_xref_tickets_stream_cursor_input.model_rebuild()
media_xref_tickets_updates.model_rebuild()
media_xref_travel_logs_aggregate_bool_exp.model_rebuild()
media_xref_travel_logs_aggregate_bool_exp_count.model_rebuild()
media_xref_travel_logs_aggregate_order_by.model_rebuild()
media_xref_travel_logs_arr_rel_insert_input.model_rebuild()
media_xref_travel_logs_bool_exp.model_rebuild()
media_xref_travel_logs_insert_input.model_rebuild()
media_xref_travel_logs_on_conflict.model_rebuild()
media_xref_travel_logs_order_by.model_rebuild()
media_xref_travel_logs_stream_cursor_input.model_rebuild()
media_xref_travel_logs_updates.model_rebuild()
media_xref_work_logs_aggregate_bool_exp.model_rebuild()
media_xref_work_logs_aggregate_bool_exp_count.model_rebuild()
media_xref_work_logs_aggregate_order_by.model_rebuild()
media_xref_work_logs_arr_rel_insert_input.model_rebuild()
media_xref_work_logs_bool_exp.model_rebuild()
media_xref_work_logs_insert_input.model_rebuild()
media_xref_work_logs_on_conflict.model_rebuild()
media_xref_work_logs_order_by.model_rebuild()
media_xref_work_logs_stream_cursor_input.model_rebuild()
media_xref_work_logs_updates.model_rebuild()
media_xref_work_orders_aggregate_bool_exp.model_rebuild()
media_xref_work_orders_aggregate_bool_exp_count.model_rebuild()
media_xref_work_orders_aggregate_order_by.model_rebuild()
media_xref_work_orders_arr_rel_insert_input.model_rebuild()
media_xref_work_orders_bool_exp.model_rebuild()
media_xref_work_orders_insert_input.model_rebuild()
media_xref_work_orders_on_conflict.model_rebuild()
media_xref_work_orders_order_by.model_rebuild()
media_xref_work_orders_stream_cursor_input.model_rebuild()
media_xref_work_orders_updates.model_rebuild()
notification_prefs_aggregate_bool_exp.model_rebuild()
notification_prefs_aggregate_bool_exp_bool_and.model_rebuild()
notification_prefs_aggregate_bool_exp_bool_or.model_rebuild()
notification_prefs_aggregate_bool_exp_count.model_rebuild()
notification_prefs_aggregate_order_by.model_rebuild()
notification_prefs_arr_rel_insert_input.model_rebuild()
notification_prefs_bool_exp.model_rebuild()
notification_prefs_insert_input.model_rebuild()
notification_prefs_on_conflict.model_rebuild()
notification_prefs_order_by.model_rebuild()
notification_prefs_stream_cursor_input.model_rebuild()
notification_prefs_updates.model_rebuild()
oauth_providers_bool_exp.model_rebuild()
oauth_providers_on_conflict.model_rebuild()
oauth_providers_stream_cursor_input.model_rebuild()
oauth_providers_updates.model_rebuild()
org_roles_bool_exp.model_rebuild()
org_roles_obj_rel_insert_input.model_rebuild()
org_roles_on_conflict.model_rebuild()
org_roles_stream_cursor_input.model_rebuild()
org_roles_updates.model_rebuild()
org_users_xref_roles_aggregate_bool_exp.model_rebuild()
org_users_xref_roles_aggregate_bool_exp_count.model_rebuild()
org_users_xref_roles_aggregate_order_by.model_rebuild()
org_users_xref_roles_arr_rel_insert_input.model_rebuild()
org_users_xref_roles_bool_exp.model_rebuild()
org_users_xref_roles_insert_input.model_rebuild()
org_users_xref_roles_on_conflict.model_rebuild()
org_users_xref_roles_order_by.model_rebuild()
org_users_xref_roles_stream_cursor_input.model_rebuild()
org_users_xref_roles_updates.model_rebuild()
org_xref_feature_flags_aggregate_bool_exp.model_rebuild()
org_xref_feature_flags_aggregate_bool_exp_count.model_rebuild()
org_xref_feature_flags_aggregate_order_by.model_rebuild()
org_xref_feature_flags_arr_rel_insert_input.model_rebuild()
org_xref_feature_flags_bool_exp.model_rebuild()
org_xref_feature_flags_insert_input.model_rebuild()
org_xref_feature_flags_on_conflict.model_rebuild()
org_xref_feature_flags_order_by.model_rebuild()
org_xref_feature_flags_stream_cursor_input.model_rebuild()
org_xref_feature_flags_updates.model_rebuild()
organization_agent_prices_aggregate_bool_exp.model_rebuild()
organization_agent_prices_aggregate_bool_exp_count.model_rebuild()
organization_agent_prices_aggregate_order_by.model_rebuild()
organization_agent_prices_arr_rel_insert_input.model_rebuild()
organization_agent_prices_bool_exp.model_rebuild()
organization_agent_prices_insert_input.model_rebuild()
organization_agent_prices_on_conflict.model_rebuild()
organization_agent_prices_order_by.model_rebuild()
organization_agent_prices_stream_cursor_input.model_rebuild()
organization_agent_prices_updates.model_rebuild()
organization_agents_aggregate_bool_exp.model_rebuild()
organization_agents_aggregate_bool_exp_count.model_rebuild()
organization_agents_aggregate_order_by.model_rebuild()
organization_agents_arr_rel_insert_input.model_rebuild()
organization_agents_bool_exp.model_rebuild()
organization_agents_insert_input.model_rebuild()
organization_agents_obj_rel_insert_input.model_rebuild()
organization_agents_on_conflict.model_rebuild()
organization_agents_order_by.model_rebuild()
organization_agents_stream_cursor_input.model_rebuild()
organization_agents_updates.model_rebuild()
organization_timezone_history_aggregate_bool_exp.model_rebuild()
organization_timezone_history_aggregate_bool_exp_count.model_rebuild()
organization_timezone_history_aggregate_order_by.model_rebuild()
organization_timezone_history_arr_rel_insert_input.model_rebuild()
organization_timezone_history_bool_exp.model_rebuild()
organization_timezone_history_insert_input.model_rebuild()
organization_timezone_history_order_by.model_rebuild()
organization_timezone_history_stream_cursor_input.model_rebuild()
organization_timezone_history_updates.model_rebuild()
organizations_bool_exp.model_rebuild()
organizations_insert_input.model_rebuild()
organizations_obj_rel_insert_input.model_rebuild()
organizations_on_conflict.model_rebuild()
organizations_order_by.model_rebuild()
organizations_stream_cursor_input.model_rebuild()
organizations_updates.model_rebuild()
organizations_xref_oauth_aggregate_bool_exp.model_rebuild()
organizations_xref_oauth_aggregate_bool_exp_count.model_rebuild()
organizations_xref_oauth_aggregate_order_by.model_rebuild()
organizations_xref_oauth_arr_rel_insert_input.model_rebuild()
organizations_xref_oauth_bool_exp.model_rebuild()
organizations_xref_oauth_insert_input.model_rebuild()
organizations_xref_oauth_on_conflict.model_rebuild()
organizations_xref_oauth_order_by.model_rebuild()
organizations_xref_oauth_stream_cursor_input.model_rebuild()
organizations_xref_oauth_updates.model_rebuild()
payment_statuses_bool_exp.model_rebuild()
payment_statuses_on_conflict.model_rebuild()
payment_statuses_stream_cursor_input.model_rebuild()
payment_statuses_updates.model_rebuild()
price_book_agent_prices_aggregate_bool_exp.model_rebuild()
price_book_agent_prices_aggregate_bool_exp_count.model_rebuild()
price_book_agent_prices_aggregate_order_by.model_rebuild()
price_book_agent_prices_arr_rel_insert_input.model_rebuild()
price_book_agent_prices_bool_exp.model_rebuild()
price_book_agent_prices_insert_input.model_rebuild()
price_book_agent_prices_on_conflict.model_rebuild()
price_book_agent_prices_order_by.model_rebuild()
price_book_agent_prices_stream_cursor_input.model_rebuild()
price_book_agent_prices_updates.model_rebuild()
price_books_aggregate_bool_exp.model_rebuild()
price_books_aggregate_bool_exp_count.model_rebuild()
price_books_aggregate_order_by.model_rebuild()
price_books_arr_rel_insert_input.model_rebuild()
price_books_bool_exp.model_rebuild()
price_books_insert_input.model_rebuild()
price_books_obj_rel_insert_input.model_rebuild()
price_books_on_conflict.model_rebuild()
price_books_order_by.model_rebuild()
price_books_stream_cursor_input.model_rebuild()
price_books_updates.model_rebuild()
product_prices_aggregate_bool_exp.model_rebuild()
product_prices_aggregate_bool_exp_count.model_rebuild()
product_prices_aggregate_order_by.model_rebuild()
product_prices_arr_rel_insert_input.model_rebuild()
product_prices_bool_exp.model_rebuild()
product_prices_insert_input.model_rebuild()
product_prices_on_conflict.model_rebuild()
product_prices_order_by.model_rebuild()
product_prices_stream_cursor_input.model_rebuild()
product_prices_updates.model_rebuild()
product_types_bool_exp.model_rebuild()
product_types_insert_input.model_rebuild()
product_types_on_conflict.model_rebuild()
product_types_order_by.model_rebuild()
product_types_stream_cursor_input.model_rebuild()
product_types_updates.model_rebuild()
products_aggregate_bool_exp.model_rebuild()
products_aggregate_bool_exp_count.model_rebuild()
products_aggregate_order_by.model_rebuild()
products_arr_rel_insert_input.model_rebuild()
products_bool_exp.model_rebuild()
products_insert_input.model_rebuild()
products_obj_rel_insert_input.model_rebuild()
products_on_conflict.model_rebuild()
products_order_by.model_rebuild()
products_stream_cursor_input.model_rebuild()
products_updates.model_rebuild()
products_xref_custom_forms_aggregate_bool_exp.model_rebuild()
products_xref_custom_forms_aggregate_bool_exp_bool_and.model_rebuild()
products_xref_custom_forms_aggregate_bool_exp_bool_or.model_rebuild()
products_xref_custom_forms_aggregate_bool_exp_count.model_rebuild()
products_xref_custom_forms_aggregate_order_by.model_rebuild()
products_xref_custom_forms_arr_rel_insert_input.model_rebuild()
products_xref_custom_forms_bool_exp.model_rebuild()
products_xref_custom_forms_insert_input.model_rebuild()
products_xref_custom_forms_on_conflict.model_rebuild()
products_xref_custom_forms_order_by.model_rebuild()
products_xref_custom_forms_stream_cursor_input.model_rebuild()
products_xref_custom_forms_updates.model_rebuild()
quote_event_types_bool_exp.model_rebuild()
quote_event_types_on_conflict.model_rebuild()
quote_event_types_stream_cursor_input.model_rebuild()
quote_event_types_updates.model_rebuild()
quote_events_aggregate_bool_exp.model_rebuild()
quote_events_aggregate_bool_exp_count.model_rebuild()
quote_events_aggregate_order_by.model_rebuild()
quote_events_arr_rel_insert_input.model_rebuild()
quote_events_bool_exp.model_rebuild()
quote_events_insert_input.model_rebuild()
quote_events_obj_rel_insert_input.model_rebuild()
quote_events_on_conflict.model_rebuild()
quote_events_order_by.model_rebuild()
quote_events_stream_cursor_input.model_rebuild()
quote_events_updates.model_rebuild()
quote_items_aggregate_bool_exp.model_rebuild()
quote_items_aggregate_bool_exp_count.model_rebuild()
quote_items_aggregate_order_by.model_rebuild()
quote_items_arr_rel_insert_input.model_rebuild()
quote_items_bool_exp.model_rebuild()
quote_items_insert_input.model_rebuild()
quote_items_on_conflict.model_rebuild()
quote_items_order_by.model_rebuild()
quote_items_stream_cursor_input.model_rebuild()
quote_items_updates.model_rebuild()
quote_quotes_aggregate_bool_exp.model_rebuild()
quote_quotes_aggregate_bool_exp_count.model_rebuild()
quote_quotes_aggregate_order_by.model_rebuild()
quote_quotes_arr_rel_insert_input.model_rebuild()
quote_quotes_bool_exp.model_rebuild()
quote_quotes_insert_input.model_rebuild()
quote_quotes_obj_rel_insert_input.model_rebuild()
quote_quotes_on_conflict.model_rebuild()
quote_quotes_order_by.model_rebuild()
quote_quotes_stream_cursor_input.model_rebuild()
quote_quotes_updates.model_rebuild()
report_uploads_bool_exp.model_rebuild()
report_uploads_insert_input.model_rebuild()
report_uploads_on_conflict.model_rebuild()
report_uploads_order_by.model_rebuild()
report_uploads_stream_cursor_input.model_rebuild()
report_uploads_updates.model_rebuild()
review_statuses_bool_exp.model_rebuild()
review_statuses_insert_input.model_rebuild()
review_statuses_obj_rel_insert_input.model_rebuild()
review_statuses_on_conflict.model_rebuild()
review_statuses_order_by.model_rebuild()
review_statuses_stream_cursor_input.model_rebuild()
review_statuses_updates.model_rebuild()
signatures_bool_exp.model_rebuild()
signatures_insert_input.model_rebuild()
signatures_obj_rel_insert_input.model_rebuild()
signatures_on_conflict.model_rebuild()
signatures_order_by.model_rebuild()
signatures_stream_cursor_input.model_rebuild()
signatures_updates.model_rebuild()
ticket_activity_bool_exp.model_rebuild()
ticket_activity_order_by.model_rebuild()
ticket_activity_stream_cursor_input.model_rebuild()
ticket_agents_aggregate_bool_exp.model_rebuild()
ticket_agents_aggregate_bool_exp_count.model_rebuild()
ticket_agents_aggregate_order_by.model_rebuild()
ticket_agents_arr_rel_insert_input.model_rebuild()
ticket_agents_bool_exp.model_rebuild()
ticket_agents_insert_input.model_rebuild()
ticket_agents_on_conflict.model_rebuild()
ticket_agents_order_by.model_rebuild()
ticket_agents_stream_cursor_input.model_rebuild()
ticket_agents_updates.model_rebuild()
ticket_aggregates_all_bool_exp.model_rebuild()
ticket_aggregates_all_stream_cursor_input.model_rebuild()
ticket_aggregates_by_agent_bool_exp.model_rebuild()
ticket_aggregates_by_agent_order_by.model_rebuild()
ticket_aggregates_by_agent_stream_cursor_input.model_rebuild()
ticket_custom_form_entries_aggregate_bool_exp.model_rebuild()
ticket_custom_form_entries_aggregate_bool_exp_count.model_rebuild()
ticket_custom_form_entries_aggregate_order_by.model_rebuild()
ticket_custom_form_entries_arr_rel_insert_input.model_rebuild()
ticket_custom_form_entries_bool_exp.model_rebuild()
ticket_custom_form_entries_insert_input.model_rebuild()
ticket_custom_form_entries_obj_rel_insert_input.model_rebuild()
ticket_custom_form_entries_on_conflict.model_rebuild()
ticket_custom_form_entries_order_by.model_rebuild()
ticket_custom_form_entries_stream_cursor_input.model_rebuild()
ticket_custom_form_entries_updates.model_rebuild()
ticket_dates_bool_exp.model_rebuild()
ticket_dates_insert_input.model_rebuild()
ticket_dates_obj_rel_insert_input.model_rebuild()
ticket_dates_order_by.model_rebuild()
ticket_dates_stream_cursor_input.model_rebuild()
ticket_review_event_types_bool_exp.model_rebuild()
ticket_review_event_types_insert_input.model_rebuild()
ticket_review_event_types_obj_rel_insert_input.model_rebuild()
ticket_review_event_types_on_conflict.model_rebuild()
ticket_review_event_types_order_by.model_rebuild()
ticket_review_event_types_stream_cursor_input.model_rebuild()
ticket_review_event_types_updates.model_rebuild()
ticket_review_events_aggregate_bool_exp.model_rebuild()
ticket_review_events_aggregate_bool_exp_count.model_rebuild()
ticket_review_events_aggregate_order_by.model_rebuild()
ticket_review_events_arr_rel_insert_input.model_rebuild()
ticket_review_events_bool_exp.model_rebuild()
ticket_review_events_insert_input.model_rebuild()
ticket_review_events_on_conflict.model_rebuild()
ticket_review_events_order_by.model_rebuild()
ticket_review_events_stream_cursor_input.model_rebuild()
ticket_review_events_updates.model_rebuild()
ticket_statuses_bool_exp.model_rebuild()
ticket_statuses_insert_input.model_rebuild()
ticket_statuses_obj_rel_insert_input.model_rebuild()
ticket_statuses_on_conflict.model_rebuild()
ticket_statuses_order_by.model_rebuild()
ticket_statuses_stream_cursor_input.model_rebuild()
ticket_statuses_updates.model_rebuild()
tickets_aggregate_bool_exp.model_rebuild()
tickets_aggregate_bool_exp_count.model_rebuild()
tickets_aggregate_order_by.model_rebuild()
tickets_arr_rel_insert_input.model_rebuild()
tickets_bool_exp.model_rebuild()
tickets_insert_input.model_rebuild()
tickets_obj_rel_insert_input.model_rebuild()
tickets_on_conflict.model_rebuild()
tickets_order_by.model_rebuild()
tickets_stream_cursor_input.model_rebuild()
tickets_updates.model_rebuild()
time_sheet_billing_intervals_bool_exp.model_rebuild()
time_sheet_billing_intervals_on_conflict.model_rebuild()
time_sheet_billing_intervals_stream_cursor_input.model_rebuild()
time_sheet_billing_intervals_updates.model_rebuild()
time_sheet_rules_aggregate_bool_exp.model_rebuild()
time_sheet_rules_aggregate_bool_exp_count.model_rebuild()
time_sheet_rules_aggregate_order_by.model_rebuild()
time_sheet_rules_arr_rel_insert_input.model_rebuild()
time_sheet_rules_bool_exp.model_rebuild()
time_sheet_rules_insert_input.model_rebuild()
time_sheet_rules_on_conflict.model_rebuild()
time_sheet_rules_order_by.model_rebuild()
time_sheet_rules_stream_cursor_input.model_rebuild()
time_sheet_rules_updates.model_rebuild()
time_sheet_rulesets_bool_exp.model_rebuild()
time_sheet_rulesets_insert_input.model_rebuild()
time_sheet_rulesets_obj_rel_insert_input.model_rebuild()
time_sheet_rulesets_on_conflict.model_rebuild()
time_sheet_rulesets_order_by.model_rebuild()
time_sheet_rulesets_stream_cursor_input.model_rebuild()
time_sheet_rulesets_updates.model_rebuild()
time_units_bool_exp.model_rebuild()
time_units_on_conflict.model_rebuild()
time_units_stream_cursor_input.model_rebuild()
time_units_updates.model_rebuild()
travel_logs_aggregate_bool_exp.model_rebuild()
travel_logs_aggregate_bool_exp_count.model_rebuild()
travel_logs_aggregate_order_by.model_rebuild()
travel_logs_arr_rel_insert_input.model_rebuild()
travel_logs_bool_exp.model_rebuild()
travel_logs_insert_input.model_rebuild()
travel_logs_obj_rel_insert_input.model_rebuild()
travel_logs_on_conflict.model_rebuild()
travel_logs_order_by.model_rebuild()
travel_logs_stream_cursor_input.model_rebuild()
travel_logs_updates.model_rebuild()
travel_prices_aggregate_bool_exp.model_rebuild()
travel_prices_aggregate_bool_exp_count.model_rebuild()
travel_prices_aggregate_order_by.model_rebuild()
travel_prices_arr_rel_insert_input.model_rebuild()
travel_prices_bool_exp.model_rebuild()
travel_prices_insert_input.model_rebuild()
travel_prices_on_conflict.model_rebuild()
travel_prices_order_by.model_rebuild()
travel_prices_stream_cursor_input.model_rebuild()
travel_prices_updates.model_rebuild()
user_subs_aggregate_bool_exp.model_rebuild()
user_subs_aggregate_bool_exp_count.model_rebuild()
user_subs_aggregate_order_by.model_rebuild()
user_subs_arr_rel_insert_input.model_rebuild()
user_subs_bool_exp.model_rebuild()
user_subs_insert_input.model_rebuild()
user_subs_on_conflict.model_rebuild()
user_subs_order_by.model_rebuild()
user_subs_stream_cursor_input.model_rebuild()
user_subs_updates.model_rebuild()
users_bool_exp.model_rebuild()
users_insert_input.model_rebuild()
users_obj_rel_insert_input.model_rebuild()
users_on_conflict.model_rebuild()
users_order_by.model_rebuild()
users_stream_cursor_input.model_rebuild()
users_updates.model_rebuild()
work_logs_aggregate_bool_exp.model_rebuild()
work_logs_aggregate_bool_exp_count.model_rebuild()
work_logs_aggregate_order_by.model_rebuild()
work_logs_arr_rel_insert_input.model_rebuild()
work_logs_bool_exp.model_rebuild()
work_logs_insert_input.model_rebuild()
work_logs_obj_rel_insert_input.model_rebuild()
work_logs_on_conflict.model_rebuild()
work_logs_order_by.model_rebuild()
work_logs_stream_cursor_input.model_rebuild()
work_logs_updates.model_rebuild()
work_sites_aggregate_bool_exp.model_rebuild()
work_sites_aggregate_bool_exp_count.model_rebuild()
work_sites_aggregate_order_by.model_rebuild()
work_sites_arr_rel_insert_input.model_rebuild()
work_sites_bool_exp.model_rebuild()
work_sites_insert_input.model_rebuild()
work_sites_obj_rel_insert_input.model_rebuild()
work_sites_on_conflict.model_rebuild()
work_sites_order_by.model_rebuild()
work_sites_stream_cursor_input.model_rebuild()
work_sites_updates.model_rebuild()
