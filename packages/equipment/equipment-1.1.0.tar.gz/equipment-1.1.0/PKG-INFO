Metadata-Version: 2.4
Name: equipment
Version: 1.1.0
Summary: The root of your next python project
Author-email: Roger Vilà <rogervila@me.com>
License: MIT License
        
        Copyright (c) 2025 Roger Vilà
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/rogervila/equipment
Project-URL: Issues, https://github.com/rogervila/equipment/issues
Keywords: equipment,application scaffolding,scheduler,dependency injection,web
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3.13
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: boto3<2,>=1.30
Requires-Dist: boto3-stubs-lite[s3]<2,>=1.30
Requires-Dist: cachetools<6,>=5.3
Requires-Dist: click<9,>=8.1
Requires-Dist: dependency-injector<5,>=4.46
Requires-Dist: moto[s3]<6,>=5.0
Requires-Dist: mypy-boto3-s3<2,>=1.30
Requires-Dist: parent-import>=0.0.1
Requires-Dist: python-dotenv<2,>=1.0
Requires-Dist: python-json-logger<4,>=3.2
Requires-Dist: python_sqlite_log_handler<2,>=1.0
Requires-Dist: PyYAML<7,>=6.0
Requires-Dist: redis<6,>=5.2
Requires-Dist: requests<3,>=2.32
Requires-Dist: rq<3,>=1.16
Requires-Dist: schedule<2,>=1.2
Requires-Dist: sqlalchemy<3,>=2.0
Requires-Dist: build
Requires-Dist: setuptools
Requires-Dist: wheel
Requires-Dist: twine
Dynamic: license-file

<p align="center"><img src="https://rogervila.es/static/img/equipment-logo.png" alt="Equipment: Python Project Scaffolding Framework" height="200" /></p>

[![PyPI version](https://badge.fury.io/py/equipment.svg)](https://badge.fury.io/py/equipment)
![PyPI - Downloads](https://img.shields.io/pypi/dm/equipment)
[![Documentation](https://img.shields.io/badge/docs-latest-blue.svg)](https://equipment-python.vercel.app)

# Equipment: Python Project Scaffolding Framework

## 🚀 Simplify Your Python Project Setup

Equipment is a comprehensive scaffolding framework designed to streamline Python project development. It provides a robust, flexible foundation that adapts to projects of any scale - from simple scripts to complex enterprise applications.

## 🌟 Key Features

### 🔧 Dependency Injection Made Simple
- Intuitive dependency management
- Support for class-based and function-based dependencies
- Reduces boilerplate code and improves modularity

### 🏗️ Project Initialization
- One-command project creation: `equipment new my-app`
- Standardized project structure
- Consistent setup across different project types

### 📝 Advanced Logging
- Configurable logging system
- Multiple log channels and custom formatters
- Easy-to-use logging API

### ⏰ Task Scheduling
- Built-in task scheduler
- Support for periodic and recurring tasks
- Seamless queue system integration

### 📦 Queue Management
- Synchronous and Redis-based queue support
- Asynchronous task processing
- Simple task enqueuing and scheduling

### 💾 Database Integration
- SQLAlchemy ORM integration
- Multi-database driver support
- Automatic migration handling via Alembic

### 💽 Flexible Storage Management
- Filesystem abstraction layer
- Local and cloud storage support
- Easily extensible storage configuration

## 🔍 Why Equipment?

Equipment is built with developer experience in mind. It solves common Python project challenges:
- Eliminates repetitive configuration
- Provides a consistent project structure
- Supports scalability from small scripts to large applications
- Integrates seamlessly with popular Python tools and frameworks

## 🛠️ Tech Stack

Equipment leverages industry-standard libraries to provide a robust development experience:
- [Dependency Injector](https://python-dependency-injector.ets-labs.org/) for dependency management
- [SQLAlchemy](https://www.sqlalchemy.org/) as the ORM
- [Alembic](https://alembic.sqlalchemy.org/en/latest/) for database migrations
- [Redis](https://redis.io/) for advanced queuing
- [FastAPI](https://fastapi.tiangolo.com/) as the web framework

## 🚀 Quick Start

```bash
# Install Equipment
pip install equipment

# Generate a new project
equipment new my-app

# Install dependencies
cd my-app && pip install .

# Run the main application
py main.py
```

## 🤝 Community

We welcome contributions, feedback, and suggestions! Join our [GitHub Discussions](https://github.com/rogervila/equipment/discussions) to connect with the Equipment community.

## 📄 License

This project is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).

Equipment icons created by <a href="https://www.flaticon.com/free-icons/toolbox">Freepik - Flaticon</a>

## Author

[Roger Vilà](https://github.com/rogervila)
