"use strict";(self.webpackChunk_jupyterlite_ai=self.webpackChunk_jupyterlite_ai||[]).push([[400],{70041:(e,t,a)=>{a.d(t,{CC:()=>i,mJ:()=>o,vd:()=>r});var s=a(87514),n=a(58027);class r extends s.YN{parseResultWithPrompt(e,t,a){return this.parseResult(e,a)}_baseMessageToString(e){return"string"==typeof e.content?e.content:this._baseMessageContentToString(e.content)}_baseMessageContentToString(e){return JSON.stringify(e)}async invoke(e,t){return"string"==typeof e?this._callWithConfig((async(e,t)=>this.parseResult([{text:e}],t?.callbacks)),e,{...t,runType:"parser"}):this._callWithConfig((async(e,t)=>this.parseResult([{message:e,text:this._baseMessageToString(e)}],t?.callbacks)),e,{...t,runType:"parser"})}}class o extends r{parseResult(e,t){return this.parse(e[0].text,t)}async parseWithPrompt(e,t,a){return this.parse(e,a)}_type(){throw new Error("_type not implemented")}}class i extends Error{constructor(e,t,a,s=!1){if(super(e),Object.defineProperty(this,"llmOutput",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"observation",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"sendToLLM",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.llmOutput=t,this.observation=a,this.sendToLLM=s,s&&(void 0===a||void 0===t))throw new Error("Arguments 'observation' & 'llmOutput' are required if 'sendToLlm' is true");(0,n.Y)(this,"OUTPUT_PARSING_FAILURE")}}},52514:(e,t,a)=>{a.d(t,{d1:()=>r.d,hU:()=>o});var s=a(78477),n=a(30434),r=a(43335);class o extends s.T{constructor(){super(...arguments),Object.defineProperty(this,"lc_namespace",{enumerable:!0,configurable:!0,writable:!0,value:["langchain_core","output_parsers"]}),Object.defineProperty(this,"lc_serializable",{enumerable:!0,configurable:!0,writable:!0,value:!0})}static lc_name(){return"JsonOutputParser"}_diff(e,t){if(t)return e?(0,n.U)(e,t):[{op:"replace",path:"",value:t}]}async parsePartialResult(e){return(0,r.D)(e[0].text)}async parse(e){return(0,r.D)(e,JSON.parse)}getFormatInstructions(){return""}}},78477:(e,t,a)=>{function s(e,t){const a=typeof e;if(a!==typeof t)return!1;if(Array.isArray(e)){if(!Array.isArray(t))return!1;const a=e.length;if(a!==t.length)return!1;for(let n=0;n<a;n++)if(!s(e[n],t[n]))return!1;return!0}if("object"===a){if(!e||!t)return e===t;const a=Object.keys(e),n=Object.keys(t);if(a.length!==n.length)return!1;for(const n of a)if(!s(e[n],t[n]))return!1;return!0}return e===t}a.d(t,{T:()=>f,k:()=>c}),"undefined"!=typeof self&&self.location&&"null"!==self.location.origin?new URL(self.location.origin+self.location.pathname+location.search):new URL("https://github.com/cfworker");const n=/^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d(?::?\d\d)?)?$/i;function r(e){return e.test.bind(e)}var o;(function(e,t){const a=t.match(n);if(!a)return!1;const s=+a[1],r=+a[2],o=+a[3],i=!!a[5];return(s<=23&&r<=59&&o<=59||23==s&&59==r&&60==o)&&(!e||i)}).bind(void 0,!1),r(/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i),r(/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i),r(/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u{00a1}-\u{ffff}0-9]+-?)*[a-z\u{00a1}-\u{ffff}0-9]+)(?:\.(?:[a-z\u{00a1}-\u{ffff}0-9]+-?)*[a-z\u{00a1}-\u{ffff}0-9]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu),r(/^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i),r(/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/),r(/^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i),r(/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i),r(/^(?:\/(?:[^~/]|~0|~1)*)*$/),r(/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i),r(/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/),function(e){e[e.Flag=1]="Flag",e[e.Basic=2]="Basic",e[e.Detailed=4]="Detailed"}(o||(o={}));var i=a(70041),l=a(64955),d=a(39741),u=a(4645);class c extends i.mJ{async*_transform(e){for await(const t of e)"string"==typeof t?yield this.parseResult([{text:t}]):yield this.parseResult([{message:t,text:this._baseMessageToString(t)}])}async*transform(e,t){yield*this._transformStreamWithConfig(e,this._transform.bind(this),{...t,runType:"parser"})}}class f extends c{constructor(e){super(e),Object.defineProperty(this,"diff",{enumerable:!0,configurable:!0,writable:!0,value:!1}),this.diff=e?.diff??this.diff}async*_transform(e){let t,a;for await(const n of e){if("string"!=typeof n&&"string"!=typeof n.content)throw new Error("Cannot handle non-string output.");let e;if((0,l.AJ)(n)){if("string"!=typeof n.content)throw new Error("Cannot handle non-string message output.");e=new u.Cf({message:n,text:n.content})}else if((0,l.ny)(n)){if("string"!=typeof n.content)throw new Error("Cannot handle non-string message output.");e=new u.Cf({message:(0,d.ih)(n),text:n.content})}else e=new u.mu({text:n});a=void 0===a?e:a.concat(e);const r=await this.parsePartialResult([a]);null==r||s(r,t)||(this.diff?yield this._diff(t,r):yield r,t=r)}}getFormatInstructions(){return""}}},87514:(e,t,a)=>{a.d(t,{YN:()=>s.YN,kI:()=>n.k,zZ:()=>s.zZ});var s=a(51101),n=(a(28122),a(83452));s.YN,a(78145),s.YN,a(5779),s.fJ},83452:(e,t,a)=>{a.d(t,{k:()=>o});var s=a(78145),n=a(51101),r=a(28122);class o extends n.YN{static lc_name(){return"RunnablePassthrough"}constructor(e){super(e),Object.defineProperty(this,"lc_namespace",{enumerable:!0,configurable:!0,writable:!0,value:["langchain_core","runnables"]}),Object.defineProperty(this,"lc_serializable",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"func",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),e&&(this.func=e.func)}async invoke(e,t){const a=(0,r.ZI)(t);return this.func&&await this.func(e,a),this._callWithConfig((e=>Promise.resolve(e)),e,a)}async*transform(e,t){const a=(0,r.ZI)(t);let n,o=!0;for await(const t of this._transformStreamWithConfig(e,(e=>e),a))if(yield t,o)if(void 0===n)n=t;else try{n=(0,s.xW)(n,t)}catch{n=void 0,o=!1}this.func&&void 0!==n&&await this.func(n,a)}static assign(e){return new n.B2(new n.ck({steps:e}))}}},30434:(e,t,a)=>{a.d(t,{U:()=>s.UD});var s=a(22919)},87931:(e,t,a)=>{function s(e){return"function"==typeof e?.parse}a.d(t,{l:()=>s})},146:(e,t,a)=>{a.d(t,{xV:()=>m});var s=a(44972),n=a(5779),r=a(4645),o=a(67749),i=a(35183),l=a(51101),d=a(78145),u=a(83452),c=a(87931),f=a(65695);class m extends o.j_{constructor(e){super(e),Object.defineProperty(this,"lc_namespace",{enumerable:!0,configurable:!0,writable:!0,value:["langchain","chat_models",this._llmType()]}),Object.defineProperty(this,"disableStreaming",{enumerable:!0,configurable:!0,writable:!0,value:!1})}_separateRunnableConfigFromCallOptionsCompat(e){const[t,a]=super._separateRunnableConfigFromCallOptions(e);return a.signal=t.signal,[t,a]}async invoke(e,t){const a=m._convertInputToPromptValue(e);return(await this.generatePrompt([a],t,t?.callbacks)).generations[0][0].message}async*_streamResponseChunks(e,t,a){throw new Error("Not implemented.")}async*_streamIterator(e,t){if(this._streamResponseChunks===m.prototype._streamResponseChunks||this.disableStreaming)yield this.invoke(e,t);else{const a=m._convertInputToPromptValue(e).toChatMessages(),[s,r]=this._separateRunnableConfigFromCallOptionsCompat(t),o={...s.metadata,...this.getLsParams(r)},l=await i.Td.configure(s.callbacks,this.callbacks,s.tags,this.tags,o,this.metadata,{verbose:this.verbose}),d={options:r,invocation_params:this?.invocationParams(r),batch_size:1},u=await(l?.handleChatModelStart(this.toJSON(),[a],s.runId,void 0,d,void 0,void 0,s.runName));let c,f;try{for await(const e of this._streamResponseChunks(a,r,u?.[0])){if(null==e.message.id){const t=u?.at(0)?.runId;null!=t&&e.message._updateId(`run-${t}`)}e.message.response_metadata={...e.generationInfo,...e.message.response_metadata},yield e.message,c=c?c.concat(e):e,(0,n.jm)(e.message)&&void 0!==e.message.usage_metadata&&(f={tokenUsage:{promptTokens:e.message.usage_metadata.input_tokens,completionTokens:e.message.usage_metadata.output_tokens,totalTokens:e.message.usage_metadata.total_tokens}})}}catch(e){throw await Promise.all((u??[]).map((t=>t?.handleLLMError(e)))),e}await Promise.all((u??[]).map((e=>e?.handleLLMEnd({generations:[[c]],llmOutput:f}))))}}getLsParams(e){const t=this.getName().startsWith("Chat")?this.getName().replace("Chat",""):this.getName();return{ls_model_type:"chat",ls_stop:e.stop,ls_provider:t}}async _generateUncached(e,t,a,s){const o=e.map((e=>e.map(n.K0)));let l;if(void 0!==s&&s.length===o.length)l=s;else{const e={...a.metadata,...this.getLsParams(t)},s=await i.Td.configure(a.callbacks,this.callbacks,a.tags,this.tags,e,this.metadata,{verbose:this.verbose}),n={options:t,invocation_params:this?.invocationParams(t),batch_size:1};l=await(s?.handleChatModelStart(this.toJSON(),o,a.runId,void 0,n,void 0,void 0,a.runName))}const u=[],c=[];if(l?.[0].handlers.find(f.xL)&&!this.disableStreaming&&1===o.length&&this._streamResponseChunks!==m.prototype._streamResponseChunks)try{const e=await this._streamResponseChunks(o[0],t,l?.[0]);let a,s;for await(const t of e){if(null==t.message.id){const e=l?.at(0)?.runId;null!=e&&t.message._updateId(`run-${e}`)}a=void 0===a?t:(0,d.xW)(a,t),(0,n.jm)(t.message)&&void 0!==t.message.usage_metadata&&(s={tokenUsage:{promptTokens:t.message.usage_metadata.input_tokens,completionTokens:t.message.usage_metadata.output_tokens,totalTokens:t.message.usage_metadata.total_tokens}})}if(void 0===a)throw new Error("Received empty response from chat model call.");u.push([a]),await(l?.[0].handleLLMEnd({generations:u,llmOutput:s}))}catch(e){throw await(l?.[0].handleLLMError(e)),e}else{const e=await Promise.allSettled(o.map(((e,a)=>this._generate(e,{...t,promptIndex:a},l?.[a]))));await Promise.all(e.map((async(e,t)=>{if("fulfilled"===e.status){const a=e.value;for(const e of a.generations){if(null==e.message.id){const t=l?.at(0)?.runId;null!=t&&e.message._updateId(`run-${t}`)}e.message.response_metadata={...e.generationInfo,...e.message.response_metadata}}return 1===a.generations.length&&(a.generations[0].message.response_metadata={...a.llmOutput,...a.generations[0].message.response_metadata}),u[t]=a.generations,c[t]=a.llmOutput,l?.[t]?.handleLLMEnd({generations:[a.generations],llmOutput:a.llmOutput})}return await(l?.[t]?.handleLLMError(e.reason)),Promise.reject(e.reason)})))}const p={generations:u,llmOutput:c.length?this._combineLLMOutput?.(...c):void 0};return Object.defineProperty(p,r.SP,{value:l?{runIds:l?.map((e=>e.runId))}:void 0,configurable:!0}),p}async _generateCached({messages:e,cache:t,llmStringKey:a,parsedOptions:s,handledOptions:o}){const l=e.map((e=>e.map(n.K0))),d={...o.metadata,...this.getLsParams(s)},u=await i.Td.configure(o.callbacks,this.callbacks,o.tags,this.tags,d,this.metadata,{verbose:this.verbose}),c={options:s,invocation_params:this?.invocationParams(s),batch_size:1},f=await(u?.handleChatModelStart(this.toJSON(),l,o.runId,void 0,c,void 0,void 0,o.runName)),p=[],h=(await Promise.allSettled(l.map((async(e,s)=>{const n=m._convertInputToPromptValue(e).toString(),r=await t.lookup(n,a);return null==r&&p.push(s),r})))).map(((e,t)=>({result:e,runManager:f?.[t]}))).filter((({result:e})=>"fulfilled"===e.status&&null!=e.value||"rejected"===e.status)),g=[];await Promise.all(h.map((async({result:e,runManager:t},a)=>{if("fulfilled"===e.status){const s=e.value;return g[a]=s.map((e=>("message"in e&&(0,n.ny)(e.message)&&(0,n.KX)(e.message)&&(e.message.usage_metadata={input_tokens:0,output_tokens:0,total_tokens:0}),e.generationInfo={...e.generationInfo,tokenUsage:{}},e))),s.length&&await(t?.handleLLMNewToken(s[0].text)),t?.handleLLMEnd({generations:[s]},void 0,void 0,void 0,{cached:!0})}return await(t?.handleLLMError(e.reason,void 0,void 0,void 0,{cached:!0})),Promise.reject(e.reason)})));const b={generations:g,missingPromptIndices:p,startedRunManagers:f};return Object.defineProperty(b,r.SP,{value:f?{runIds:f?.map((e=>e.runId))}:void 0,configurable:!0}),b}async generate(e,t,a){let s;s=Array.isArray(t)?{stop:t}:t;const r=e.map((e=>e.map(n.K0))),[o,i]=this._separateRunnableConfigFromCallOptionsCompat(s);if(o.callbacks=o.callbacks??a,!this.cache)return this._generateUncached(r,i,o);const{cache:l}=this,d=this._getSerializedCacheKeyParametersForCall(i),{generations:u,missingPromptIndices:c,startedRunManagers:f}=await this._generateCached({messages:r,cache:l,llmStringKey:d,parsedOptions:i,handledOptions:o});let p={};if(c.length>0){const e=await this._generateUncached(c.map((e=>r[e])),i,o,void 0!==f?c.map((e=>f?.[e])):void 0);await Promise.all(e.generations.map((async(e,t)=>{const a=c[t];u[a]=e;const s=m._convertInputToPromptValue(r[a]).toString();return l.update(s,d,e)}))),p=e.llmOutput??{}}return{generations:u,llmOutput:p}}invocationParams(e){return{}}_modelType(){return"base_chat_model"}serialize(){return{...this.invocationParams(),_type:this._llmType(),_model:this._modelType()}}async generatePrompt(e,t,a){const s=e.map((e=>e.toChatMessages()));return this.generate(s,t,a)}async call(e,t,a){return(await this.generate([e.map(n.K0)],t,a)).generations[0][0].message}async callPrompt(e,t,a){const s=e.toChatMessages();return this.call(s,t,a)}async predictMessages(e,t,a){return this.call(e,t,a)}async predict(e,t,a){const s=new n.xc(e),r=await this.call([s],t,a);if("string"!=typeof r.content)throw new Error("Cannot use predict when output is not a string.");return r.content}withStructuredOutput(e,t){if("function"!=typeof this.bindTools)throw new Error('Chat model must implement ".bindTools()" to use withStructuredOutput.');if(t?.strict)throw new Error('"strict" mode is not supported for this model by default.');const a=e,n=t?.name,r=a.description??"A function available to call.",o=t?.method,i=t?.includeRaw;if("jsonMode"===o)throw new Error('Base withStructuredOutput implementation only supports "functionCalling" as a method.');let d,f=n??"extract";(0,c.l)(a)?d=[{type:"function",function:{name:f,description:r,parameters:(0,s.Ik)(a)}}]:("name"in a&&(f=a.name),d=[{type:"function",function:{name:f,description:r,parameters:a}}]);const m=this.bindTools(d),p=l.jY.from((e=>{if(!e.tool_calls||0===e.tool_calls.length)throw new Error("No tool calls found in the response.");const t=e.tool_calls.find((e=>e.name===f));if(!t)throw new Error(`No tool call found with name ${f}.`);return t.args}));if(!i)return m.pipe(p).withConfig({runName:"StructuredOutput"});const h=u.k.assign({parsed:(e,t)=>p.invoke(e.raw,t)}),g=u.k.assign({parsed:()=>null}),b=h.withFallbacks({fallbacks:[g]});return l.zZ.from([{raw:m},b]).withConfig({runName:"StructuredOutputRunnable"})}}},36172:(e,t,a)=>{a.d(t,{vd:()=>s.vd,hU:()=>l.hU,CC:()=>s.CC,_6:()=>i});var s=a(70041),n=a(78477);n.k,n.k,n.k;var r=a(30589),o=a(44972);class i extends s.mJ{static lc_name(){return"StructuredOutputParser"}toJSON(){return this.toJSONNotImplemented()}constructor(e){super(e),Object.defineProperty(this,"schema",{enumerable:!0,configurable:!0,writable:!0,value:e}),Object.defineProperty(this,"lc_namespace",{enumerable:!0,configurable:!0,writable:!0,value:["langchain","output_parsers","structured"]})}static fromZodSchema(e){return new this(e)}static fromNamesAndDescriptions(e){return new this(r.z.object(Object.fromEntries(Object.entries(e).map((([e,t])=>[e,r.z.string().describe(t)])))))}getFormatInstructions(){return`You must format your output as a JSON value that adheres to a given "JSON Schema" instance.\n\n"JSON Schema" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example "JSON Schema" instance {{"properties": {{"foo": {{"description": "a list of test words", "type": "array", "items": {{"type": "string"}}}}}}, "required": ["foo"]}}}}\nwould match an object with one required property, "foo". The "type" property specifies "foo" must be an "array", and the "description" property semantically describes it as "a list of test words". The items within "foo" must be strings.\nThus, the object {{"foo": ["bar", "baz"]}} is a well-formatted instance of this example "JSON Schema". The object {{"properties": {{"foo": ["bar", "baz"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\`\`\`json\n${JSON.stringify((0,o.Ik)(this.schema))}\n\`\`\`\n`}async parse(e){try{const t=(e.includes("```")?e.trim().split(/```(?:json)?/)[1]:e.trim()).replace(/"([^"\\]*(\\.[^"\\]*)*)"/g,((e,t)=>`"${t.replace(/\n/g,"\\n")}"`)).replace(/\n/g,"");return await this.schema.parseAsync(JSON.parse(t))}catch(t){throw new s.CC(`Failed to parse. Text: "${e}". Error: ${t}`,e)}}}s.mJ;var l=a(52514);a(30434),n.T},44356:(e,t,a)=>{a.d(t,{kI:()=>s.kI,zZ:()=>s.zZ});var s=a(87514)},6723:(e,t,a)=>{a.d(t,{Az:()=>s.Az,_$:()=>s._$});var s=a(76058)}}]);