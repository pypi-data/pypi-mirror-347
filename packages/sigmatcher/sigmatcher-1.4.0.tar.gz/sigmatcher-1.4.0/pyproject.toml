[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "sigmatcher"
authors = [{ name = "Ori Perry", email = "oriori1703@gmail.com" }]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
    "Topic :: Security",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
dynamic = ["version"]
description = "Write signatures to automatically match java classes and methods between version"

requires-python = ">=3.8"
dependencies = [
    "typer>=0.12.3",
    "pydantic>=2.8.2,<3",
    "pyyaml>=6.0.1,<7",
    "platformdirs>=4.2.2,<5",
    "packaging>=24.1,<25",
    "graphlib_backport>=1.1.0,<2;python_version<'3.9'",
    "typing-extensions;python_version<'3.11'",
    "eval_type_backport;python_version<'3.9'",
    # Workaround until typer supports click 8.2 (https://github.com/fastapi/typer/pull/1145)
    "click<8.2",
]

[project.optional-dependencies]
typing = ["types-PyYAML>=6.0.1,<7"]
all = ["sigmatcher[typing]"]

[dependency-groups]
dev = ["ruff", "mypy"]

[project.urls]
Documentation = "https://github.com/oriori1703/sigmatcher#readme"
Issues = "https://github.com/oriori1703/sigmatcher/issues"
Source = "https://github.com/oriori1703/sigmatcher"

[project.scripts]
sigmatcher = "sigmatcher.cli:main"

[tool.mypy]
strict = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


[tool.pyright]
typeCheckingMode = "strict"

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
extend-select = [
    "F",   # pyflakes
    "E",   # pycodestyle
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "RUF", # ruff
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "PTH", # flake8-use-pathlib
    "ANN", # flake8-annotations
]

extend-ignore = [
    "SIM108", # if-else-block-instead-of-if-exp
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"
