[build-system]
requires = ["setuptools>=75.2"]
build-backend = "setuptools.build_meta"

[project]
name = "django-tomselect"
version = "2025.5.2"
description = "Django autocomplete widgets and views using Tom Select"
authors = [{ name = "Jack Linke", email = "jacklinke@gmail.com" }]
license = "MIT"
readme = "README.md"
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: Software Development :: Widget Sets",
]
requires-python = ">=3.10,<4.0"

dependencies = ["django>=4.2.20"]
keywords = [
    "django",
    "autocomplete",
    "tomselect",
    "widget",
    "forms",
    "views",
    "select",
    "multiselect",
]

[project.urls]
Source = "https://github.com/OmenApps/django-tomselect"
Documentation = "https://django-tomselect.readthedocs.io/en/latest/"
Issues = "https://github.com/OmenApps/django-tomselect/issues"
Changelog = "https://github.com/OmenApps/django-tomselect/releases"

[tool.uv]
dev-dependencies = [
    "bandit>=1.7.8",
    "black>=24.4.2",
    "coverage[toml]>=7.5.1",
    "darglint>=1.8.1",
    "django-extensions>=3.2.0",
    "django-htmx>=1.21.0",
    "flake8-bugbear>=24.4.26",
    "flake8-docstrings>=1.7.0",
    "flake8-rst-docstrings>=0.3.0",
    "flake8==7.0.0",
    "furo>=2024.8.6",
    "isort>=5.13.2",
    "linkify-it-py==2.0.3",
    "myst-parser>=4.0.0",
    "nox>=2024.4.15",
    "pep8-naming>=0.14.1",
    "pre-commit-hooks>=4.6.0",
    "pre-commit>=3.7.1",
    "psycopg2-binary>=2.9.9",
    "Pygments>=2.18.0",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.9.0",
    "pytest>=8.3.3",
    "python-environ~=0.4",
    "pyupgrade>=3.15.2",
    "ruff~=0.7",
    "safety>=3.2.0",
    "sphinx-autobuild>=2024.4.16",
    "sphinx-click>=6.0.0",
    "sphinx>=8.0.2",
    "vulture>=2.14",
    "Werkzeug>=3.0.0",
    "xdoctest[colors]>=1.1.3",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
django_tomselect = [
    "templates/**/*.html",
    "static/**/*.js",
    "static/**/*.css",
    "static/**/*.map",
    "locale/**/*.mo",
    "locale/**/*.po",
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["example_project", "*/example_project"]

[tool.coverage.run]
branch = true
source = ["src", "example_project"]

[tool.coverage.report]
show_missing = true
fail_under = 50
omit = [".nox/*", "example_project/*", "**/migrations/*", "**/__init__.py"]

[tool.pytest.ini_options]
log_cli_level = "INFO"
DJANGO_SETTINGS_MODULE = "example_project.settings"
python_files = ["*test_*.py", "*_test.py", "example_project/*.py"]
log_cli = true

[tool.ruff]
src = ["src"]
target-version = "py311"
line-length = 120
select = [
    "D", # pydocstyle
    "E",
    "W", # pycodestyle
    "F", # flake8
    "I", # isort
]
ignore = [
    "D1",   # D1: Missing docstring error codes (because not every function and class has a docstring)
    "D203", # D203: 1 blank line required before class docstring (conflicts with D211 and should be disabled, see https://github.com/PyCQA/pydocstyle/pull/91)
    "D205", # D205: 1 blank line required between summary line and description
    "D212", # D212: Multi-line docstring summary should start at the first line
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pycodestyle]
max-doc-length = 120

[tool.vulture]
# Configuration for vulture: https://github.com/jendrikseipp/vulture
# Install in your virtual environment and run:
# python -m vulture | tail -r | less
# The below configuration tries to remove some false positives, but there are
# still many, for example for model properties used only in templates.
# See also:
# https://adamj.eu/tech/2023/07/12/django-clean-up-unused-code-vulture/
exclude = ["*/settings.py", "*/settings/*.py", "*/migrations/*.py"]
ignore_decorators = [
    # Django
    "@receiver",
    "@register.filter",
    "@register.inclusion_tag",
    "@register.simple_tag",
    # django.contrib.admin
    "@admin.action",
    "@admin.display",
    "@admin.register",
    # pytest
    "@pytest.fixture",
]
ignore_names = [
    # Django
    "*Config",     # AppConfig subclasses
    "*Middleware",
    "clean_*",
    "Meta",
    "urlpatterns",
    # django.contrib.admin
    "get_extra",
    "get_fieldsets",
    "has_add_permission",
    "has_change_permission",
    "has_delete_permission",
    "has_view_permission",
    "lookups",
]
paths = ["src/django_tomselect"]
sort_by_size = true
