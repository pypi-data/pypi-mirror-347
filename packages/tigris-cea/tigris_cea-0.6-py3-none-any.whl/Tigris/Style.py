# -*- coding: utf-8 -*-

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
from PyQt5.QtCore import Qt
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
class Style :
    
    #==========================================================================
    QT_LINES_STYLES = {'-':Qt.SolidLine, '--':Qt.DashLine, ':':Qt.DotLine, '-.':Qt.DashDotLine}
    
    #==========================================================================
    VTK_LINE_STYLES = {'-':0xFFFF, '--':0xF0F0, ':':0xAAAA, '-.':0xF18F}
    FONT_SIZE_FACTOR = 4.0/3.0
    
    #==========================================================================
    def __init__(self) :
        #----------------------------------------------------------------------
        self.items = {}
        self.alter_items = {}
        self.changed = []
        self.auto_update = False
        
        #----------------------------------------------------------------------
        self.init_defaults()
        self.auto_update = True
    
    #==========================================================================
    def init_defaults(self) :
        #----------------------------------------------------------------------
        pass
    
    #==========================================================================
    def set(self, k, v, update=None, redraw=True) :
        #----------------------------------------------------------------------
        if k in self.items and self.items.get(k) == v :
            return
        
        #----------------------------------------------------------------------
        if k in self.items.keys() and v != self.items[k] :
            self.changed.append(k)
        
        #----------------------------------------------------------------------
        self.items[k] = v
        
        #----------------------------------------------------------------------
        if update == True or (update is None and self.auto_update) :
            self.update(redraw=redraw)
    
    #==========================================================================
    def get(self, k, default=None) :
        return self.items.get(k,default)
    
    #==========================================================================
    def add_change(self, k) :
        if k not in self.changed : self.changed.append(k)
    
    #==========================================================================
    def has(self, k) :
        return k in self.items.keys()
    
    #==========================================================================
    def update_from(self, style, skip=[], update=False, redraw=False) :
        #----------------------------------------------------------------------
        self.alter_items = {}
        D = {}
        for k,v in style.items.items() : D[k] = v
        for k,v in style.alter_items.items() : D[k] = v
        
        for k,v in D.items() :
            if k in skip : continue
            if k in self.items.keys() :
                self.set(k, v, update=False)
            else :
                self.alter_items[k] = v
            
        #----------------------------------------------------------------------
        if update :
            self.update(redraw=redraw)
    
    #==========================================================================
    def update(self, force=False, redraw=False) :
        #----------------------------------------------------------------------
        if not force and len(self.changed) == 0 : return
        
        #----------------------------------------------------------------------
        self._update(redraw)
        self.changed = []
        
    #==========================================================================
    def _update(self, redraw=False) :
        pass
    
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
