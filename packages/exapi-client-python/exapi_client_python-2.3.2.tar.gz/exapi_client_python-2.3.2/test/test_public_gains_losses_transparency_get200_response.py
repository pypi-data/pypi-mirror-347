# coding: utf-8

"""
    ExKoin API Documentation

    API documentation for ExKoin Crypto exchange

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from exapi_client_python.models.public_gains_losses_transparency_get200_response import PublicGainsLossesTransparencyGet200Response

class TestPublicGainsLossesTransparencyGet200Response(unittest.TestCase):
    """PublicGainsLossesTransparencyGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicGainsLossesTransparencyGet200Response:
        """Test PublicGainsLossesTransparencyGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicGainsLossesTransparencyGet200Response`
        """
        model = PublicGainsLossesTransparencyGet200Response()
        if include_optional:
            return PublicGainsLossesTransparencyGet200Response(
                timestamp = 1.337,
                currencies = {
                    'key' : exapi_client_python.models._public_gains_losses_transparency_get_200_response_currencies_value._public_gains_losses_transparency_get_200_response_currencies_value(
                        total = '', 
                        trades = '', 
                        exk_program = '', 
                        withdrawals = '', 
                        transfers = '', 
                        admin_withdrawals = '', 
                        admin_deposits = '', )
                    },
                last_20 = [
                    exapi_client_python.models._public_gains_losses_transparency_get_200_response_last_20_inner._public_gains_losses_transparency_get_200_response_last_20_inner(
                        currency = '', 
                        network = '', 
                        amount = '', 
                        reason = '', 
                        timestamp = 1.337, )
                    ]
            )
        else:
            return PublicGainsLossesTransparencyGet200Response(
                timestamp = 1.337,
                currencies = {
                    'key' : exapi_client_python.models._public_gains_losses_transparency_get_200_response_currencies_value._public_gains_losses_transparency_get_200_response_currencies_value(
                        total = '', 
                        trades = '', 
                        exk_program = '', 
                        withdrawals = '', 
                        transfers = '', 
                        admin_withdrawals = '', 
                        admin_deposits = '', )
                    },
                last_20 = [
                    exapi_client_python.models._public_gains_losses_transparency_get_200_response_last_20_inner._public_gains_losses_transparency_get_200_response_last_20_inner(
                        currency = '', 
                        network = '', 
                        amount = '', 
                        reason = '', 
                        timestamp = 1.337, )
                    ],
        )
        """

    def testPublicGainsLossesTransparencyGet200Response(self):
        """Test PublicGainsLossesTransparencyGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
