# coding: utf-8

"""
    ExKoin API Documentation

    API documentation for ExKoin Crypto exchange

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from exapi_client_python.models.public_gains_losses_transparency_get200_response_last20_inner import PublicGainsLossesTransparencyGet200ResponseLast20Inner

class TestPublicGainsLossesTransparencyGet200ResponseLast20Inner(unittest.TestCase):
    """PublicGainsLossesTransparencyGet200ResponseLast20Inner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicGainsLossesTransparencyGet200ResponseLast20Inner:
        """Test PublicGainsLossesTransparencyGet200ResponseLast20Inner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicGainsLossesTransparencyGet200ResponseLast20Inner`
        """
        model = PublicGainsLossesTransparencyGet200ResponseLast20Inner()
        if include_optional:
            return PublicGainsLossesTransparencyGet200ResponseLast20Inner(
                currency = '',
                network = '',
                amount = '',
                reason = '',
                timestamp = 1.337
            )
        else:
            return PublicGainsLossesTransparencyGet200ResponseLast20Inner(
                currency = '',
                network = '',
                amount = '',
                reason = '',
                timestamp = 1.337,
        )
        """

    def testPublicGainsLossesTransparencyGet200ResponseLast20Inner(self):
        """Test PublicGainsLossesTransparencyGet200ResponseLast20Inner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
