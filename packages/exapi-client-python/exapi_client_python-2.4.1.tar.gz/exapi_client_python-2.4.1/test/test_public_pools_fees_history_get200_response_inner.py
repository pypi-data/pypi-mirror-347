# coding: utf-8

"""
    ExKoin API Documentation

    API documentation for ExKoin Crypto exchange

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from exapi_client_python.models.public_pools_fees_history_get200_response_inner import PublicPoolsFeesHistoryGet200ResponseInner

class TestPublicPoolsFeesHistoryGet200ResponseInner(unittest.TestCase):
    """PublicPoolsFeesHistoryGet200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublicPoolsFeesHistoryGet200ResponseInner:
        """Test PublicPoolsFeesHistoryGet200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublicPoolsFeesHistoryGet200ResponseInner`
        """
        model = PublicPoolsFeesHistoryGet200ResponseInner()
        if include_optional:
            return PublicPoolsFeesHistoryGet200ResponseInner(
                timestamp = 1.337,
                fees = exapi_client_python.models._public_pools_get_200_response_inner_earned_24h._public_pools_get_200_response_inner_earned_24h(
                    base = '', 
                    quote = '', )
            )
        else:
            return PublicPoolsFeesHistoryGet200ResponseInner(
                timestamp = 1.337,
                fees = exapi_client_python.models._public_pools_get_200_response_inner_earned_24h._public_pools_get_200_response_inner_earned_24h(
                    base = '', 
                    quote = '', ),
        )
        """

    def testPublicPoolsFeesHistoryGet200ResponseInner(self):
        """Test PublicPoolsFeesHistoryGet200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
