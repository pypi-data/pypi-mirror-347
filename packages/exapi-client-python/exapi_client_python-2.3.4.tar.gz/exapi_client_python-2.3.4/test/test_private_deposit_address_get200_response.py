# coding: utf-8

"""
    ExKoin API Documentation

    API documentation for ExKoin Crypto exchange

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from exapi_client_python.models.private_deposit_address_get200_response import PrivateDepositAddressGet200Response

class TestPrivateDepositAddressGet200Response(unittest.TestCase):
    """PrivateDepositAddressGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrivateDepositAddressGet200Response:
        """Test PrivateDepositAddressGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrivateDepositAddressGet200Response`
        """
        model = PrivateDepositAddressGet200Response()
        if include_optional:
            return PrivateDepositAddressGet200Response(
                active = None,
                address = '',
                memo = '',
                min_deposit_amount = '',
                currency_details = exapi_client_python.models._public_currencies_get_200_response_inner._public_currencies_get_200_response_inner(
                    id = '', 
                    name = '', 
                    precision = 1.337, 
                    deposit_enabled = null, 
                    withdrawal_enabled = null, 
                    value_usd = '', 
                    logo_url = '', 
                    networks = [
                        exapi_client_python.models._public_currencies_get_200_response_inner_networks_inner._public_currencies_get_200_response_inner_networks_inner(
                            id = '', 
                            contract_address = '', )
                        ], 
                    lp_token_of = '', ),
                network_details = exapi_client_python.models._public_networks_get_200_response_inner._public_networks_get_200_response_inner(
                    id = '', 
                    name = '', 
                    active = null, 
                    chain_like = '', 
                    address_regex = '', 
                    withdrawal_fee_usd = 1.337, 
                    min_deposit_usd = 1.337, 
                    logo_url = '', 
                    min_confirmations = 1.337, 
                    memo_support = null, 
                    explorer_txid = '', 
                    explorer_address = '', 
                    native_currency = '', )
            )
        else:
            return PrivateDepositAddressGet200Response(
                address = '',
                min_deposit_amount = '',
                currency_details = exapi_client_python.models._public_currencies_get_200_response_inner._public_currencies_get_200_response_inner(
                    id = '', 
                    name = '', 
                    precision = 1.337, 
                    deposit_enabled = null, 
                    withdrawal_enabled = null, 
                    value_usd = '', 
                    logo_url = '', 
                    networks = [
                        exapi_client_python.models._public_currencies_get_200_response_inner_networks_inner._public_currencies_get_200_response_inner_networks_inner(
                            id = '', 
                            contract_address = '', )
                        ], 
                    lp_token_of = '', ),
                network_details = exapi_client_python.models._public_networks_get_200_response_inner._public_networks_get_200_response_inner(
                    id = '', 
                    name = '', 
                    active = null, 
                    chain_like = '', 
                    address_regex = '', 
                    withdrawal_fee_usd = 1.337, 
                    min_deposit_usd = 1.337, 
                    logo_url = '', 
                    min_confirmations = 1.337, 
                    memo_support = null, 
                    explorer_txid = '', 
                    explorer_address = '', 
                    native_currency = '', ),
        )
        """

    def testPrivateDepositAddressGet200Response(self):
        """Test PrivateDepositAddressGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
