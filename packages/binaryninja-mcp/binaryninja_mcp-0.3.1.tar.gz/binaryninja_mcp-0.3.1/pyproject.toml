[project]
name = "binaryninja-mcp"
description = "The MCP server plugin for Binary Ninja, enables LLM integration by Model Context Protocol (MCP) through SSE or STDIO transport."
readme = "README.md"
authors = [
    { name = "ttimasdf", email = "opensource@rabit.pw" }
]

keywords = ["mcp", "automation", "binaryninja", "plugin", "llm", "gpt", "server", "client"]
license = { text = "Apache 2.0" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

requires-python = ">=3.10"
dependencies = [
    "anyio>=4.9.0",
    "hypercorn>=0.17.3",
    "mcp>=1.6.0",
    "trio>=0.29.0",
]

dynamic = ["version"]

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.3",
    "syrupy>=4.9.1",
]

[project.scripts]
binaryninja-mcp = "binaryninja_mcp.cli:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "regex"
path = "plugin.json"
pattern = '"version" *: *"(?P<version>[^"]+)"'

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true
