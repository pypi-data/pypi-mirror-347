# serializer version: 1
# name: test_disassembly[beleaf.elf.bndb-0x000008a1]
  '''
  
    int32_t main(int32_t argc, char** argv, char** envp)
  
  000008a1  push    rbp
  000008a2  mov     rbp, rsp
  000008a5  sub     rsp, 0xc0
  000008ac  mov     dword [rbp-0xb4], edi
  000008b2  mov     qword [rbp-0xc0], rsi
  000008b9  mov     rax, qword [fs:0x28]
  000008c2  mov     qword [rbp-0x8], rax
  000008c6  xor     eax, eax
  000008c8  lea     rdi, [rel data_a64]  {"Enter the flag\n>>> "}
  000008cf  mov     eax, 0x0
  000008d4  call    printf
  000008d9  lea     rax, [rbp-0x90]
  000008e0  mov     rsi, rax
  000008e3  lea     rdi, [rel data_a78]
  000008ea  mov     eax, 0x0
  000008ef  call    __isoc99_scanf
  000008f4  lea     rax, [rbp-0x90]
  000008fb  mov     rdi, rax
  000008fe  call    strlen
  00000903  mov     qword [rbp-0xa0], rax
  0000090a  cmp     qword [rbp-0xa0], 0x20
  00000912  ja      0x92a
  
  00000914  lea     rdi, [rel data_a7b]  {"Incorrect!"}
  0000091b  call    puts
  00000920  mov     edi, 0x1
  00000925  call    exit
  { Does not return }
  
  0000092a  mov     qword [rbp-0xa8], 0x0
  00000935  jmp     0x99d
  
  00000937  lea     rdx, [rbp-0x90]
  0000093e  mov     rax, qword [rbp-0xa8]
  00000945  add     rax, rdx
  00000948  movzx   eax, byte [rax]
  0000094b  movsx   eax, al
  0000094e  mov     edi, eax
  00000950  call    sub_7fa
  00000955  mov     qword [rbp-0x98], rax
  0000095c  mov     rax, qword [rbp-0xa8]
  00000963  lea     rdx, [rax*8]
  0000096b  lea     rax, [rel data_2014e0]
  00000972  mov     rax, qword [rdx+rax]
  00000976  cmp     qword [rbp-0x98], rax
  0000097d  je      0x995
  
  0000097f  lea     rdi, [rel data_a7b]  {"Incorrect!"}
  00000986  call    puts
  0000098b  mov     edi, 0x1
  00000990  call    exit
  { Does not return }
  
  00000995  add     qword [rbp-0xa8], 0x1
  
  0000099d  mov     rax, qword [rbp-0xa8]
  000009a4  cmp     rax, qword [rbp-0xa0]
  000009ab  jb      0x937
  
  000009ad  lea     rdi, [rel data_a86]  {"Correct!"}
  000009b4  call    puts
  000009b9  mov     eax, 0x0
  000009be  mov     rcx, qword [rbp-0x8]
  000009c2  xor     rcx, qword [fs:0x28]
  000009cb  je      0x9d2
  
  000009cd  call    __stack_chk_fail
  { Does not return }
  
  000009d2  leave   
  000009d3  retn    
  
  '''
# ---
# name: test_disassembly[beleaf.elf.bndb-0xINVALID]
  "Error executing tool disassembly: No symbol found with name/address '0xINVALID'"
# ---
# name: test_disassembly[nonexist.elf-0x000008a1]
  "Error executing tool disassembly: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_disassembly[nonexist.elf-0xINVALID]
  "Error executing tool disassembly: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_disassembly_with_length[beleaf.elf.bndb-0x000008a1]
  '''
  0x8a1: push    rbp
  0x8a2: mov     rbp, rsp
  0x8a5: sub     rsp, 0xc0
  0x8ac: mov     dword [rbp-0xb4], edi
  '''
# ---
# name: test_disassembly_with_length[beleaf.elf.bndb-0xINVALID]
  "Error executing tool disassembly: No symbol found with name/address '0xINVALID'"
# ---
# name: test_disassembly_with_length[nonexist.elf-0x000008a1]
  "Error executing tool disassembly: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_disassembly_with_length[nonexist.elf-0xINVALID]
  "Error executing tool disassembly: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_data_variables[beleaf.elf.bndb]
  '{"address": "0x0", "type": "struct Elf64_Header", "auto_discovered": true, "symbol": {"name": "__elf_header", "type": "SymbolType.DataSymbol", "short_name": "__elf_header"}}'
# ---
# name: test_get_data_variables[nonexist.elf]
  "Error executing tool get_data_variables: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_exports[beleaf.elf.bndb]
  '{"name": "_start", "address": "0x6f0", "type": "SymbolType.FunctionSymbol", "ordinal": 0}'
# ---
# name: test_get_exports[nonexist.elf]
  "Error executing tool get_exports: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_functions[beleaf.elf.bndb]
  '{"name": "_init", "start": "0x650", "symbol": {"name": "_init", "type": "SymbolType.FunctionSymbol", "short_name": "_init"}, "parameter_count": 0, "return_type": null, "has_prototype": false, "is_imported": false, "is_thunk": false, "basic_block_count": 3}'
# ---
# name: test_get_functions[nonexist.elf]
  "Error executing tool get_functions: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_imports[beleaf.elf.bndb]
  "{'BNINTERNALNAMESPACE': [{'name': 'puts', 'address': '0x680', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}, {'name': 'strlen', 'address': '0x690', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}, {'name': '__stack_chk_fail', 'address': '0x6a0', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}, {'name': 'printf', 'address': '0x6b0', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}, {'name': '__isoc99_scanf', 'address': '0x6c0', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}, {'name': 'exit', 'address': '0x6d0', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}, {'name': '__cxa_finalize', 'address': '0x6e0', 'type': 'SymbolType.ImportedFunctionSymbol', 'ordinal': 0}]}"
# ---
# name: test_get_imports[nonexist.elf]
  "Error executing tool get_imports: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_sections[beleaf.elf.bndb]
  '{"name": ".bss", "start": "0x2015e8", "end": "0x2015f0", "length": 8, "type": "NOBITS", "align": 1, "entry_size": 0, "linked_section": "", "info_section": "", "info_data": 0}'
# ---
# name: test_get_sections[nonexist.elf]
  "Error executing tool get_sections: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_segments[beleaf.elf.bndb]
  '{"start": "0x0", "end": "0xc00", "length": 3072, "data_offset": 0, "data_length": 3072, "data_end": 3072, "readable": true, "writable": false, "executable": true}'
# ---
# name: test_get_segments[nonexist.elf]
  "Error executing tool get_segments: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_strings[beleaf.elf.bndb]
  '{"value": "@8\\t@", "start": "0x34", "length": 8, "type": "StringType.Utf16String"}'
# ---
# name: test_get_strings[nonexist.elf]
  "Error executing tool get_strings: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_get_triage_summary[beleaf.elf.bndb]
  '{"file_metadata": {"filename": "tests/binary/beleaf.elf.bndb", "file_size": 2102904, "view_type": "ELF"}, "binary_info": {"platform": "linux-x86_64", "entry_point": "0x6f0", "base_address": "0x0", "end_address": "0x201678", "endianness": "LittleEndian", "address_size": 8, "architecture": "x86_64"}, "statistics": {"function_count": 25, "string_count": 30, "segment_count": 5, "section_count": 26}}'
# ---
# name: test_get_triage_summary[nonexist.elf]
  "Error executing tool get_triage_summary: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_high_level_il[beleaf.elf.bndb-0x000008a1]
  '''
  0x8ac: int32_t argc_1 = argc
  0x8b2: char** argv_1 = argv
  0x8b9: void* fsbase
  0x8b9: int64_t rax = *(fsbase + 0x28)
  0x8d4: printf("Enter the flag\n>>> ")
  0x8ef: void var_98
  0x8ef: __isoc99_scanf("%s", &var_98)
  0x8fe: uint64_t rax_3 = strlen(&var_98)
  0x912: if (rax_3 u<= 0x20)
  0x91b: puts("Incorrect!")
  0x925: exit(1)
  0x925: noreturn
  0x92a: int64_t i = 0
  0x9ab: while (i u< rax_3)
  0x97d: if (sub_7fa(*(i + &var_98)) != *((i << 3) + &data_2014e0))
  0x986: puts("Incorrect!")
  0x990: exit(1)
  0x990: noreturn
  0x995: i += 1
  0x9b4: puts("Correct!")
  0x9cb: if (rax == *(fsbase + 0x28))
  0x9d3: return 0
  0x9cd: __stack_chk_fail()
  0x9cd: noreturn
  
  '''
# ---
# name: test_high_level_il[beleaf.elf.bndb-0xINVALID]
  "Error executing tool high_level_il: No function found with name/address '0xINVALID'"
# ---
# name: test_high_level_il[nonexist.elf-0x000008a1]
  "Error executing tool high_level_il: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_high_level_il[nonexist.elf-0xINVALID]
  "Error executing tool high_level_il: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_list_filename
  'beleaf.elf.bndb'
# ---
# name: test_list_tools
  list([
    Tool(name='list_filename', description='List file names of all opened files', inputSchema={'properties': {}, 'title': 'list_filenameArguments', 'type': 'object'}),
    Tool(name='get_triage_summary', description='Get basic information as shown in BinaryNinja Triage view', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_triage_summaryArguments', 'type': 'object'}),
    Tool(name='get_imports', description='Get dictionary of imported symbols', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_importsArguments', 'type': 'object'}),
    Tool(name='get_exports', description='Get dictionary of exported symbols', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_exportsArguments', 'type': 'object'}),
    Tool(name='get_segments', description='Get list of memory segments', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_segmentsArguments', 'type': 'object'}),
    Tool(name='get_sections', description='Get list of binary sections', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_sectionsArguments', 'type': 'object'}),
    Tool(name='get_strings', description='Get list of strings found in the binary', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_stringsArguments', 'type': 'object'}),
    Tool(name='get_functions', description='Get list of functions', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_functionsArguments', 'type': 'object'}),
    Tool(name='get_data_variables', description='Get list of data variables', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'get_data_variablesArguments', 'type': 'object'}),
    Tool(name='rename_symbol', description='Rename a function or a data variable', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}, 'address_or_name': {'title': 'Address Or Name', 'type': 'string'}, 'new_name': {'title': 'New Name', 'type': 'string'}}, 'required': ['filename', 'address_or_name', 'new_name'], 'title': 'rename_symbolArguments', 'type': 'object'}),
    Tool(name='pseudo_c', description='Get pseudo C code of a specified function', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}, 'address_or_name': {'title': 'Address Or Name', 'type': 'string'}}, 'required': ['filename', 'address_or_name'], 'title': 'pseudo_cArguments', 'type': 'object'}),
    Tool(name='pseudo_rust', description='Get pseudo Rust code of a specified function', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}, 'address_or_name': {'title': 'Address Or Name', 'type': 'string'}}, 'required': ['filename', 'address_or_name'], 'title': 'pseudo_rustArguments', 'type': 'object'}),
    Tool(name='high_level_il', description='Get high level IL of a specified function', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}, 'address_or_name': {'title': 'Address Or Name', 'type': 'string'}}, 'required': ['filename', 'address_or_name'], 'title': 'high_level_ilArguments', 'type': 'object'}),
    Tool(name='medium_level_il', description='Get medium level IL of a specified function', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}, 'address_or_name': {'title': 'Address Or Name', 'type': 'string'}}, 'required': ['filename', 'address_or_name'], 'title': 'medium_level_ilArguments', 'type': 'object'}),
    Tool(name='disassembly', description='Get disassembly of a function or specified range', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}, 'address_or_name': {'title': 'Address Or Name', 'type': 'string'}, 'length': {'anyOf': [{'type': 'integer'}, {'type': 'null'}], 'default': None, 'title': 'Length'}}, 'required': ['filename', 'address_or_name'], 'title': 'disassemblyArguments', 'type': 'object'}),
    Tool(name='update_analysis_and_wait', description='Update analysis for the binary and wait for it to complete', inputSchema={'properties': {'filename': {'title': 'Filename', 'type': 'string'}}, 'required': ['filename'], 'title': 'update_analysis_and_waitArguments', 'type': 'object'}),
  ])
# ---
# name: test_medium_level_il[beleaf.elf.bndb-0x000008a1]
  '''
  0x8ac: argc_1 = argc
  0x8b2: argv_1 = argv
  0x8b9: rax = [fsbase + 0x28].q
  0x8c2: var_10 = rax
  0x8cf: rax_1 = 0
  0x8d4: 0x6b0("Enter the flag\n>>> ")
  0x8e0: rsi = &var_98
  0x8ea: rax_2 = 0
  0x8ef: 0x6c0("%s", rsi)
  0x8fb: rdi = &var_98
  0x8fe: rax_3 = 0x690(rdi)
  0x903: var_a8 = rax_3
  0x912: if (var_a8 u> 0x20) then 13 @ 0x92a else 15 @ 0x91b
  0x92a: i = 0
  0x935: goto 18 @ 0x99d
  0x91b: 0x680("Incorrect!")
  0x925: 0x6d0(1)
  0x925: noreturn
  0x99d: rax_11 = i
  0x9ab: if (rax_11 u< var_a8) then 20 @ 0x93e else 31 @ 0x9b4
  0x93e: rax_4 = i
  0x945: rax_5 = rax_4 + &var_98
  0x948: rax_6 = [rax_5].b
  0x94b: rax_7 = rax_6
  0x94e: rdi_1 = rax_7
  0x950: rax_8 = 0x7fa(rdi_1)
  0x955: var_a0_1 = rax_8
  0x95c: rax_9 = i
  0x963: rdx = rax_9 << 3
  0x972: rax_10 = [rdx + 0x2014e0].q
  0x97d: if (var_a0_1 == rax_10) then 36 @ 0x995 else 38 @ 0x986
  0x9b4: 0x680("Correct!")
  0x9b9: rax_12 = 0
  0x9be: rcx = var_10
  0x9c2: rcx_1 = rcx ^ [fsbase + 0x28].q
  0x9cb: if (rcx_1 == 0) then 41 @ 0x9d3 else 42 @ 0x9cd
  0x995: i = i + 1
  0x995: goto 18 @ 0x99d
  0x986: 0x680("Incorrect!")
  0x990: 0x6d0(1)
  0x990: noreturn
  0x9d3: return 0
  0x9cd: 0x6a0()
  0x9cd: noreturn
  
  '''
# ---
# name: test_medium_level_il[beleaf.elf.bndb-0xINVALID]
  "Error executing tool medium_level_il: No function found with name/address '0xINVALID'"
# ---
# name: test_medium_level_il[nonexist.elf-0x000008a1]
  "Error executing tool medium_level_il: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_medium_level_il[nonexist.elf-0xINVALID]
  "Error executing tool medium_level_il: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_pseudo_c[beleaf.elf.bndb-0x000008a1]
  '''
  
    int32_t main(int32_t argc, char** argv, char** envp)
  
  {
     int32_t argc_1 = argc;
     char** argv_1 = argv;
     void* fsbase;
     int64_t rax = *(fsbase + 0x28);
     printf("Enter the flag\n>>> ");
     void var_98;
     __isoc99_scanf("%s", &var_98);
     uint64_t rax_3 = strlen(&var_98);
     
     if (rax_3 <= 0x20)
     {
        puts("Incorrect!");
        exit(1);
        /* no return */
     }
     
     for (int64_t i = 0; i < rax_3; i += 1)
     {
        if (sub_7fa(*(i + &var_98)) != *((i << 3) + &data_2014e0))
        {
           puts("Incorrect!");
           exit(1);
           /* no return */
        }
     }
     
     puts("Correct!");
     
     if (rax == *(fsbase + 0x28))
        return 0;
     
     __stack_chk_fail();
     /* no return */
  }
  
  
  '''
# ---
# name: test_pseudo_c[beleaf.elf.bndb-0xINVALID]
  "Error executing tool pseudo_c: No function found with name/address '0xINVALID'"
# ---
# name: test_pseudo_c[nonexist.elf-0x000008a1]
  "Error executing tool pseudo_c: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_pseudo_c[nonexist.elf-0xINVALID]
  "Error executing tool pseudo_c: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_pseudo_rust[beleaf.elf.bndb-0x000008a1]
  '''
  
    fn main(argc: i32, argv: *mut *mut i8, envp: *mut *mut i8) -> i32
  
  {
     let argc_1: i32 = argc;
     let argv_1: *mut *mut i8 = argv;
     let fsbase: *mut c_void;
     let rax: i64 = *fsbase.byte_offset(0x28);
     printf("Enter the flag\n>>> ");
     let mut var_98: ();
     __isoc99_scanf("%s", &var_98);
     let rax_3: u64 = strlen(&var_98);
     
     if rax_3 <= 0x20 {
        puts("Incorrect!");
        exit(1);
        /* no return */
     }
     
     for i in 0..rax_3 {
        if sub_7fa(*(i + &var_98)) != *((i << 3) + &data_2014e0) {
           puts("Incorrect!");
           exit(1);
           /* no return */
        }
     }
     
     puts("Correct!");
     
     if rax == *fsbase.byte_offset(0x28) {
        return 0;
     }
     
     __stack_chk_fail();
     /* no return */
  }
  
  
  '''
# ---
# name: test_pseudo_rust[beleaf.elf.bndb-0xINVALID]
  "Error executing tool pseudo_rust: No function found with name/address '0xINVALID'"
# ---
# name: test_pseudo_rust[nonexist.elf-0x000008a1]
  "Error executing tool pseudo_rust: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_pseudo_rust[nonexist.elf-0xINVALID]
  "Error executing tool pseudo_rust: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_rename_symbol[beleaf.elf.bndb-0x000008a1]
  "Successfully renamed function at 0x8a1 from 'main' to 'test_renamed_function'"
# ---
# name: test_rename_symbol[beleaf.elf.bndb-0xINVALID]
  "Error executing tool rename_symbol: No function or data variable found with name/address '0xINVALID'"
# ---
# name: test_rename_symbol[nonexist.elf-0x000008a1]
  "Error executing tool rename_symbol: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
# name: test_rename_symbol[nonexist.elf-0xINVALID]
  "Error executing tool rename_symbol: 'filename not found: nonexist.elf, currently opened: beleaf.elf.bndb , beleaf.elf'"
# ---
