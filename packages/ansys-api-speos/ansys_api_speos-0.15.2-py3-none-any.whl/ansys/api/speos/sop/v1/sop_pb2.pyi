"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class SOPTemplate(google.protobuf.message.Message):
    """SOP: Surface Optical Properties
    Defines the behavior of light rays when they hit the surface of a body.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Mirror(google.protobuf.message.Message):
        """Perfect specular surface"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        REFLECTANCE_FIELD_NUMBER: builtins.int
        reflectance: builtins.float = ...
        """Reflectance, expected from 0. to 100. in %"""

        def __init__(self,
            *,
            reflectance : builtins.float = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["reflectance",b"reflectance"]) -> None: ...

    class OpticalPolished(google.protobuf.message.Message):
        """Transparent or perfectly polished material (glass, plastic)"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        def __init__(self,
            ) -> None: ...

    class Library(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        SOP_FILE_URI_FIELD_NUMBER: builtins.int
        sop_file_uri: typing.Text = ...
        """Surface optical properties file, *.scattering, *.bsdf, *.brdf, *.coated, ..."""

        def __init__(self,
            *,
            sop_file_uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["sop_file_uri",b"sop_file_uri"]) -> None: ...

    class Plugin(google.protobuf.message.Message):
        """Custom made plug-in"""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        PLUGIN_SOP_FILE_URI_FIELD_NUMBER: builtins.int
        PARAMETERS_FILE_URI_FIELD_NUMBER: builtins.int
        plugin_sop_file_uri: typing.Text = ...
        """*.sop plug-in"""

        parameters_file_uri: typing.Text = ...
        """parameters file needed for the plug-in"""

        def __init__(self,
            *,
            plugin_sop_file_uri : typing.Text = ...,
            parameters_file_uri : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["parameters_file_uri",b"parameters_file_uri","plugin_sop_file_uri",b"plugin_sop_file_uri"]) -> None: ...

    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    MIRROR_FIELD_NUMBER: builtins.int
    OPTICAL_POLISHED_FIELD_NUMBER: builtins.int
    LIBRARY_FIELD_NUMBER: builtins.int
    PLUGIN_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """SOPTemplate name"""

    description: typing.Text = ...
    """SOPTemplate description"""

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User defined metadata"""
        pass
    @property
    def mirror(self) -> global___SOPTemplate.Mirror:
        """Perfect specular surface"""
        pass
    @property
    def optical_polished(self) -> global___SOPTemplate.OpticalPolished:
        """Transparent or perfectly polished material (glass, plastic)"""
        pass
    @property
    def library(self) -> global___SOPTemplate.Library:
        """Based on surface optical properties file"""
        pass
    @property
    def plugin(self) -> global___SOPTemplate.Plugin:
        """Custom made plug-in"""
        pass
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        mirror : typing.Optional[global___SOPTemplate.Mirror] = ...,
        optical_polished : typing.Optional[global___SOPTemplate.OpticalPolished] = ...,
        library : typing.Optional[global___SOPTemplate.Library] = ...,
        plugin : typing.Optional[global___SOPTemplate.Plugin] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["library",b"library","mirror",b"mirror","optical_polished",b"optical_polished","plugin",b"plugin","type",b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","library",b"library","metadata",b"metadata","mirror",b"mirror","name",b"name","optical_polished",b"optical_polished","plugin",b"plugin","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["type",b"type"]) -> typing.Optional[typing_extensions.Literal["mirror","optical_polished","library","plugin"]]: ...
global___SOPTemplate = SOPTemplate

class Create_Request(google.protobuf.message.Message):
    """Request to create a SOPTemplate in SOPTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOP_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def sop_template(self) -> global___SOPTemplate:
        """SOPTemplate containing its basic characteristics"""
        pass
    def __init__(self,
        *,
        sop_template : typing.Optional[global___SOPTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sop_template",b"sop_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sop_template",b"sop_template"]) -> None: ...
global___Create_Request = Create_Request

class Create_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SOPTemplate created in SOPTemplatesManager"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Create_Response = Create_Response

class Read_Request(google.protobuf.message.Message):
    """Request to read a SOPTemplate in SOPTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SOPTemplate to be read"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Read_Request = Read_Request

class Read_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SOP_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def sop_template(self) -> global___SOPTemplate:
        """SOPTemplate corresponding to the guid given in Read_Request"""
        pass
    def __init__(self,
        *,
        sop_template : typing.Optional[global___SOPTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sop_template",b"sop_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["sop_template",b"sop_template"]) -> None: ...
global___Read_Response = Read_Response

class Update_Request(google.protobuf.message.Message):
    """Request to update a SOPTemplate in SOPTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    SOP_TEMPLATE_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SOPTemplate to be updated"""

    @property
    def sop_template(self) -> global___SOPTemplate:
        """SOPTemplate that will be used for the update"""
        pass
    def __init__(self,
        *,
        guid : typing.Text = ...,
        sop_template : typing.Optional[global___SOPTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["sop_template",b"sop_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid","sop_template",b"sop_template"]) -> None: ...
global___Update_Request = Update_Request

class Update_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Update_Response = Update_Response

class Delete_Request(google.protobuf.message.Message):
    """Request to delete a SOPTemplate in SOPTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SOPTemplate to be deleted"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Delete_Request = Delete_Request

class Delete_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Delete_Response = Delete_Response

class List_Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___List_Request = List_Request

class List_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUIDS_FIELD_NUMBER: builtins.int
    @property
    def guids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Guids of the SOPTemplates in SOPTemplatesManager"""
        pass
    def __init__(self,
        *,
        guids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guids",b"guids"]) -> None: ...
global___List_Response = List_Response
