"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class _EnumColorimetricStandard:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _EnumColorimetricStandardEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_EnumColorimetricStandard.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    CIE_1931: EnumColorimetricStandard.ValueType = ...  # 0
    """2 degrees CIE Standard Colorimetric Observer Data."""

    CIE_1964: EnumColorimetricStandard.ValueType = ...  # 1
    """10 degrees CIE Standard Colorimetric Observer Data."""

class EnumColorimetricStandard(_EnumColorimetricStandard, metaclass=_EnumColorimetricStandardEnumTypeWrapper):
    """Default Colorimetric Standard"""
    pass

CIE_1931: EnumColorimetricStandard.ValueType = ...  # 0
"""2 degrees CIE Standard Colorimetric Observer Data."""

CIE_1964: EnumColorimetricStandard.ValueType = ...  # 1
"""10 degrees CIE Standard Colorimetric Observer Data."""

global___EnumColorimetricStandard = EnumColorimetricStandard


class Weight(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MINIMUM_ENERGY_PERCENTAGE_FIELD_NUMBER: builtins.int
    minimum_energy_percentage: builtins.float = ...
    """The Minimum energy percentage parameter defines the minimum energy ratio to continue to propagate a ray with weight. 1 = 100%."""

    def __init__(self,
        *,
        minimum_energy_percentage : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["minimum_energy_percentage",b"minimum_energy_percentage"]) -> None: ...
global___Weight = Weight

class DirectMCSimulationTemplate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GEOM_DISTANCE_TOLERANCE_FIELD_NUMBER: builtins.int
    MAX_IMPACT_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    COLORIMETRIC_STANDARD_FIELD_NUMBER: builtins.int
    DISPERSION_FIELD_NUMBER: builtins.int
    FAST_TRANSMISSION_GATHERING_FIELD_NUMBER: builtins.int
    AMBIENT_MATERIAL_URI_FIELD_NUMBER: builtins.int
    geom_distance_tolerance: builtins.float = ...
    """Maximum distance in mm to consider two faces as tangent"""

    max_impact: builtins.int = ...
    """To define a value to determine the maximum number of ray impacts during propagation. When a ray has interacted N times with the geometry, the propagation of the ray stops."""

    @property
    def weight(self) -> global___Weight:
        """To activate Weight. The Weight represents the ray energy. In real life, a ray looses some energy (power) when it interacts with an object."""
        pass
    colorimetric_standard: global___EnumColorimetricStandard.ValueType = ...
    """To define the Colorimetric Standard"""

    dispersion: builtins.bool = ...
    """To activate the dispersion calculation."""

    fast_transmission_gathering: builtins.bool = ...
    """To accelerate the simulation by neglecting the light refraction that occurs when the light is being transmitted through a transparent surface."""

    ambient_material_uri: typing.Text = ...
    """To select an ambient material *.material"""

    def __init__(self,
        *,
        geom_distance_tolerance : builtins.float = ...,
        max_impact : builtins.int = ...,
        weight : typing.Optional[global___Weight] = ...,
        colorimetric_standard : global___EnumColorimetricStandard.ValueType = ...,
        dispersion : builtins.bool = ...,
        fast_transmission_gathering : builtins.bool = ...,
        ambient_material_uri : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["weight",b"weight"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ambient_material_uri",b"ambient_material_uri","colorimetric_standard",b"colorimetric_standard","dispersion",b"dispersion","fast_transmission_gathering",b"fast_transmission_gathering","geom_distance_tolerance",b"geom_distance_tolerance","max_impact",b"max_impact","weight",b"weight"]) -> None: ...
global___DirectMCSimulationTemplate = DirectMCSimulationTemplate

class InverseMCSimulationTemplate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GEOM_DISTANCE_TOLERANCE_FIELD_NUMBER: builtins.int
    MAX_IMPACT_FIELD_NUMBER: builtins.int
    WEIGHT_FIELD_NUMBER: builtins.int
    COLORIMETRIC_STANDARD_FIELD_NUMBER: builtins.int
    DISPERSION_FIELD_NUMBER: builtins.int
    SPLITTING_FIELD_NUMBER: builtins.int
    NUMBER_OF_GATHERING_RAYS_PER_SOURCE_FIELD_NUMBER: builtins.int
    MAXIMUM_GATHERING_ERROR_FIELD_NUMBER: builtins.int
    MAXIMUM_GATHERING_ERROR_PERCENTAGE_FIELD_NUMBER: builtins.int
    FAST_TRANSMISSION_GATHERING_FIELD_NUMBER: builtins.int
    AMBIENT_MATERIAL_URI_FIELD_NUMBER: builtins.int
    geom_distance_tolerance: builtins.float = ...
    """Maximum distance in mm to consider two faces as tangent."""

    max_impact: builtins.int = ...
    """To define a value to determine the maximum number of ray impacts during propagation. When a ray has interacted N times with the geometry, the propagation of the ray stops."""

    @property
    def weight(self) -> global___Weight:
        """To activate Weight. The Weight represents the ray energy. In real life, a ray looses some energy (power) when it interacts with an object."""
        pass
    colorimetric_standard: global___EnumColorimetricStandard.ValueType = ...
    """To define the Colorimetric Standard"""

    dispersion: builtins.bool = ...
    """To activate the dispersion calculation."""

    splitting: builtins.bool = ...
    """To split each propagated ray into several paths at their first impact after leaving the observer point."""

    number_of_gathering_rays_per_source: builtins.int = ...
    """This number pilots the number of shadow rays to target at each source."""

    maximum_gathering_error: builtins.int = ...
    """Deprecated - Better use maximum_gathering_error_percentage."""

    maximum_gathering_error_percentage: builtins.float = ...
    """This value defines the level below which a source can be neglected. 0, the default value means that no approximation will be done."""

    fast_transmission_gathering: builtins.bool = ...
    """To accelerate the simulation by neglecting the light refraction that occurs when the light is being transmitted through a transparent surface."""

    ambient_material_uri: typing.Text = ...
    """To select an ambient material *.material"""

    def __init__(self,
        *,
        geom_distance_tolerance : builtins.float = ...,
        max_impact : builtins.int = ...,
        weight : typing.Optional[global___Weight] = ...,
        colorimetric_standard : global___EnumColorimetricStandard.ValueType = ...,
        dispersion : builtins.bool = ...,
        splitting : builtins.bool = ...,
        number_of_gathering_rays_per_source : builtins.int = ...,
        maximum_gathering_error : builtins.int = ...,
        maximum_gathering_error_percentage : builtins.float = ...,
        fast_transmission_gathering : builtins.bool = ...,
        ambient_material_uri : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["weight",b"weight"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ambient_material_uri",b"ambient_material_uri","colorimetric_standard",b"colorimetric_standard","dispersion",b"dispersion","fast_transmission_gathering",b"fast_transmission_gathering","geom_distance_tolerance",b"geom_distance_tolerance","max_impact",b"max_impact","maximum_gathering_error",b"maximum_gathering_error","maximum_gathering_error_percentage",b"maximum_gathering_error_percentage","number_of_gathering_rays_per_source",b"number_of_gathering_rays_per_source","splitting",b"splitting","weight",b"weight"]) -> None: ...
global___InverseMCSimulationTemplate = InverseMCSimulationTemplate

class SimulationTemplate(google.protobuf.message.Message):
    """Simulation template with its basic characteristics"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class Interactive(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        GEOM_DISTANCE_TOLERANCE_FIELD_NUMBER: builtins.int
        MAX_IMPACT_FIELD_NUMBER: builtins.int
        WEIGHT_FIELD_NUMBER: builtins.int
        COLORIMETRIC_STANDARD_FIELD_NUMBER: builtins.int
        AMBIENT_MATERIAL_URI_FIELD_NUMBER: builtins.int
        geom_distance_tolerance: builtins.float = ...
        """Maximum distance in mm to consider two faces as tangent."""

        max_impact: builtins.int = ...
        """Defines a value to determine the maximum number of ray impacts during propagation. When a ray has interacted N times with the geometry, the propagation of the ray stops."""

        @property
        def weight(self) -> global___Weight:
            """Activates Weight. Highly recommended to fill"""
            pass
        colorimetric_standard: global___EnumColorimetricStandard.ValueType = ...
        """Default Colorimetric Standard"""

        ambient_material_uri: typing.Text = ...
        """To define the environment in which the light will propagate (water, fog, smoke etc.). It is expressed in a .material file"""

        def __init__(self,
            *,
            geom_distance_tolerance : builtins.float = ...,
            max_impact : builtins.int = ...,
            weight : typing.Optional[global___Weight] = ...,
            colorimetric_standard : global___EnumColorimetricStandard.ValueType = ...,
            ambient_material_uri : typing.Text = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["weight",b"weight"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["ambient_material_uri",b"ambient_material_uri","colorimetric_standard",b"colorimetric_standard","geom_distance_tolerance",b"geom_distance_tolerance","max_impact",b"max_impact","weight",b"weight"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    DIRECT_MC_SIMULATION_TEMPLATE_FIELD_NUMBER: builtins.int
    INVERSE_MC_SIMULATION_TEMPLATE_FIELD_NUMBER: builtins.int
    INTERACTIVE_SIMULATION_TEMPLATE_FIELD_NUMBER: builtins.int
    name: typing.Text = ...
    """Simulation name"""

    description: typing.Text = ...
    """Simulation description"""

    @property
    def metadata(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """User defined metadata"""
        pass
    @property
    def direct_mc_simulation_template(self) -> global___DirectMCSimulationTemplate: ...
    @property
    def inverse_mc_simulation_template(self) -> global___InverseMCSimulationTemplate: ...
    @property
    def interactive_simulation_template(self) -> global___SimulationTemplate.Interactive: ...
    def __init__(self,
        *,
        name : typing.Text = ...,
        description : typing.Text = ...,
        metadata : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        direct_mc_simulation_template : typing.Optional[global___DirectMCSimulationTemplate] = ...,
        inverse_mc_simulation_template : typing.Optional[global___InverseMCSimulationTemplate] = ...,
        interactive_simulation_template : typing.Optional[global___SimulationTemplate.Interactive] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["direct_mc_simulation_template",b"direct_mc_simulation_template","interactive_simulation_template",b"interactive_simulation_template","inverse_mc_simulation_template",b"inverse_mc_simulation_template","simulation_template",b"simulation_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["description",b"description","direct_mc_simulation_template",b"direct_mc_simulation_template","interactive_simulation_template",b"interactive_simulation_template","inverse_mc_simulation_template",b"inverse_mc_simulation_template","metadata",b"metadata","name",b"name","simulation_template",b"simulation_template"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["simulation_template",b"simulation_template"]) -> typing.Optional[typing_extensions.Literal["direct_mc_simulation_template","inverse_mc_simulation_template","interactive_simulation_template"]]: ...
global___SimulationTemplate = SimulationTemplate

class Create_Request(google.protobuf.message.Message):
    """Request to create a SimulationTemplate in SimulationTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIMULATION_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def simulation_template(self) -> global___SimulationTemplate:
        """SimulationTemplate containing its basic characteristics"""
        pass
    def __init__(self,
        *,
        simulation_template : typing.Optional[global___SimulationTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["simulation_template",b"simulation_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["simulation_template",b"simulation_template"]) -> None: ...
global___Create_Request = Create_Request

class Create_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SimulationTemplate created in SimulationTemplatesManager"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Create_Response = Create_Response

class Read_Request(google.protobuf.message.Message):
    """Request to read a SimulationTemplate in SimulationTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SimulationTemplate to be read"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Read_Request = Read_Request

class Read_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIMULATION_TEMPLATE_FIELD_NUMBER: builtins.int
    @property
    def simulation_template(self) -> global___SimulationTemplate:
        """SimulationTemplate corresponding to the guid given in Read_Request"""
        pass
    def __init__(self,
        *,
        simulation_template : typing.Optional[global___SimulationTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["simulation_template",b"simulation_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["simulation_template",b"simulation_template"]) -> None: ...
global___Read_Response = Read_Response

class Update_Request(google.protobuf.message.Message):
    """Request to update a SimulationTemplate in SimulationTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    SIMULATION_TEMPLATE_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SimulationTemplate to be updated"""

    @property
    def simulation_template(self) -> global___SimulationTemplate:
        """SimulationTemplate that will be used for the update"""
        pass
    def __init__(self,
        *,
        guid : typing.Text = ...,
        simulation_template : typing.Optional[global___SimulationTemplate] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["simulation_template",b"simulation_template"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid","simulation_template",b"simulation_template"]) -> None: ...
global___Update_Request = Update_Request

class Update_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Update_Response = Update_Response

class Delete_Request(google.protobuf.message.Message):
    """Request to delete a SimulationTemplate in SimulationTemplatesManager"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUID_FIELD_NUMBER: builtins.int
    guid: typing.Text = ...
    """Guid of the SimulationTemplate to be deleted"""

    def __init__(self,
        *,
        guid : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guid",b"guid"]) -> None: ...
global___Delete_Request = Delete_Request

class Delete_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___Delete_Response = Delete_Response

class List_Request(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    def __init__(self,
        ) -> None: ...
global___List_Request = List_Request

class List_Response(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    GUIDS_FIELD_NUMBER: builtins.int
    @property
    def guids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Guids of the SimulationTemplates in SimulationTemplatesManager"""
        pass
    def __init__(self,
        *,
        guids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["guids",b"guids"]) -> None: ...
global___List_Response = List_Response
