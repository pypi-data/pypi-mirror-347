{
  "python": {
    "exec_statement": "DYNAMIC_EXECUTION",
    "call": "EVAL_LIKE_CALL",
    "import_statement": "IMPORT",
    "import_from_statement": "IMPORT",
    "try_statement": "EXCEPTION_HANDLING",
    "except_clause": "EXCEPTION_HANDLING",
    "finally_clause": "EXCEPTION_HANDLING",
    "lambda": "ANONYMOUS_FUNCTION",
    "decorator": "DECORATOR",
    "yield": "GENERATOR_OPERATION",
    "string": "STRING",
    "concatenated_string": "STRING",
    "integer": "NUMERIC",
    "float": "NUMERIC",
    "true": "BOOLEAN",
    "false": "BOOLEAN",
    "none": "NULL",
    "list": "LIST",
    "tuple": "TUPLE",
    "set": "SET",
    "dictionary": "DICT",
    "call": "F_CALL",
    "attribute": "MEMBER_ACCESS",
    "subscript": "INDEX_ACCESS",
    "assignment": "ASSIGNMENT",
    "augmented_assignment": "AUGMENTED_ASSIGNMENT",
    "comparison_operator": "BINARY_OPERATION",
    "boolean_operator": "BINARY_OPERATION",
    "not_operator": "UNARY_OPERATION",
    "conditional_expression": "TERNARY_EXPRESSION",
    "await": "ASYNC_OPERATION",
    "if_statement": "IF_STATEMENT",
    "for_statement": "FOR_LOOP",
    "for_in_statement": "FOR_IN_LOOP",
    "while_statement": "WHILE_LOOP",
    "break_statement": "BREAK_STATEMENT",
    "continue_statement": "CONTINUE_STATEMENT",
    "return_statement": "RETURN_STATEMENT",
    "raise_statement": "THROW_STATEMENT",
    "pass_statement": "PASS_STATEMENT",
    "continue": "CONTINUE_STATEMENT",
    "break": "BREAK_STATEMENT",
    "return": "RETURN_STATEMENT",
    "module": "ROOT",
    "block": "BLOCK",
    "function_definition": "F_DEF",
    "method_definition": "F_DEF",
    "class_definition": "CLASS_DEFINITION",
    "global_statement": "SCOPE_MODIFIER",
    "nonlocal_statement": "SCOPE_MODIFIER",
    "expression_statement": "EXP",
    "pair": "KEY_VALUE_PAIR",
    "list_splat": "SPREAD_SYNTAX",
    "dictionary_splat": "SPREAD_SYNTAX",
    "parenthesized_expression": "PARENTHESIZED_EXPRESSION",
    "type_annotation": "TYPE_ANNOTATION",
    "delete_statement": "DELETE"
  },
  "javascript": {
    "call_expression": "EVAL_LIKE_CALL",
    "import_statement": "IMPORT",
    "import_expression": "IMPORT",
    "try_statement": "EXCEPTION_HANDLING",
    "catch_clause": "EXCEPTION_HANDLING",
    "finally_clause": "EXCEPTION_HANDLING",
    "debugger_statement": "DEBUGGER_STATEMENT",
    "arrow_function": "ANONYMOUS_FUNCTION",
    "yield_expression": "GENERATOR_OPERATION",
    "string": "STRING",
    "template_string": "STRING",
    "regex": "REGEX",
    "number": "NUMERIC",
    "true": "BOOLEAN",
    "false": "BOOLEAN",
    "null": "NULL",
    "array": "ARRAY",
    "object": "OBJECT",
    "call_expression": "F_CALL",
    "new_expression": "CONSTRUCTOR_CALL",
    "member_expression": "MEMBER_ACCESS",
    "subscript_expression": "INDEX_ACCESS",
    "assignment_expression": "ASSIGNMENT",
    "augmented_assignment_expression": "AUGMENTED_ASSIGNMENT",
    "binary_expression": "BINARY_OPERATION",
    "unary_expression": "UNARY_OPERATION",
    "conditional_expression": "TERNARY_EXPRESSION",
    "await_expression": "ASYNC_OPERATION",
    "if_statement": "IF_STATEMENT",
    "for_statement": "FOR_LOOP",
    "for_in_statement": "FOR_IN_LOOP",
    "while_statement": "WHILE_LOOP",
    "do_statement": "DO_WHILE_LOOP",
    "switch_statement": "MATCH_SWITCH",
    "break_statement": "BREAK_STATEMENT",
    "continue_statement": "CONTINUE_STATEMENT",
    "return_statement": "RETURN_STATEMENT",
    "throw_statement": "THROW_STATEMENT",
    "empty_statement": "PASS_STATEMENT",
    "continue": "CONTINUE_STATEMENT",
    "break": "BREAK_STATEMENT",
    "return": "RETURN_STATEMENT",
    "program": "ROOT",
    "block": "BLOCK",
    "function_declaration": "F_DEF",
    "generator_function_declaration": "F_DEF",
    "method_definition": "F_DEF",
    "class_declaration": "CLASS_DEFINITION",
    "abstract_class_declaration": "CLASS_DEFINITION",
    "enum_declaration": "ENUM_DEFINITION",
    "interface_declaration": "INTERFACE_DEFINITION",
    "type_alias_declaration": "TYPE_ALIAS_DEFINITION",
    "variable_declaration": "VARIABLE_DECLARATION",
    "lexical_declaration": "VARIABLE_DECLARATION",
    "expression_statement": "EXP",
    "pair": "KEY_VALUE_PAIR",
    "spread_element": "SPREAD_SYNTAX",
    "parenthesized_expression": "PARENTHESIZED_EXPRESSION",
    "type_annotation": "TYPE_ANNOTATION",
    "non_null_expression": "TYPE_ASSERTION",
    "satisfies_expression": "TYPE_CAST_UNSAFE"
  },
  "typescript": {
    "call_expression": "EVAL_LIKE_CALL",
    "import_statement": "IMPORT",
    "import_expression": "IMPORT",
    "try_statement": "EXCEPTION_HANDLING",
    "catch_clause": "EXCEPTION_HANDLING",
    "finally_clause": "EXCEPTION_HANDLING",
    "debugger_statement": "DEBUGGER_STATEMENT",
    "arrow_function": "ANONYMOUS_FUNCTION",
    "yield_expression": "GENERATOR_OPERATION",
    "string": "STRING",
    "template_string": "STRING",
    "regex": "REGEX",
    "number": "NUMERIC",
    "true": "BOOLEAN",
    "false": "BOOLEAN",
    "null": "NULL",
    "array": "ARRAY",
    "object": "OBJECT",
    "call_expression": "F_CALL",
    "new_expression": "CONSTRUCTOR_CALL",
    "member_expression": "MEMBER_ACCESS",
    "subscript_expression": "INDEX_ACCESS",
    "assignment_expression": "ASSIGNMENT",
    "augmented_assignment_expression": "AUGMENTED_ASSIGNMENT",
    "binary_expression": "BINARY_OPERATION",
    "unary_expression": "UNARY_OPERATION",
    "conditional_expression": "TERNARY_EXPRESSION",
    "await_expression": "ASYNC_OPERATION",
    "if_statement": "IF_STATEMENT",
    "for_statement": "FOR_LOOP",
    "for_in_statement": "FOR_IN_LOOP",
    "while_statement": "WHILE_LOOP",
    "do_statement": "DO_WHILE_LOOP",
    "switch_statement": "MATCH_SWITCH",
    "break_statement": "BREAK_STATEMENT",
    "continue_statement": "CONTINUE_STATEMENT",
    "return_statement": "RETURN_STATEMENT",
    "throw_statement": "THROW_STATEMENT",
    "empty_statement": "PASS_STATEMENT",
    "continue": "CONTINUE_STATEMENT",
    "break": "BREAK_STATEMENT",
    "return": "RETURN_STATEMENT",
    "program": "ROOT",
    "block": "BLOCK",
    "function_declaration": "F_DEF",
    "generator_function_declaration": "F_DEF",
    "method_definition": "F_DEF",
    "class_declaration": "CLASS_DEFINITION",
    "abstract_class_declaration": "CLASS_DEFINITION",
    "enum_declaration": "ENUM_DEFINITION",
    "interface_declaration": "INTERFACE_DEFINITION",
    "type_alias_declaration": "TYPE_ALIAS_DEFINITION",
    "variable_declaration": "VARIABLE_DECLARATION",
    "lexical_declaration": "VARIABLE_DECLARATION",
    "expression_statement": "EXP",
    "pair": "KEY_VALUE_PAIR",
    "spread_element": "SPREAD_SYNTAX",
    "parenthesized_expression": "PARENTHESIZED_EXPRESSION",
    "type_annotation": "TYPE_ANNOTATION",
    "non_null_expression": "TYPE_ASSERTION",
    "satisfies_expression": "TYPE_CAST_UNSAFE"
  },
  "rust": {
    "call_expression": "EVAL_LIKE_CALL",
    "use_declaration": "IMPORT",
    "extern_crate_declaration": "IMPORT",
    "mod_item": "IMPORT",
    "unsafe_block": "UNSAFE_OPERATION",
    "foreign_mod_item": "UNSAFE_OPERATION",
    "pointer_type": "UNSAFE_OPERATION",
    "raw_pointer_type": "UNSAFE_OPERATION",
    "as_expression": "TYPE_CAST_UNSAFE",
    "try_expression": "EXCEPTION_HANDLING",
    "string_literal": "STRING",
    "raw_string_literal": "STRING",
    "char_literal": "CHAR",
    "int_literal": "NUMERIC",
    "float_literal": "NUMERIC",
    "boolean_literal": "BOOLEAN",
    "array_expression": "ARRAY",
    "tuple_expression": "TUPLE",
    "struct_expression": "STRUCT",
    "call_expression": "F_CALL",
    "macro_invocation": "MACRO_CALL",
    "field_expression": "MEMBER_ACCESS",
    "index_expression": "INDEX_ACCESS",
    "assignment_expression": "ASSIGNMENT",
    "compound_assignment_expr": "AUGMENTED_ASSIGNMENT",
    "binary_expression": "BINARY_OPERATION",
    "unary_expression": "UNARY_OPERATION",
    "if_expression": "TERNARY_EXPRESSION",
    "await_expression": "ASYNC_OPERATION",
    "if_expression": "IF_STATEMENT",
    "for_expression": "FOR_LOOP",
    "while_expression": "WHILE_LOOP",
    "loop_expression": "INFINITE_LOOP",
    "match_expression": "MATCH_SWITCH",
    "break_expression": "BREAK_STATEMENT",
    "continue_expression": "CONTINUE_STATEMENT",
    "return_expression": "RETURN_STATEMENT",
    "source_file": "ROOT",
    "block": "BLOCK",
    "statement_block": "BLOCK",
    "function_item": "F_DEF",
    "struct_item": "STRUCT_DEFINITION",
    "enum_item": "ENUM_DEFINITION",
    "impl_item": "IMPLEMENTATION_BLOCK",
    "trait_item": "TRAIT_DEFINITION",
    "type_item": "TYPE_ALIAS_DEFINITION",
    "let_declaration": "VARIABLE_DECLARATION",
    "expression_statement": "EXP",
    "parenthesized_expression": "PARENTHESIZED_EXPRESSION",
    "type_annotation": "TYPE_ANNOTATION"
  }
}