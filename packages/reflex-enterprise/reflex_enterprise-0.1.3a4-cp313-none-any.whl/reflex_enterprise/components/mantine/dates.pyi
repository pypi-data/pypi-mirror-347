"""Stub file for reflex_enterprise/components/mantine/dates.py"""

# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from typing import Any, Callable, Literal, Mapping, Optional, Sequence, overload

import reflex as rx
from reflex.components.component import Component
from reflex.components.core.breakpoints import Breakpoints
from reflex.event import EventType
from reflex.vars.base import Var

from reflex_enterprise.components.component import ComponentEnterprise

from .base import MantineDescriptionProps, MantineLeftSection, MantineRightSection

MANTINE_DATES_PACKAGE = "@mantine/dates"
MANTINE_DATES_VERSION = "8.0.0"

class MantineDates(ComponentEnterprise):
    def add_imports(self): ...
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "MantineDates":
        """Create the Reflex Enterprise component."""
        ...

class CalendarEvents:
    on_date_change: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_level_change: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_month_select: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_next_decade: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_next_month: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_next_year: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_previous_decade: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_previous_month: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_previous_year: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_year_control_mouse_enter: rx.EventHandler[rx.event.passthrough_event_spec(str)]
    on_year_select: rx.EventHandler[rx.event.passthrough_event_spec(str)]

class SharedCalendarProps:
    aria_labels: rx.Var[dict[str, str]]
    columns_to_scroll: rx.Var[int]
    date: rx.Var[str]
    decade_label_format: rx.Var[str]
    default_date: rx.Var[str]
    default_level: rx.Var[Literal["decade", "year", "month"]]
    first_day_of_week: rx.Var[int]
    get_day_aria_label: rx.Var[Callable]
    get_day_props: rx.Var[Callable]
    get_month_control_props: rx.Var[Callable]
    get_year_control_props: rx.Var[Callable]
    hide_outside_dates: rx.Var[bool]
    hide_weekdays: rx.Var[bool]
    highlight_today: rx.Var[bool]
    level: rx.Var[Literal["decade", "year", "month"]]
    locale: rx.Var[str]
    max_date: rx.Var[str]
    max_level: rx.Var[Literal["decade", "year", "month"]]
    min_date: rx.Var[str]
    min_level: rx.Var[Literal["decade", "year", "month"]]
    month_label_format: rx.Var[str]
    month_format: rx.Var[str]
    next_icon: rx.Var[Component]
    next_label: rx.Var[str]
    number_of_columns: rx.Var[int]
    previous_icon: rx.Var[Component]
    previous_label: rx.Var[str]
    render_day: rx.Var[Callable]
    size: rx.Var[Literal["xs", "sm", "md", "lg", "xl"]]
    weekday_format: rx.Var[str]
    weekend_days: rx.Var[list[int]]
    with_cell_spacing: rx.Var[bool]
    with_week_numbers: rx.Var[bool]
    year_label_format: rx.Var[str]
    year_list_format: rx.Var[str]

class Calendar(SharedCalendarProps, CalendarEvents, MantineDates):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        has_next_level: Var[bool] | bool | None = None,
        static: Var[bool] | bool | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_month_control_mouse_enter: Optional[EventType[()] | EventType[str]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "Calendar":
        """Create the Reflex Enterprise component."""
        ...

class DateTimePicker(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        allow_deselect: Var[bool] | bool | None = None,
        allow_single_day_range: Var[bool] | bool | None = None,
        default_date: Var[str] | str | None = None,
        decade_label_format: Var[str] | str | None = None,
        first_day_of_week: Var[int] | int | None = None,
        get_day_props: Callable | Var[Callable] | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "DateTimePicker":
        """Create the Reflex Enterprise component."""
        ...

class DatePicker(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        type: Literal["default", "multiple", "range"]
        | Var[Literal["default", "multiple", "range"]]
        | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "DatePicker":
        """Create the Reflex Enterprise component."""
        ...

class DatePickerInput(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        type: Literal["default", "multiple", "range"]
        | Var[Literal["default", "multiple", "range"]]
        | None = None,
        close_on_change: Var[bool] | bool | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "DatePickerInput":
        """Create the Reflex Enterprise component."""
        ...

class DateInput(
    MantineDates, MantineDescriptionProps, MantineLeftSection, MantineRightSection
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        close_on_change: Var[bool] | bool | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "DateInput":
        """Create the Reflex Enterprise component."""
        ...

class MonthPicker(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        default_date: Var[str] | str | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "MonthPicker":
        """Create the Reflex Enterprise component."""
        ...

class MonthPickerInput(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        default_date: Var[str] | str | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "MonthPickerInput":
        """Create the Reflex Enterprise component."""
        ...

class YearPicker(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        default_date: Var[str] | str | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "YearPicker":
        """Create the Reflex Enterprise component."""
        ...

class YearPickerInput(
    MantineDates,
    SharedCalendarProps,
    MantineDescriptionProps,
    MantineLeftSection,
    MantineRightSection,
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        default_date: Var[str] | str | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "YearPickerInput":
        """Create the Reflex Enterprise component."""
        ...

class TimeInput(
    MantineDates, MantineDescriptionProps, MantineLeftSection, MantineRightSection
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "TimeInput":
        """Create the Reflex Enterprise component."""
        ...

class TimePicker(
    MantineDates, MantineDescriptionProps, MantineLeftSection, MantineRightSection
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        date: Var[str] | str | None = None,
        default_date: Var[str] | str | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "TimePicker":
        """Create the Reflex Enterprise component."""
        ...

class TimeGrid(
    MantineDates, MantineDescriptionProps, MantineLeftSection, MantineRightSection
):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        data: Var[list[str]] | list[str] | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "TimeGrid":
        """Create the Reflex Enterprise component."""
        ...

class TimeValue(MantineDates):
    @overload
    @classmethod
    def create(  # type: ignore
        cls,
        *children,
        am_pm_labels: Var[dict[Literal["am", "pm"], str]]
        | dict[Literal["am", "pm"], str]
        | None = None,
        format: Literal["12h", "24h"] | Var[Literal["12h", "24h"]] | None = None,
        value: Var[str] | str | None = None,
        with_seconds: Var[bool] | bool | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: Optional[EventType[()]] = None,
        on_click: Optional[EventType[()]] = None,
        on_context_menu: Optional[EventType[()]] = None,
        on_double_click: Optional[EventType[()]] = None,
        on_focus: Optional[EventType[()]] = None,
        on_mount: Optional[EventType[()]] = None,
        on_mouse_down: Optional[EventType[()]] = None,
        on_mouse_enter: Optional[EventType[()]] = None,
        on_mouse_leave: Optional[EventType[()]] = None,
        on_mouse_move: Optional[EventType[()]] = None,
        on_mouse_out: Optional[EventType[()]] = None,
        on_mouse_over: Optional[EventType[()]] = None,
        on_mouse_up: Optional[EventType[()]] = None,
        on_scroll: Optional[EventType[()]] = None,
        on_unmount: Optional[EventType[()]] = None,
        **props,
    ) -> "TimeValue":
        """Create the Reflex Enterprise component."""
        ...

class DatesNamespace(rx.ComponentNamespace):
    calendar = staticmethod(Calendar.create)
    date_time_picker = staticmethod(DateTimePicker.create)
    date_picker = staticmethod(DatePicker.create)
    date_picker_input = staticmethod(DatePickerInput.create)
    date_input = staticmethod(DateInput.create)
    month_picker = staticmethod(MonthPicker.create)
    month_picker_input = staticmethod(MonthPickerInput.create)
    year_picker = staticmethod(YearPicker.create)
    year_picker_input = staticmethod(YearPickerInput.create)
    time_input = staticmethod(TimeInput.create)
    time_picker = staticmethod(TimePicker.create)
    time_grid = staticmethod(TimeGrid.create)
    time_value = staticmethod(TimeValue.create)

dates = DatesNamespace()
