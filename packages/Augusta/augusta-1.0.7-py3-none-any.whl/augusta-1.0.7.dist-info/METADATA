Metadata-Version: 2.4
Name: Augusta
Version: 1.0.7
Summary: Python package for inference of the gene regulatory network and the boolean network using RNA-Seq data.
Home-page: https://github.com/JanaMus/Augusta
Author: Jana Musilova, Zdenek Vafek, Karel Sedlar
Author-email: musilovajana@vut.cz
License: MIT
Keywords: Computational biology,Bioinformatics,RNA-Seq,mutual information,database,Boolean network,Gene Regulatory network,SBML
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 4 - Beta
Requires-Python: >=3.7, <3.9
License-File: LICENSE
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: scikit-learn
Requires-Dist: bioinfokit
Requires-Dist: Bio<=1.79
Requires-Dist: docker
Requires-Dist: EcoNameTranslator
Requires-Dist: mygene
Requires-Dist: omnipath<1.0.8
Requires-Dist: urllib3>=1.26.0
Requires-Dist: requests>=2.24.0
Requires-Dist: bs4
Requires-Dist: lxml
Requires-Dist: html5lib
Requires-Dist: networkx==1.11
Requires-Dist: easydev
Requires-Dist: colormap
Requires-Dist: ccapi==0.1.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

Augusta
==========

Python package: From RNA-Seq to the Boolean Network through the Gene Regulatory Network

Documentation and tutorials are available at `augusta.readthedocs.io <https://augusta.readthedocs.io>`_.


News
----------------
Augusta is FAIR!

We are excited to announce that Augusta has undergone a successful FAIRification process. This process was part of the FAIR-IMPACT workshop, which aims to ensure that research software is Findable, Accessible, Interoperable, and Reusable (FAIR). You can read more about our FAIRification journey and how it enhances Augusta’s usability and collaboration potential in the FAIR-IMPACT Implementation Story: `FAIRification of Augusta, Research Software for Gene Regulatory Networks and Boolean Models Inference | FAIR-IMPACT <https://fair-impact.eu/implementation-adoption-stories/fairification-augusta-research-software-gene-regulatory-networks>`_.



Credits
----------------
The Augusta project is based on research detailed in the following paper. Please cite this paper when using or referencing our work:

Augusta: From RNA‐Seq to gene regulatory networks and Boolean models. Jana Musilova, Zdenek Vafek, Bhanwar Lal Puniya, Ralf Zimmer, Tomas Helikar, and Karel Sedlar. *Computational and Structural Biotechnology Journal*, 2024. DOI: `10.1016/j.csbj.2024.01.013 <https://doi.org/10.1016/j.csbj.2024.01.013>`_.


Contributors
----------------
- Jana Musilova, musilovaj22@gmail.com
- Zdenek Vafek
- Karel Sedlar, sedlar@vut.cz



Quick Guide
----------------

Dependencies:

- Python: version 3.7 or 3.8
- Docker

**Installation:**

We highly recomment installing and using Augusta in a virtual environment.

.. code-block::

   $ conda create -n Augusta_venv python=3.7 anaconda
   $ conda activate Augusta_venv
   

.. code-block::

   $ pip install Augusta


**Usage:** 

See `Inputs <https://augusta.readthedocs.io/en/latest/User%20guide.html>`_ for details about input files and variables.

.. code-block:: 

   $ python
   >>> import Augusta
   
GRN and BN inference using RNA-Seq:

.. code-block:: 

   >>> Augusta.RNASeq_to_BN(count_table_input = 'MyCT_file.csv', promoter_length = My_number, genbank_file_input = 'MyGB_file.gb', normalization_type = 'My_string', motifs_max_time = My_seconds)

GRN inference using RNA-Seq:

.. code-block:: 

   >>> Augusta.RNASeq_to_GRN(count_table_input = 'MyCT_file.csv', promoter_length = My_number, genbank_file_input = 'MyGB_file.gb', normalization_type = 'My_string', motifs_max_time = My_seconds)


BN inference using GRN:

.. code-block:: 

   >>> Augusta.GRN_to_BN(GRN_input = 'MyGRN_file.csv', promoter_length = My_number, genbank_file_input = 'MyGB_file.gb', add_dbs_info = 'My_string')


GRN refinement:

.. code-block:: 

   >>> Augusta.refineGRN(GRN_input = 'MyGRN_file.csv', genbank_file_input = 'MyGB_file.gb', count_table_input = 'MyCT_file.csv', promoter_length = My_number, motifs_max_time = My_seconds)

   



