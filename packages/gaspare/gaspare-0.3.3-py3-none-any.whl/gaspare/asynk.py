# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_async.ipynb.

# %% auto 0
__all__ = ['AsyncClient', 'AsyncChat']

# %% ../nbs/05_async.ipynb 2
from . import *

import os

from google import genai

from fastcore.all import *

# %% ../nbs/05_async.ipynb 3
def AsyncClient(model:str, # The model to be used by default (can be overridden when generating)
           sp:str='', # System prompt
           temp:float=0.6, # Default temperature
           text_only:bool=False, # Suppress multimodality even if the model allows for it
          ): 
    cli = genai.Client(api_key=os.environ['GEMINI_API_KEY'])
    c = cli.aio
    c.models.post_cbs = [c.models._call_tools]
    c.models.model, c.models.sp, c.models.temp, c.models.text_only = model, sp, temp, text_only
    return c


def AsyncChat(model:str, # The model to be used 
           sp:str='', # System prompt
           temp:float=0.6, # Default temperature
           text_only:bool=False, # Suppress multimodality even if the model allows for it
           cli:genai.client.AsyncClient|None=None, # Optional Client to be passed (to keep track of usage)
          ):
    c = AsyncClient(model, sp, temp, text_only) if cli is None else cli
    c.model, c.sp, c.temp, c.text_only = model, sp, temp, text_only
    chat = c.chats.create(model=c.model)
    chat.c.post_cbs.insert(0, chat._rec_res)
    return chat
