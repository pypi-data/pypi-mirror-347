{
  "version": 3,
  "sources": ["../../src/ts/index.ts"],
  "sourcesContent": ["type Host = {\n  name: string;\n  username: string;\n  password: string | null;\n  password_variable: string | null;\n  password_variable_key: string | null;\n  key_file: string;\n  os: string;\n  pool: string;\n  size: number;\n  queues: string[];\n  tags: string[];\n};\n\ntype Port = {\n  name: string;\n  host: Host;\n  host_name: string;\n  port: number;\n  tags: string[];\n};\ntype Config = {\n  hosts?: Host[];\n  ports?: Port[];\n  default_username?: string;\n  default_password_variable?: string;\n  default_password_variable_key?: string;\n  default_key_file?: string;\n  default_size?: number;\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const raw_config: string = window.__AIRFLOW_BALANCER_CONFIG__;\n  const root_node: HTMLDivElement = document.getElementById(\n    \"airflow-balancer-root\",\n  );\n  if (raw_config === undefined) {\n    root_node!.innerHTML = `\n        <div class=\"alert alert-danger\" role=\"alert\">\n            <strong>Airflow Balancer Config not found!</strong>\n            <p>Please make sure you are running the Airflow Balancer with the correct configuration.</p>\n        </div>\n        `;\n  }\n\n  const config: Config = JSON.parse(raw_config);\n\n  root_node.innerHTML = `\n    <div class=\"airflow-balancer-defaults\">\n        <h2>Defaults</h2>\n        <div class=\"form-group\">\n            <label for=\"default-username\">Default Username</label>\n            <input type=\"text\" class=\"form-control\" id=\"default-username\" disabled value=\"${config.default_username || \"\"}\">\n            <small class=\"form-text text-muted\">Default username for all hosts.</small>\n            <br>\n            <label for=\"default-password-variable\">Default Password Variable</label>\n            <input type=\"text\" class=\"form-control\" id=\"default-password-variable\" disabled value=\"${config.default_password_variable || \"\"}\">\n            <small class=\"form-text text-muted\">Default password variable for all hosts.</small>\n            <br>\n            <label for=\"default-password-variable-key\">Default Password Variable Key</label>\n            <input type=\"text\" class=\"form-control\" id=\"default-password-variable-key\" disabled value=\"${config.default_password_variable_key || \"\"}\">\n            <small class=\"form-text text-muted\">Default password variable key for all hosts.</small>\n            <br>\n            <label for=\"default-key-file\">Default Key File</label>\n            <input type=\"text\" class=\"form-control\" id=\"default-key-file\" disabled value=\"${config.default_key_file || \"\"}\">\n            <small class=\"form-text text-muted\">Default key file for all hosts.</small>\n            <br>\n            <label for=\"default-size\">Default Size</label>\n            <input type=\"number\" class=\"form-control\" id=\"default-size\" disabled value=\"${config.default_size || 0}\">\n            <small class=\"form-text text-muted\">Default size for all hosts.</small>\n        </div>\n    </div>`;\n\n  let host_table = `\n    <div class=\"airflow-balancer-hosts\">\n      <h2>Hosts</h2>\n      <table class=\"table table-striped table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Password</th>\n            <th>Password Variable</th>\n            <th>Password Variable Key</th>\n            <th>Key File</th>\n            <th>OS</th>\n            <th>Pool</th>\n            <th>Size</th>\n            <th>Queues</th>\n            <th>Tags</th>\n          </tr>\n        </thead>\n        <tbody>`;\n  config.hosts?.forEach((host: Host) => {\n    const host_name = host.name;\n    const host_username = host.username;\n    const host_password = host.password || \"None\";\n    const host_password_variable = host.password_variable || \"None\";\n    const host_password_variable_key = host.password_variable_key || \"None\";\n    const host_key_file = host.key_file || \"None\";\n    const host_os = host.os || \"None\";\n    const host_pool = host.pool || \"None\";\n    const host_size = host.size || 0;\n    const host_queues = host.queues\n      .map((queue) => `<span class=\"badge badge-secondary\">${queue}</span>`)\n      .join(\" \");\n    const host_tags = host.tags\n      .map((tag) => `<span class=\"badge badge-secondary\">${tag}</span>`)\n      .join(\" \");\n    host_table += `\n          <tr>\n            <td><span>${host_name}</span></td>\n            <td><span>${host_username}</span></td>\n            <td><span>${host_password}</span></td>\n            <td><span>${host_password_variable}</span></td>\n            <td><span>${host_password_variable_key}</span></td>\n            <td><span>${host_key_file}</span></td>\n            <td><span>${host_os}</span></td>\n            <td><span>${host_pool}</span></td>\n            <td><span>${host_size}</span></td>\n            <td>${host_queues}</td>\n            <td>${host_tags}</td>\n          </tr>\n        `;\n  });\n  root_node.innerHTML += host_table;\n\n  let port_table = `\n    <div class=\"airflow-balancer-ports\">\n      <h2>Ports</h2>\n      <table class=\"table table-striped table-bordered table-hover\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Host</th>\n            <th>Port</th>\n            <th>Tags</th>\n          </tr>\n        </thead>\n        <tbody>`;\n  config.ports?.forEach((port: Port) => {\n    const port_name = port.name;\n    const port_tags = port.tags\n      .map((tag) => `<span class=\"badge badge-secondary\">${tag}</span>`)\n      .join(\" \");\n    const host = port.host_name || port.host.name;\n    const port_number = port.port;\n    port_table += `\n          <tr>\n            <td><span>${port_name}</span></td>\n            <td><span>${host}</span></td>\n            <td><span>${port_number}</span></td>\n            <td>${port_tags}</td>\n          </tr>\n        `;\n  });\n  port_table += `\n        </tbody>\n        </table>\n    </div>\n    `;\n  root_node.innerHTML += port_table;\n});\n"],
  "mappings": "AA+BA,SAAS,iBAAiB,mBAAoB,SAAY,CACxD,IAAMA,EAAqB,OAAO,4BAC5BC,EAA4B,SAAS,eACzC,uBACF,EACID,IAAe,SACjBC,EAAW,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,WAQzB,IAAMC,EAAiB,KAAK,MAAMF,CAAU,EAE5CC,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,4FAKoEC,EAAO,kBAAoB,EAAE;AAAA;AAAA;AAAA;AAAA,qGAIpBA,EAAO,2BAA6B,EAAE;AAAA;AAAA;AAAA;AAAA,yGAIlCA,EAAO,+BAAiC,EAAE;AAAA;AAAA;AAAA;AAAA,4FAIvDA,EAAO,kBAAoB,EAAE;AAAA;AAAA;AAAA;AAAA,0FAI/BA,EAAO,cAAgB,CAAC;AAAA;AAAA;AAAA,YAKhH,IAAIC,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAoBjBD,EAAO,OAAO,QAASE,GAAe,CACpC,IAAMC,EAAYD,EAAK,KACjBE,EAAgBF,EAAK,SACrBG,EAAgBH,EAAK,UAAY,OACjCI,EAAyBJ,EAAK,mBAAqB,OACnDK,EAA6BL,EAAK,uBAAyB,OAC3DM,EAAgBN,EAAK,UAAY,OACjCO,EAAUP,EAAK,IAAM,OACrBQ,EAAYR,EAAK,MAAQ,OACzBS,EAAYT,EAAK,MAAQ,EACzBU,EAAcV,EAAK,OACtB,IAAKW,GAAU,uCAAuCA,CAAK,SAAS,EACpE,KAAK,GAAG,EACLC,EAAYZ,EAAK,KACpB,IAAKa,GAAQ,uCAAuCA,CAAG,SAAS,EAChE,KAAK,GAAG,EACXd,GAAc;AAAA;AAAA,wBAEME,CAAS;AAAA,wBACTC,CAAa;AAAA,wBACbC,CAAa;AAAA,wBACbC,CAAsB;AAAA,wBACtBC,CAA0B;AAAA,wBAC1BC,CAAa;AAAA,wBACbC,CAAO;AAAA,wBACPC,CAAS;AAAA,wBACTC,CAAS;AAAA,kBACfC,CAAW;AAAA,kBACXE,CAAS;AAAA;AAAA,SAGzB,CAAC,EACDf,EAAU,WAAaE,EAEvB,IAAIe,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAajBhB,EAAO,OAAO,QAASiB,GAAe,CACpC,IAAMC,EAAYD,EAAK,KACjBE,EAAYF,EAAK,KACpB,IAAKF,GAAQ,uCAAuCA,CAAG,SAAS,EAChE,KAAK,GAAG,EACLb,EAAOe,EAAK,WAAaA,EAAK,KAAK,KACnCG,EAAcH,EAAK,KACzBD,GAAc;AAAA;AAAA,wBAEME,CAAS;AAAA,wBACThB,CAAI;AAAA,wBACJkB,CAAW;AAAA,kBACjBD,CAAS;AAAA;AAAA,SAGzB,CAAC,EACDH,GAAc;AAAA;AAAA;AAAA;AAAA,MAKdjB,EAAU,WAAaiB,CACzB,CAAC",
  "names": ["raw_config", "root_node", "config", "host_table", "host", "host_name", "host_username", "host_password", "host_password_variable", "host_password_variable_key", "host_key_file", "host_os", "host_pool", "host_size", "host_queues", "queue", "host_tags", "tag", "port_table", "port", "port_name", "port_tags", "port_number"]
}
