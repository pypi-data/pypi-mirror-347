[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cylestio-monitor"
version = "0.1.11"
description = "A monitoring tool for LLM API calls"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = ["llm", "monitoring", "api", "security", "compliance"]
authors = [
    { name = "Cylestio.com", email = "contact@Cylestio.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "anthropic>=0.18.0",
    "mcp>=1.3.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "structlog>=24.1.0",
    "platformdirs>=4.0.0",
    "pyyaml>=6.0.0",
    "requests>=2.31.0",
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "setuptools>=68.0.0",  # Required for pkg_resources
]

[project.urls]
"Homepage" = "https://github.com/cylestio/cylestio-monitor"
"Bug Tracker" = "https://github.com/cylestio/cylestio-monitor/issues"
"Documentation" = "https://docs.cylestio.com"
"Changelog" = "https://github.com/cylestio/cylestio-monitor/blob/main/CHANGELOG.md"
"Source" = "https://github.com/cylestio/cylestio-monitor"

[tool.hatch.build.targets.wheel]
packages = ["src/cylestio_monitor"]

[tool.hatch.build.targets.wheel.force-include]
"src/cylestio_monitor/config/default_config.yaml" = "cylestio_monitor/config/default_config.yaml"

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "coverage>=7.4.0",
    # Note: CVE-2022-42969 in py package is disputed and can be ignored
    # See: https://github.com/pytest-dev/pytest/issues/10392
]
security = [
    "bandit>=1.7.0",
    "safety>=3.0.0",
    "sentence-transformers>=3.1.0",  # Fix for PVE-2024-73169
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
markers = [
    "integration: marks tests as integration tests",
    "security: marks tests that verify security requirements",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
