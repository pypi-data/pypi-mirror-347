name: Release

on:
  push:
    tags:
      - 'v*' # Run when tag matches v*, like v0.0.5

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for proper release notes
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install UV and dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        export PATH="$PATH:$HOME/.cargo/bin"
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
        
    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest
        
    - name: Build package with UV
      run: |
        source .venv/bin/activate
        rm -rf dist/
        uv build --no-sources
        
    - name: Publish to PyPI
      run: |
        source .venv/bin/activate
        uv publish --token ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Generate Changelog
      id: changelog
      run: |
        previous_tag=$(git tag --sort=-creatordate | grep -v $(git describe --tags) | head -n 1)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        if [ -z "$previous_tag" ]; then
          git log --pretty=format:"* %s (%h)" $(git describe --tags) >> $GITHUB_OUTPUT
        else
          git log --pretty=format:"* %s (%h)" $previous_tag..$(git describe --tags) >> $GITHUB_OUTPUT
        fi
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          ## What's Changed
          ${{ steps.changelog.outputs.changelog }} 