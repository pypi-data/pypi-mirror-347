Metadata-Version: 2.4
Name: ai_tools_ct
Version: 0.0.4
Summary: A package deisnged to help with general AI related developments, mainly data generation
Project-URL: Homepage, https://willmorcombe.dev
Author-email: Will Morcombe <will.morcombe@centraltest.com>
License-Expression: MIT
License-File: LICENSE
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Requires-Dist: annotated-types==0.7.0
Requires-Dist: anyio==4.9.0
Requires-Dist: certifi==2025.1.31
Requires-Dist: charset-normalizer==3.4.1
Requires-Dist: colorama==0.4.6
Requires-Dist: distro==1.9.0
Requires-Dist: exceptiongroup==1.2.2
Requires-Dist: h11==0.14.0
Requires-Dist: httpcore==1.0.7
Requires-Dist: httpx==0.28.1
Requires-Dist: idna==3.10
Requires-Dist: jiter==0.9.0
Requires-Dist: numpy==2.0.2
Requires-Dist: openai==1.69.0
Requires-Dist: packaging==24.2
Requires-Dist: pandas==2.2.3
Requires-Dist: pydantic-core==2.33.0
Requires-Dist: pydantic==2.11.0
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: pytz==2025.2
Requires-Dist: six==1.17.0
Requires-Dist: sniffio==1.3.1
Requires-Dist: tqdm==4.67.1
Requires-Dist: typing-extensions==4.13.0
Requires-Dist: typing-inspection==0.4.0
Requires-Dist: tzdata==2025.2
Requires-Dist: urllib3==2.3.0
Provides-Extra: dev
Requires-Dist: black; extra == 'dev'
Requires-Dist: build; extra == 'dev'
Requires-Dist: dotenv; extra == 'dev'
Requires-Dist: mypy; extra == 'dev'
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: pytest-cov; extra == 'dev'
Requires-Dist: twine; extra == 'dev'
Description-Content-Type: text/markdown


# AI TOOLS CT

  
This repo is a collection of classes that will help users with ai tasks regarding the use of OpenAi for data generation. 

## Installation
``` $ pip install ai_tools_ct```

## Usage
At the moment, you will need an **openai api key** which you can find [here](https://platform.openai.com/docs/quickstart?api-mode=responses). 

```
from ai_tools_ct.gpt import Gpt
from ai_tools_ct.data_generator import DataGenerator as Dg

gpt = Gpt(api_key=your_api_key)
dg = Dg(gpt)

# for single prompt generation 
dg.single_generation(prompt="give me 10 random words")

# or do a bulk generation with multiple prompts
prompts = ["give me a random word", "give me a random number"]
targets = ["word", "number"]
system_prompts = ["you are a word generator", "you are a number generator"]
dg.bulk_generation(prompts = prompts, targets=targets, system_prompts=system_prompts)

# even do parrallel bulk generation for extra speediness
db.parallel_generation(prompts = prompts, targets=targets, system_prompts=system_prompts)

# access results either through python list of pandas df
dg.generation_results
dg.df_generation_results
```