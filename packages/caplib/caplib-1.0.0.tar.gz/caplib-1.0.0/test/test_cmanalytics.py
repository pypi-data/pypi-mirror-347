import unittest
from datetime import datetime

from caplib.market import *
from caplib.analytics import *
from caplib.cmanalytics import *

class TestCmAnalytics(unittest.TestCase):

    def setUp(self):

        # Create calendar
        cal_cnbe = 'CAL_CNBE'      
        hol_serial_numbers =[44654, 44954]
        sbd_serial_numbers = [44655]
        # Convert list of serial numbers to datetime objects
        holidays = [datetime.fromordinal(sn) for sn in hol_serial_numbers]
        specials = [datetime.fromordinal(sn) for sn in sbd_serial_numbers]
        create_calendar(cal_cnbe, holidays, specials)
        
        # Create Pricing Settings with BLACK_SCHOLES_MERTON model and ANALYTICAL method 
        self.bsm_analytical_pricing_settings = create_pricing_settings(
            'CNY', False, 
            create_model_settings('BLACK_SCHOLES_MERTON'), 
            'ANALYTICAL', 
            create_pde_settings(), 
            create_monte_carlo_settings()
            )

        # Create Pricing Settings with BLACK_SCHOLES_MERTON model and PDE method
        self.bsm_pde_pricing_settings = create_pricing_settings(
            'CNY', False, 
            create_model_settings('BLACK_SCHOLES_MERTON'), 
            'PDE', 
            create_pde_settings(201, 401, -5, 5, 'MMT_NUM_STDEVS', 0.001, 'ADAPTIVE_GRID', 'CUBIC_SPLINE_INTERP'), 
            create_monte_carlo_settings()
            )

        # Create Pricing Settings with BLACK_SCHOLES_MERTON model and MONTE_CARLO method
        self.bsm_mc_pricing_settings = create_pricing_settings(
            'CNY', False, 
            create_model_settings('BLACK_SCHOLES_MERTON'), 
            'MONTE_CARLO', 
            create_pde_settings(), 
            create_monte_carlo_settings(8096, 'SOBOL_NUMBER', 1023, 'BROWNIAN_BRIDGE_METHOD', 'INVERSE_CUMULATIVE_METHOD',False, 1)
            )

        # Create Pricing Settings with Duprie Local Vol model and PDE method 
        self.duprie_pde_pricing_settings = create_pricing_settings(
            'CNY', False, 
            create_model_settings('DUPIRE_LOCAL_VOL_MODEL',[201,401,4, 0.001]), 
            'PDE', 
            create_pde_settings(201, 401, -5, 5, 'MMT_NUM_STDEVS', 0.001, 'ADAPTIVE_GRID', 'CUBIC_SPLINE_INTERP'), 
            create_monte_carlo_settings()
            )

        # Create Pricing Settings with Duprie Local Vol model and MONTE_CARLO method
        self.duprie_mc_pricing_settings = create_pricing_settings(
            'CNY', False, 
            create_model_settings('DUPIRE_LOCAL_VOL_MODEL',[201,401,4, 0.001]), 
            'MONTE_CARLO', 
            create_pde_settings(), 
            create_monte_carlo_settings(8096, 'SOBOL_NUMBER', 1023, 'BROWNIAN_BRIDGE_METHOD', 'INVERSE_CUMULATIVE_METHOD', False, 201)
            )
        
        # Create Risk Settings
        self.risk_settings = create_cm_risk_settings(
            create_ir_curve_risk_settings(
                delta=True, gamma=False, curvature=False, 
                shift=1.0e-4, curvature_shift=5.0e-1, 
                method='CENTRAL_DIFFERENCE_METHOD', granularity='TOTAL_RISK', 
                scaling_factor=1.0e-4, threading_mode='SINGLE_THREADING_MODE'),
            create_price_risk_settings(
                delta=True, gamma=True, curvature=False, 
                shift=1.0e-2, curvature_shift=5.0e-1, 
                method='CENTRAL_DIFFERENCE_METHOD', 
                scaling_factor=1.0e-2, threading_mode='SINGLE_THREADING_MODE'), 
            create_vol_risk_settings(
                vega=True, volga=True, 
                shift=1.0e-2, 
                method='CENTRAL_DIFFERENCE_METHOD', granularity='TOTAL_RISK', 
                scaling_factor=1.0e-2, threading_mode='SINGLE_THREADING_MODE'),
            create_price_vol_risk_settings(
                vanna=True, 
                price_shift=1.0e-2, vol_shift=1.0e-2, 
                method='CENTRAL_DIFFERENCE_METHOD', granularity='TOTAL_RISK', 
                price_scaling_factor=1.0e-2, vol_scaling_factor=1.0e-2, threading_mode='SINGLE_THREADING_MODE'), 
            create_dividend_curve_risk_settings(
                delta=True, gamma=False, 
                shift=1.0e-4, 
                method="CENTRAL_DIFFERENCE_METHOD", granularity="TOTAL_RISK", 
                scaling_factor=1.0e-4, threading_mode="SINGLE_THREADING_MODE"), 
            create_theta_risk_settings(
                theta=True, shift=1, scaling_factor=1./365.)
            )

        # Create Scenario Analysis Settings
        self.scenario_analysis_settings = create_scn_analysis_settings(
            scn_analysis_type = 'PRICE_VOL_SCN_ANALYSIS', 
            min_underlying_price=-20e-2, 
            max_underlying_price=20e-2, 
            num_price_scns = 11,
            price_scn_gen_type = 1,
            min_vol = -5.e-2, 
            max_vol = 5.e-2,
            num_vol_scns = 12, 
            vol_scn_gen_type=0,
            threading_mode='SINGLE_THREADING_MODE'
            )

        # currency
        self.currency = 'CNY'
        # underlying
        self.underlying = 'CU.SHFE'

        # Create Market Data
        self.as_of_date = datetime(2020, 2, 21)
        
        # Create IR Yield Curve
        self.ir_curve = create_ir_yield_curve(
            as_of_date = self.as_of_date,
            currency=self.currency,
            term_dates=[
                datetime(2020, 2, 26), 
                datetime(2020, 3, 2), 
                datetime(2020, 3, 9), 
                datetime(2020, 3, 24), 
                datetime(2020, 5, 24), 
                datetime(2020, 8, 24), 
                datetime(2020, 11, 24), 
                datetime(2021, 2, 24), 
                datetime(2022, 2, 24), 
                datetime(2023, 2, 24), 
                datetime(2024, 2, 24), 
                datetime(2025, 2, 24), 
                datetime(2027, 2, 24), 
                datetime(2030, 2, 24)
            ],
            zero_rates=[
                0.0135486283791684, 0.0197762034605164, 0.0197686053073393, 0.0224838821372655, 0.0241740300538751, 0.0256822601972516, 0.0265096948143765, 0.0271330931714993, 0.0274314991366822, 0.0284834397783798, 0.0297276346662025, 0.0308410887945891, 0.032692683803743, 0.034410206396147
            ],
            curve_name='CNY_SHIBOR_3M'
        )

        
        # Create Option Quote Matrix
        self.cm_option_quote_matrix = create_cm_option_quote_matrix(
            exercise_type='AMERICAN', 
            underlying_type="FUTURE_UNDERLYING_TYPE", 
            as_of_date = self.as_of_date,
            term_dates = [
                datetime(2020, 3, 12),
                datetime(2020, 4, 13),
                datetime(2020, 5, 12),
                datetime(2020, 6, 12),
                datetime(2020, 7, 10),
                datetime(2020, 8, 12),
                datetime(2020, 9, 11)
            ], 
            payoff_types = [
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT','PUT',  'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL'],
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT','PUT',  'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL'],
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL'],
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL'],
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL'],
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL'],
                ['PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'PUT', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL', 'CALL']
            ],
            strikes = [
                [54000, 55000, 56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000, 78000, 79000, 80000, 82000],
                [54000, 55000, 56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000, 78000, 79000, 80000, 82000],
                [54000, 55000, 56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000, 78000, 79000, 80000, 82000],
                [56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000, 78000, 79000, 80000, 82000],
                [57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000],
                [56000, 57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000, 77000, 78000, 79000, 80000],
                [57000, 58000, 59000, 60000, 61000, 62000, 63000, 64000, 65000, 66000, 67000, 68000, 69000, 70000, 71000, 72000, 73000, 74000, 75000, 76000]
            ],
            prices = [
                [14.00, 16.00, 20.00, 26.00, 38.00, 64.00, 86.00, 130.00, 198.00, 282.00, 400.00, 600.00, 878.00, 1070.00, 660.00, 394.00, 236.00, 142.00, 90.00, 52.00, 32.00, 22.00, 18.00, 14.00, 10.00, 6.00, 6.00],
                [126.00, 126.00, 160.00, 200.00, 250.00, 312.00, 396.00, 478.00, 600.00, 776.00, 974.00, 1230.00, 1602.00, 1736.00, 1276.00, 910.00, 642.00, 460.00, 312.00, 212.00, 150.00, 110.00, 80.00, 58.00, 40.00, 28.00, 38.00],
                [172.00, 192.00, 236.00, 292.00, 426.00, 478.00, 574.00, 702.00, 892.00, 1206.00, 1368.00, 1632.00, 2140.00, 2218.00, 1762.00, 1350.00, 1026.00, 762.00, 562.00, 404.00, 294.00, 210.00, 128.00, 102.00, 58.00, 56.00, 106.00],
                [414.00, 486.00, 584.00, 700.00, 958.00, 1186.00, 1308.00, 1634.00, 2008.00, 2436.00, 2914.00, 2814.00, 2396.00, 2026.00, 1698.00, 1412.00, 758.00, 964.00, 446.00, 346.00, 256.00, 188.00, 138.00, 102.00, 82.00, 44.00],
                [676.00, 798.00, 936.00, 1064.00, 1354.00, 1780.00, 2138.00, 2538.00, 2978.00, 3474.00, 3324.00, 2902.00, 2516.00, 1544.00, 1256.00, 984.00, 806.00, 622.00, 488.00, 382.00, 282.00],
                [678.00, 802.00, 906.00, 1058.00, 1246.00, 1456.00, 2066.00, 2446.00, 2862.00, 3314.00, 3814.00, 3590.00, 3168.00, 2784.00, 2446.00, 2136.00, 1852.00, 1612.00, 1390.00, 630.00, 1026.00, 448.00, 338.00, 278.00, 196.00],
                [1006.00, 1146.00, 1312.00, 1558.00, 1790.00, 2118.00, 2688.00, 3118.00, 3578.00, 4078.00, 3828.00, 3408.00, 3024.00, 2680.00, 2358.00, 2078.00, 1822.00, 1586.00, 1388.00, 666.00]
            ],
            underlying = self.underlying
        )
        #print(self.cm_option_quote_matrix)
        # Build Volatility Surface
        self.vol_surf = cm_vol_surface_builder(
            as_of_date=self.as_of_date, 
            smile_method='SVI_SMILE_METHOD', 
            wing_strike_type='DELTA',
            lower=-1e-5,
            upper=1e-5, 
            option_quote_matrix=self.cm_option_quote_matrix, 
            underlying_prices=[66810.00, 66750.00, 66620.00, 66620.00, 66490.00, 66460.00, 66380.00],
            discount_curve=self.ir_curve, 
            fwd_curve=None,
            building_settings = [1, 0.5], 
            underlying=self.underlying
         )
        
        
        self.mkt_data_set = create_cm_mkt_data_set(
            as_of_date=self.as_of_date, 
            discount_curve=self.ir_curve,
            underlying_price=66380.00, 
            vol_surf=self.vol_surf,
            underlying=self.underlying)

    def test_cm_vol_surface_builder(self):
        expected = b'\n \x08\x01\x10\x03\x18\x01 \x01(\x010\x028\x01I\xf1h\xe3\x88\xb5\xf8\xe4\xbeQ\xf1h\xe3\x88\xb5\xf8\xe4>\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x1a\xd6\x04\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19O\xae6\xa3\x07\x14\xe4@!\x00i\xbc\x05n\x94\xf5@*\xeb\x01\n\xe8\x01O\xae6\xa3\x07\x14\xe4@\x00\x00\x00\x00\x00^\xea@\x00\x00\x00\x00\x00\xdb\xea@\x00\x00\x00\x00\x00X\xeb@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@\x00\x00\x00\x00\x80\xcc\xf2@\x00\x00\x00\x00\x00\x0b\xf3@\x00\x00\x00\x00\x80I\xf3@\x00\x00\x00\x00\x00\x88\xf3@\x00i\xbc\x05n\x94\xf5@0\x039\xe0\xc0\x81\x03\x07\x0e\xac?B\xeb\x01\n\xe8\x01\xe2_\x911\x03\x8b\xdf?\x9f\xb8\xb5hzC\xd8?{\x85\xd8\x83:\xc6\xd6?\xcc\x843\xcd\xd2\x85\xd5?\x9d\x8a\xb5\xa5\x8f[\xd4?\x91\xb4\xf2\xf1\x8e\x83\xd3?\xfa\x16=\x8d\xd2#\xd3?DJ\xaach\x00\xd2?\xac\x97\x92\xd6:F\xd1?\xef\xef\xc5\xc9\x07\x9a\xd0?+\xda\xa8W\x9f?\xcf?9\r\xcfa\x85,\xcd?i\x97E\xd9 \xcb\xcb?x\x90\x98(fA\xca?\x14\x1a4\xbdS\x19\xc7?\x08_q\xa6\n\x03\xc7?\xa2\x83"\\\xb8Z\xc7?\xbdR\xbcg\x9f\x1d\xc8?\x939u\xc9\x1f\x07\xc9?\xdc$\xfa\xf50A\xca?\xf6>\x94\xed^\xed\xca?\x0b\xbb\xa7\xb0\x0c\xe7\xcb?\xce\x97\xd0G\xdaG\xcd?\xca\x94\x0fM\xc1B\xcf?\xc2\xb4\x05\xd7Ms\xd0?-\x92\xa1\x16Q\x0b\xd1?\x813\x92O\x11F\xd1?F\x0f\xbb\xdf\xe2l\xd2?\xa8\x18MfH\xcf\xd1?J*\n(W\xa2?O\x9d2[?\xc2\xc0\xaa\x11\xd2\xef\x90?~\x0c!\x80\x15\xdc\xda\xbf\xc4\xb297\x03\xd3\x83?\xe0\xa7\xf5\x14\x88\xceD?R"\n \xe0\xc0\x81\x03\x07\x0e\xac?|\x19YaFT\xf0@O\xae6\xa3\x07\x14\xe4@\x00i\xbc\x05n\x94\xf5@X\x01\x1a\xd6\x04\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\x00\x00\x00\x00\xe0K\xe0@!\x99g\x1f\x14\xe1\xa5\xf7@*\xeb\x01\n\xe8\x01\x00\x00\x00\x00\xe0K\xe0@\x00\x00\x00\x00\x00^\xea@\x00\x00\x00\x00\x00\xdb\xea@\x00\x00\x00\x00\x00X\xeb@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@\x00\x00\x00\x00\x80\xcc\xf2@\x00\x00\x00\x00\x00\x0b\xf3@\x00\x00\x00\x00\x80I\xf3@\x00\x00\x00\x00\x00\x88\xf3@\x99g\x1f\x14\xe1\xa5\xf7@0\x039\xc5#\xe1[Q<\xc2?B\xeb\x01\n\xe8\x01\xb6\x03\xd5\x07/\x9a\xdf?[\x8d\xf3f\x80\x14\xd5?\xd86\xd0]\x8f\x94\xd3?)Z\xf3\xe5&\xff\xd2?\xb9\xdaH\xefQZ\xd2?A\xb0\'\xb9(\xb5\xd1?^H\xf5=|\r\xd1?\x16\x16\xc1\xf2iz\xd0?#6WJ\xbcG\xcf?\xab\xa1\x9b\x03\xf6\xfc\xcd?$\x96\xc8\xe9\x12\x14\xcd?\xcf\xb1+\x8e\x07\xd3\xcb?\xa8U(\xbb\x03\xb2\xca?\xd8\xb0}ljJ\xca?3-)[\xcdL\xc6?\xa8u\x04\xf8\x92\x03\xc6?\xa6o\x0e\xd3\xc7\xcd\xc5?t\x18J\x926\xd9\xc5?\x03\xc2\x1b\xb5\xde=\xc6?\xf3,\x86\xbf\xdbP\xc6?\xe5\x060R\xee\x89\xc6?#\xa8\x92\xc3\xf9\x0c\xc7?!\xd8\xb6\x88\xb7\xbb\xc7?_\xdc\x964\x12W\xc8?po\x7f\xd4\x89\xe7\xc8?\xed\xbf\x01\xe4\xc6?\xc9?\x1b\xa2]{<\xa6\xc9?\xbe\x83"r\x02\x81\xcc?\xcb\xf5WduP\xcd?J*\n(\xad\x15\xa5:\x1c\x03p?\x10\xcd\x85\x8d\xd6@\x9b?\r\xa3\x86\xf9;\xba\xe3\xbf?\x0b\xb9z\xcd\x96\x94?,\x86\x97\xf9\xbb\xbaw?R"\n \xc5#\xe1[Q<\xc2?\x9a\xc7\xe1\x12\x97Y\xf0@\x00\x00\x00\x00\xe0K\xe0@\x99g\x1f\x14\xe1\xa5\xf7@X\x01\x1a\xd6\x04\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\x00\x00\x00\x00\xc0C\xe0@!\x0b\x8b\xd75Y\x13\xf8@*\xeb\x01\n\xe8\x01\x00\x00\x00\x00\xc0C\xe0@\x00\x00\x00\x00\x00^\xea@\x00\x00\x00\x00\x00\xdb\xea@\x00\x00\x00\x00\x00X\xeb@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@\x00\x00\x00\x00\x80\xcc\xf2@\x00\x00\x00\x00\x00\x0b\xf3@\x00\x00\x00\x00\x80I\xf3@\x00\x00\x00\x00\x00\x88\xf3@\x0b\x8b\xd75Y\x13\xf8@0\x039}\xc6Y\x80\xcdg\xcc?B\xeb\x01\n\xe8\x01\x02T\\\x8a\xf9e\xda?\x90\x8es\x82\xde\xf8\xd1?\xf2\xaf\xb2\xeb\n\x1c\xd1?\xd4\x8c\xe5\x058\x99\xd0?Dy!\xb1-\x1e\xd0?@\xdf\x14\x95\xcad\xd0?P\xdb+\x8e\xcb\xfd\xce?\xb7\x8aqq\x03\xd2\xcd?_y\xf9\xe8\x82\xd6\xcc?\xf6\xe5\xfa\xc7\xd1W\xcc?\xe6\xc1A\x087\xe6\xcc?>X5\x87\x9d\x02\xcb?(0\x0b^\x15\xdd\xc9?\xdf\xa4\x07$q\xbd\xca?#\xc5*\xb2\x14\xd0\xc6?\xd8\xd1\xeb\'B\xb0\xc6?E( \x11\xb4L\xc6?\x07\xfe\x81h\xdb"\xc6?\xea\xd7\xa1\x83a\xf5\xc5?5\xda]J\'\xea\xc5?x31\x97\xf0\xd1\xc5?\x8d\xc9\xfc\xc1u\xed\xc5?\xab\xf1\xd3\xdbM\xff\xc5?v\xe9\xb6\xea\xa5d\xc5?\xbeP\x93i\\\x16\xc6?c\xd9\xef\xc9\x1cu\xc5?\x1aT\xfbM\x81\xcb\xc6?xo\x1f\xb7\xc6\xfd\xca?\xdf\xd8uM\xf0\xba\xc8?J*\n(\x92%[)p\xd9y?\x8dW3n\xb7\xcd\x98?\xc4.\xfcK2\x98\xe8\xbf@\xd0w;44\xa2?\x8fX9\xadh*\x84?R"\n }\xc6Y\x80\xcdg\xcc?aP\xff\x94\xd6Y\xf0@\x00\x00\x00\x00\xc0C\xe0@\x0b\x8b\xd75Y\x13\xf8@X\x01\x1a\xc6\x04\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\xf4\xfb\x7f\xc1\x11C\xf0@!\xfc\xcd\x9c\xe1^D\xf0@*\xe3\x01\n\xe0\x01\xf4\xfb\x7f\xc1\x11C\xf0@\x00\x00\x00\x00\x00X\xeb@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@\x00\x00\x00\x00\x80\xcc\xf2@\x00\x00\x00\x00\x00\x0b\xf3@\x00\x00\x00\x00\x80I\xf3@\x00\x00\x00\x00\x00\x88\xf3@\x00\x00\x00\x00\x00\x05\xf4@\xfc\xcd\x9c\xe1^D\xf0@0\x0397:AOk\xa3\xd3?B\xe3\x01\n\xe0\x01\xcd\xc2\xbf"\x1e\xe2\xca?\x18\xb1\xc0\xba\xc6i\xd0? \x18\x01\x07\xcd\xd0\xcf?\x07\x9a\x11\xaf\xf3\x08\xcf?\xe2\x94\x12}aA\xce?\xe6QK\xb5(\x16\xcf?\n\xe2\x99\x15\xb4\xf5\xce?\x1e"\xa0C\xb3D\xcd?\xb9\xf2^\xf7\x00x\xcd?Y>lkU\xac\xcd?R_\x83\xf7B\xee\xcd?\xe5CZf\x0e4\xce?\xbfW\xc1\x8b`\xf7\xc7?T\xe1\xd0\xb8\xbbH\xc8?\x83D\xf1\xc8\xf1\x8c\xc8?\xa4W/p\xf1\xbe\xc8?\xc5Rr\x938\xe7\xc8?(\x18\x12\xb7\xb5\x9e\xc4?y\x8aj\xde\xd3?\xc9?\\\xb7\xfec*\xcd\xc4?m\xf7\xd4\xae\xba\n\xc5?8|\xff@[\x0b\xc5?k\xff\xc3\x154\x11\xc5?k\x8a\xc8\x18&"\xc5?\x18\xee\xf3C7B\xc5?\xd4\x81\xb8\xd9\x12\xb6\xc5?+*\x84O5\xee\xc5?\r)F\x12\xa4\xde\xca?J*\n(:n\xdc4P\xba\x80?\x15\xd3\r\xa9\xf3\x9a\x9a?NXSJ\xd4\xe1\xe5\xbfe\xb7\xdbd{q\xbd?\x00\x00\x00\x00\x00\x00\x00\x00R"\n 7:AOk\xa3\xd3?\xeb.\x13\xce&c\xf0@\xf4\xfb\x7f\xc1\x11C\xf0@\xfc\xcd\x9c\xe1^D\xf0@X\x01\x1a\xf6\x03\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\x8fLe\xac\x02;\xf0@!\x102\xd3\xd9-<\xf0@*\xbb\x01\n\xb8\x01\x8fLe\xac\x02;\xf0@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@\x00\x00\x00\x00\x80\xcc\xf2@\x102\xd3\xd9-<\xf0@0\x039\xc4\x88\x11#F\x8c\xd8?B\xbb\x01\n\xb8\x01\x9c\xf7\x04\xfd"\xf6\xca?\x86\xcb\x14C\xfc\x86\xcf?\xc6-S\xb4\xa5\xd9\xce?c\xbcN\xc3\x19"\xce?\xdb\xa4D#;\x10\xcd?\x14\x8f\xf1a6{\xcd?\xd5\xfa\xa2\xc6U\xc1\xce?\xac\xf3\x98\xc3\xbb\xeb\xce?J%HDl\x17\xcf?\xdb\xa7\x9c\xd2\x08@\xcf?ly\xaa\xea6\x87\xcf?V\xcc\xa7\xe5#p\xc9?\xae\xcbZ<\xc5\xae\xc9?B\xae\xcc\xab\xa5\xd9\xc9?\xf2\xf3Uc\xa1\xdd\xc4?\x116U\xa9\xe8\xe9\xc4?\xabhN\xb9\xe4\xae\xc4?\x0fb\xad\xbf\xe6\xf6\xc4?`\xd6\x88O\x8b\xcf\xc4?L\x03"\xd4\xcd\xdc\xc4?o\xe6\xff\xd5,\xf2\xc4?\xc6\xda!Op\xc0\xc4?Q\xa6X\xdf\x88\xf2\xca?J*\n(\x00\x00\x00\x00\x00\x00\x00\x00\xf3\x0c\xb2\xf9s\x19\xac?\xbcg\xb4N\x8fQ\xc3\xbf\xc9)5Ks\x9d\xd0?]M\xc6\xf4,\x11\x7f?R"\n \xc4\x88\x11#F\x8c\xd8?j\x18il\x93c\xf0@\x8fLe\xac\x02;\xf0@\x102\xd3\xd9-<\xf0@X\x01\x1a\xb6\x04\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\x93?\xfeB49\xf0@!S\x1b\xbdG<:\xf0@*\xdb\x01\n\xd8\x01\x93?\xfeB49\xf0@\x00\x00\x00\x00\x00X\xeb@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@\x00\x00\x00\x00\x80\xcc\xf2@\x00\x00\x00\x00\x00\x0b\xf3@\x00\x00\x00\x00\x80I\xf3@\x00\x00\x00\x00\x00\x88\xf3@S\x1b\xbdG<:\xf0@0\x039Y\xe5\xfd.\x91U\xde?B\xdb\x01\n\xd8\x01\x99R\xe7\xcd\xc3`\xcb?\x10\xc2\xfc\xf6\x03\xca\xce?>(\xdc\xc7\xe9G\xce?c4\xc9\xb8\xc6Q\xcd?\xdf}\xb7\x13\xf6\xb9\xcc?B\x13\xf0\x00@F\xcc?\xa4V\x19\x88\x07\xc8\xcb?6-Tf]j\xce?1\x8eE\xea\x1b\xa2\xce?V\x8e\x7f\xa1\xaa\xd4\xce?J\xbe\xe0_5\x03\xcf?jk\x85\x17-E\xcf?u_\xc6\xfa)M\xc8?\xefl\x95\xbf\xaf\x8d\xc8?\x97JY{\xb2\xc4\xc8?\xcc:\xea\x00\x92\x05\xc9?w\xb4\xbf\xc1w4\xc9?.\xd5}\xca\x86Q\xc9?9ah-j\x85\xc9?!\xca\xbd\xacf\xa1\xc9?f\xf8qe3+\xc4?\xde\xb8bq\xa3\xda\xc9?17\xfa\xf7\x13\xed\xc4?\xad]Y\'c\xaa\xc4?\x1a\x03\x1e\xd7@\xe9\xc4?\xb6\xe3Z\x04Lt\xc4?\xd6\xb1r\xf9\xf0^\xcb?J*\n(\xa4\x02\xa7\x05!\x9ep?\xea\x08%M\xb6\xdb\xa4?\xaag\x1c>a\x89\xbd\xbf!\x00\xb4p\xa3\x0b\xd8?\x00\x00\x00\x00\x00\x00\x00\x00R"\n Y\xe5\xfd.\x91U\xde?$\xbd\xec\xb0:l\xf0@\x93?\xfeB49\xf0@S\x1b\xbdG<:\xf0@X\x01\x1a\xe6\x03\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\xd7\x13\x8e\xd8<4\xf0@!5\xe7<\xa435\xf0@*\xb3\x01\n\xb0\x01\xd7\x13\x8e\xd8<4\xf0@\x00\x00\x00\x00\x00\xd5\xeb@\x00\x00\x00\x00\x00R\xec@\x00\x00\x00\x00\x00\xcf\xec@\x00\x00\x00\x00\x00L\xed@\x00\x00\x00\x00\x00\xc9\xed@\x00\x00\x00\x00\x00F\xee@\x00\x00\x00\x00\x00\xc3\xee@\x00\x00\x00\x00\x00@\xef@\x00\x00\x00\x00\x00\xbd\xef@\x00\x00\x00\x00\x00\x1d\xf0@\x00\x00\x00\x00\x80[\xf0@\x00\x00\x00\x00\x00\x9a\xf0@\x00\x00\x00\x00\x80\xd8\xf0@\x00\x00\x00\x00\x00\x17\xf1@\x00\x00\x00\x00\x80U\xf1@\x00\x00\x00\x00\x00\x94\xf1@\x00\x00\x00\x00\x80\xd2\xf1@\x00\x00\x00\x00\x00\x11\xf2@\x00\x00\x00\x00\x80O\xf2@\x00\x00\x00\x00\x00\x8e\xf2@5\xe7<\xa435\xf0@0\x039\xc2\x1c\xd3?\x19\xcc\xe1?B\xb3\x01\n\xb0\x01U\xc7\x80\x96@!\xcb?0\x18\xff\xb5\xa8k\xce?\xd6\xa3\\\xb4\xe1\xbb\xcd?4s\x96~\xe3 \xcd?\x19\xcfw\xdd\xbc\n\xcd?\xfeBX~\x1e\x97\xcc?\x1eS\xd3\xe8T\xab\xcc?A)L\xcc\xe5=\xce?\x8e\xbe\xfaM\xf4w\xce?!6\xd5\xc7z\xa7\xce?\x07\xe0\xb9Op\xdf\xce?[\x18.\xe4\xca\xc8\xc7?\xe7c\xe9i\x84\t\xc8? \xd6\xe2\x93\x1cB\xc8?\xecr:\xafY}\xc8?\xdb4z\x05\xc5\xa0\xc8?%:\xce\xdf\xc9\xd2\xc8?\x11*4vZ\xf8\xc8?\x8d\x04\xca5\x11\r\xc9?\x98\x8a\xa9\xd8x8\xc9?`\x88"\xfd\x94P\xc4?\x12\xea\xc8\xa1\x84\x1f\xcb?J*\n(\x97\xa8,\xf7\x00\xc7\x8b?\xe0\xf6\xb8\x00>l\xa7?\r-\xa1O\x06\xf2\xc7\xbf\xb16.\x05w\xc2\xc8?b\xd6}\x90\xd5\xa7\xa1?R"\n \xc2\x1c\xd3?\x19\xcc\xe1?\xfe\xba\x1c&\xd0p\xf0@\xd7\x13\x8e\xd8<4\xf0@5\xe7<\xa435\xf0@X\x01"\x07\x08\xe4\x0f\x10\x03\x18\x0c"\x07\x08\xe4\x0f\x10\x04\x18\r"\x07\x08\xe4\x0f\x10\x05\x18\x0c"\x07\x08\xe4\x0f\x10\x06\x18\x0c"\x07\x08\xe4\x0f\x10\x07\x18\n"\x07\x08\xe4\x0f\x10\x08\x18\x0c"\x07\x08\xe4\x0f\x10\t\x18\x0b*\x07CU.SHFE'
        
        result = self.vol_surf
        
        #print(result.SerializeToString())
        self.assertEqual(result.SerializeToString(), expected)
    
    def test_cm_european_option_pricer(self):
        expected = b'\n\xf4\x06\t\x9d(\x01\x11\xddI\xf0A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\xe8\xb4\xb6\xb4\xebE\x11\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\\\xa1Z\xbc+1!A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\xbc\xec6\x98\xf1\x81\x0eB\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\xa0\x9d\xfa\xdfL<\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x00ML\x9a\x0cJ\xb6A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xf8<\xe9\xe7\xfd8A\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08`\x04k\x9cC\xcbC@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xff\xe1\x8c\xe3\xb5\xa2pA\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00\xbfX\'\xa3\xdd\x87\xc1\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x9a\xc3B\xa3\xf7^\xd5\xc0\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xffoV\xff\x88\xbb\x01\xc1\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08;bg\xae\xed\x01\x11B\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x18\r\xa3E\x07\xc5\xa5A\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xf8\x082f\xa8\x8am\xc2\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x80\xc9\x86KT3\x98\xc1\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\x90\xbc\x0b\x11U\x19\x95AMK\xca\xf2W\xb0\xadA\x8e\xb0\xa8\x01\xcf}\xc1A\xb9\xef\xb5\x9f\xa9\xc1\xd1A\xa0\xee$\x84F\xd5\xdfA\x06\xda$\xba\x89\xbd\xe9Ah(\xf4\x91b \xf3A]\xc73\x80\xdd\x89\xfaA<6\xf1\xe7^l\x01B\x88\xd6\xc9\xd2\xe8\xe4\x05B\xe5\x1d\xf0\x1dA\x92\nB\xdeig\x1f\xfb_\x9cA\xff\xd3\x82\xa1ol\xb2A`A4\xbf\xd4f\xc4Ab\x06\xa5sQ\xc2\xd3Ac[_\xc8>\x1b\xe1AR\xc1&\x01\x8c\xfb\xeaA^\xfe$cg\xb4\xf3A1s%\xa9R\x06\xfbA]\xab\xf4\x9a)\x9c\x01B\xc8nG\x97\xc3\x06\x06B\x08\xc3\xf0\x8f\x90\xa8\nB"_\x1a3\xe0s\xa2A\xc2\x86\xaa\xe2\xdbZ\xb6A\x0ey\xf7\xd3 t\xc7A^\x8c\xcc\xc1.\xcc\xd5A\x96\x8fv\xae\xa9L\xe2A&N\x07\xe4\xad9\xecAa(\x0b\xb3\xd6I\xf4A\xcb\xcd*\xaci\x86\xfbA\xa8:\x13\xf7\xc1\xce\x01BY\x8d]T\xed+\x06B\xeeN{\x1a$\xc2\nB\xdb\xd5%~9W\xa7A\xd0\x1f\xd9a\x8c\x9d\xbaAPv}\xdb\xe2\xa1\xcaAwk\x95\xeb\x0c\xde\xd7A5*\x7f\xc3\xc3~\xe3A\xa8\xb1\x85\xca\xe7w\xedA\x04\x04\xde\xf4}\xe0\xf4A\xb3\x82$\xde\xb1\t\xfcA\xb1a\xa0M\xe2\x03\x02B\x9f\xf8m<.T\x06B`\x18\xd9\xe0\xe4\xde\nB>g\x9e|\xe0\xd6\xacA\x85\x03\xc9\xb2\x9f.\xbfA!\x08\x06\xec\xb9\xec\xcdABE\x8bJ\xe8\xf6\xd9A\x1f \xccqr\xb1\xe4A\xf0l\x8dV3\xb6\xeeA\x93\x13\x1b$3x\xf5A\x82\xb5\xd8\xc4\xca\x8f\xfcA\x18|\x05\xb1K;\x02B|\x99v\xbcN\x7f\x06B\x92\xcb\n\x92\xb4\xfe\nB\xc7Ho\'\x17w\xb1A\x0e\xe9\x82\x0f0\x04\xc2AA\xa7\xea\xce\xd4\xa8\xd0A\xd4\xa69\x1e\xe5\x15\xdcA\xed\x8e\x1d\x8d\x9f\xe4\xe5AN^\' \x8b\xf4\xefA\xa6\x8f\x01\r\xd3\x10\xf6A\xc5*J\x7fa\x18\xfdAf,\x9f\x9f\xc5t\x02B[~\xb2\xf4\x18\xad\x06B\\\t3\x1fp!\x0bB\xabb\xe9\x1e\xbb\xcb\xb4A\x1b\x16\xa4D\xae\x92\xc4A*{\x93s\x07g\xd2A\x9f\xf2\x83WH:\xdeA\xf8g\x9fk8\x18\xe7A\xf1\xeb/Au\x99\xf0A\x00y\x96\xf9?\xaa\xf6AB\x80;\x9a.\xa3\xfdA\x9b?\xf3\x87\x1d\xb0\x02B\\c\xf6\x9cY\xdd\x06B\xe8g;\xce\xf1F\x0bB\xcbwF\x852f\xb8Av\x1e\xa1\x1e;@\xc7Ai\x1b\xaf\xc2\xca/\xd4A\xac\xf5G\xec\xb81\xe0Auk:5-L\xe8A\x10|3\xba\xa68\xf1A\x91Z\xc1\xa9`D\xf7A\xba3\xceA\xf4/\xfeA\xd0\xd7\xb7=&\xed\x02B\xef\x8f\xfe\x81\xe0\x0f\x07BU:r\xc3\x12o\x0bB$\x00;?%C\xbcA\xb5\xb9E\x9bs\n\xcaAx\x1fH%\x17\x02\xd6A\x9b\xa7\xfc\xebkH\xe1AEw\xeaZp\x80\xe9A \xba\xd15\xd8\xd7\xf1A\xff\xb6\x0b\x84\x1f\xdf\xf7A\x1c\xad\x87\xc1|\xbe\xfeA\x10\xcb[m\xb7+\x03B\x81\xeb\xd8\xbc\x80D\x07B\x04]`\x1d\xac\x99\x0bB@\x97\xd83\x94/\xc0A\xacG\xcf\xb4!\xef\xccA\x0c\xfal7\x03\xdd\xd7Ai\x04E\x94\x01a\xe2A/\xe4\xef+\xf6\xb4\xeaA\x0c\xf33"\x08w\xf2A6\xb6|\xf1iz\xf8AD\x0c\x87E\x99N\xffA\x14C\xa6\x15\xadk\x03B\xebg+\xbc\x10{\x07BZ\xcfF\xbb\x97\xc6\x0bB\x86\x90\xf7Ti[\xc2A<\xca\xd3l;\xec\xcfA\x8a\x92&\xf3\xbf\xbf\xd9A\xc24\x80\x1aF{\xe3AM\xd6\x88\x81\xb4\xe9\xebAl\x9b\xd1\x175\x16\xf3A\xbd\x94\x90\xda/\x16\xf9A\xab\x84\x90\xd1 \xe0\xffA\xd7\xe5E\x0b\xe7\xac\x03B\'0\t0j\xb3\x07B[\xd8\xbf\xc2\xb0\xf5\x0bB\xed;ahe\xa3\xc4A\xe9\x19Xn\xf0\x7f\xd1A\x1d\xab3V\x95\xa9\xdbAZ\x7f2E\x0c\x97\xe4A\x9c1\xda{\xa2\x1e\xedA\x10\x96,\xd2]\xb5\xf3A\xa4\xf0\xd4=c\xb2\xf9A\x0cp3\xb2w9\x00B\x83t\xe8\x87H\xef\x03B\xbc\xcf\xe4\xe3i\xed\x07B\xf7V\xfd\xf4\xd3&\x0cB \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_european_option(
            payoff_type='CALL',
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            strike=66380.00,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_european_option_pricer(
            instrument=inst,
            pricing_date=self.as_of_date,
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_european_option_pricer:', result.SerializeToString())
        self.assertEqual(result.SerializeToString(), expected)
        
    def test_cm_american_option_pricer(self):
        expected = b'\n\xf4\x06\tG\xe8\x1f\rfG\xf0A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08p\x14\xe9h\xe2+\x11\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08X.3\x87\x90/!A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\xe0GW\xe70T\x0eB\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\xc0\xcd\x8e7"<\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08/\x0e|z\xf7G\xb6A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xc0\xeb\xdfl\xd88A\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08M\x94\x0ct\xaf\xcbC@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x00d\xfe\x85\x10\xa3pA\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00\x94\xb86!\xa2\x86\xc1\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x8b\xe5\x96\xe7Ui\xd4\xc0\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\x10\x1f\xe1\xb8\xef\x00\xc1\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xccG\xd9\xebK\x02\x11B\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xc8\xd64\xe6\x7f\xc5\xa5A\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x9c\xd1C\xb3Y\x8bm\xc2\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x80\x91@\x8a\xe53\x98\xc1\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xc9Z \x86,\x10\x95A\xec\xa4\x93\x171\xa5\xadA\x94\t\xc40)x\xc1A\xb5W>\x01\xc4\xbc\xd1A:\xa1{\xad\xd1\xcd\xdfA\xff+|Tp\xb8\xe9A\xd4\x90\x80\x0f0\x1d\xf3A\xe8U\xb7\xdd\x1e\x86\xfaA\xe4\xd7\x15\xfbIj\x01B\xfe\x8a\xf0\\\xae\xe2\x05Bh+\x8ea\xee\x8f\nB\x885\xa8\x1c\xb1T\x9cA,\x8cV\n\x10f\xb2A{R\x16\xc3\xba`\xc4A?\x02\xaf\xb5<\xbd\xd3A\x7f\xbaL\x0c{\x17\xe1A1c\xd2\x99{\xf6\xeaA\x06\xf4\x8coA\xb1\xf3A\xda\xa6~[\xa5\x02\xfbA\xdc\xd8\x0f\xd7\x1d\x9a\x01B?.\x80T\x91\x04\x06B\xa6\xediQD\xa6\nB\xb2k\xb0s\x1cm\xa2A\xd9!\xcev\xb3S\xb6A\xba\xad\xe6\xfc\x99m\xc7Ah\xdb\xd0^\xef\xc6\xd5AKC*\xd9\xddH\xe2A\xdbb\xf9\xe6\xa54\xecA\xaa1lN\xbcF\xf4AC\xf0\x8d\x8c\xcc\x82\xfbA@\xfb:\xfa\xbe\xcc\x01B\xc7\xdf\xd64\xc3)\x06B\x98B3\x95\xde\xbf\nB\x9c<2\x93MO\xa7AN\xea\xd4\x13\xa0\x95\xbaA\xc2\x84\x0f8\xf6\x9a\xcaA\x99\xe6a\xde\xa6\xd8\xd7A\x80\x9aU\xe1\xf0z\xe3ArV\xb3\xb8\xe7r\xedA}\x7f\xb4?n\xdd\xf4A\xbd\xa7\x1b\xdf#\x06\xfcA\x076S\xb4\xe7\x01\x02Bdy; \x0cR\x06B\xdfSW9\xa6\xdc\nB)\x9e\x0e\xf2\xc6\xcd\xacA\xe8\xad2\x95\xf5%\xbfA\x99\xee\x984n\xe5\xcdA\xce\rp\x1e_\xf1\xd9Al\xb0\x87k\x99\xad\xe4Af{"\xc2:\xb1\xeeA\xc9\x168Z-u\xf5Aj\xc9\xb6\xf0J\x8c\xfcA\xb3\xf3\xc1\x18Y9\x02B\xd1\xba+x4}\x06B\x07\x8e\xdd\xd9|\xfc\nB\x16\xeeB\x85\xf2q\xb1A\x89\x9b4\x81\x7f\xff\xc1A\xefI\x03\x95\x02\xa5\xd0A8\xc5?\xfd;\x10\xdcA\xe4\x1d\xe2-\xc1\xe0\xe5AV\xff\x8b\xa9\x99\xef\xefA\x08\xdef\x81\xd6\r\xf6A\x94\xb3T\xf6\xee\x14\xfdA k\x94\xa8\xdar\x02B$\xa1\x00U\x06\xab\x06B\xce$\x86X?\x1f\x0bB95\x08\xf4\xfe\xc5\xb4A\x86\x11}\xd8\xa5\x8d\xc4A\x88\xbe\xef\xd4\x0bc\xd2A\xf3\xe4\xc9\x16\x824\xdeA\x8d$\xbbeU\x14\xe7A\xab\xf0\xed\xea\xff\x96\xf0An\x18\x0c\x13L\xa7\xf6A\x98\x9f\xc0\x90\xc8\x9f\xfdA\xbfH\x0e\xd69\xae\x02B,\x8ewiN\xdb\x06B^\x81\x02\xef\xc7D\x0bB\xfdQ\xcaB\xe0_\xb8A#PY\x93\xde:\xc7A,\xa1\x8d\x86\xa8+\xd4A\xce/}\x81\xc8.\xe0A\xb6\\\x02&FH\xe8A\x03\xbf\x1e\xa446\xf1A\x12\x0e\x01\xe0tA\xf7A\rNE\xfe\x99,\xfeA\x9f\xe0>yI\xeb\x02B\x88\xd3T\x7f\xdc\r\x07B*\x8f\x1d\xb8\xefl\x0bB-\xfag7?<\xbcA\xf7\xf0\x9a\xb7\xc6\x04\xcaAp\xf0(\xe2\xd0\xfd\xd5A\x1c\xa4\xb5[oE\xe1A\x93\x10\xdf\xcd\x85|\xe9A\x9c\x80E?i\xd5\xf1Ar\xd7e];\xdc\xf7Ao\xfe\xcc\x9a-\xbb\xfeA\r\xf3:C\xe1)\x03B\x80\xd0E\xae\x83B\x07Bc8 \xcb\x8f\x97\x0bB\xdd0y\xcd\xd8+\xc0Am\xad.8(\xe9\xccA\xf0\xd7QU\x9b\xd8\xd7A\xaa0\xeb\xe6\xf9]\xe2A\x1f\x07Q\x9d\x08\xb1\xeaA5r%.\x9ct\xf2AZ\xaa\xdf\x00\x8dw\xf8A\xc6\xed9\xa1TK\xffAv\xe3\x867\xddi\x03B\xd5\x08\xbdd\x1ay\x07B\x93Q\xe8\x01\x82\xc4\x0bB\x94\x0e\x06NgW\xc2A\xe8\x13e\x04\xf9\xe5\xcfA\xdab@\xae8\xbb\xd9A\x8d=a?4x\xe3A\xa82w`\xc4\xe5\xebAG\x94L\x0c\xcc\x13\xf3AW\xc1\xe0\xbdY\x13\xf9A\xc0\x15\x97"\xe6\xdc\xffA\x82M\x82/\x1d\xab\x03B\xef\x14uSz\xb1\x07BO40~\xa1\xf3\x0bBq\x99\xbc\xb2\x1e\x9f\xc4A49\xdc\x8d\xac|\xd1A\x0e>\xc0\xc1\xf0\xa4\xdbA,|t\x15\xf1\x93\xe4A{\xfe\x1c,\xb0\x1a\xedAw\x80\xe6\x97\xf7\xb2\xf3A\x03\x9c\x86\x9c\x93\xaf\xf9A\x98n\xcb\x14\xdf7\x00B\xfd\x9dhi\x84\xed\x03Bi\xb6#G\x80\xeb\x07B\x13\xf3\x80\xfe\xca$\x0cB \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_american_option(
            payoff_type='CALL',
            expiry=datetime(2020, 8, 19),
            strike=66380.00,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_american_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_american_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)
    
    def test_cm_asian_option_pricer(self):
        expected = b'\n\xf4\x06\t\xc8\xfd&\x1e\x04\x82\xe1A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08x\x89ky\xd0\xe7\x00\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x089\xb4\xe2<\xe4v\x1dA\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x1cA\xd2[y~\xfdA\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\xe0\xb3\xe7\xb0\xb2+\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x87\xf5w\xda\x9e\x19\xb3A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xb8Q-Y)(A\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xfb\x12\x00\xb9\x90\xf3Q@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xff?\x91L\x8e,~A\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\xd0*\xa16\xbc\x92\xa9\xc1\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xe2\\\x19\x08j\x18!A\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x80\xd9\x9f\xca\xa8^LA\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x88xf\x1a\xa5\xf5\x02B\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x90{;_\xaaD\x98A\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xac\x0f\x8b\x8f%\xe9?\xc2\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\xd8\x10=*$j\xc1\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xf7\x0fm\xeaM\x93f@\xbaxg\xba\x14\xa0IA\xbe\x91\xa9\xe3\xcc\xca\x81A\xcdq\xb6\xea\xa8\xcd\xa7A\xde5\x0b\x19\x0e=\xc5A\xd6:\x84&\xb8\x1e\xdbA\xf2k\x9c\x8f\xf6\xae\xeaA\xb6\x8eq3m\xbf\xf5A(N\x97\xe0B\x19\xffA\xc2\xc4\x10\x87\xc0g\x04BP\xe4m\'\x9fO\tB\xb3V\xae\xb0\x9f[\x07A\xec964N8XA).\xd1\xb3\x9a-\x89A\xe6h\xb9\x80\x9b+\xadA%YK\xb5\xaa\xaf\xc7A5H\x98Y\x9b\x8d\xdcAg\xb5\xd2\x8fK?\xebA\xbdy;e\xcc\xe6\xf5AP\xda\xa8\xd4\x88(\xffA\xd6\xc6u\xc4xi\x04B\xb9\x01jl\xd0O\tB\x90\xe2\xa3\xc4\xb71"A\x19\xee\xf4.9\x03eA\x9e\x9cG\xc3\xc6\x02\x91A8\xc8\xc2\xa4\xe9w\xb1A\xdf;Bx\xd0,\xcaA\xd7\xc7\xc5\x0b\xf1\xfc\xddAt]y\x07\xc7\xd4\xebA\x894\x1d\xdc#\x12\xf6A\xac\xa0\x07]\x1d;\xffAL^c\xd1Vl\x04B\x04\x14\xe3\xf8>P\tB\xd3\xf2\xcf\xcff\x957A\xe2\x9e\xf6\xedy+pA\xdc\x0e\x05\x12\x978\x96A\xe3O\xc19\xd6\x8f\xb4Ad\xdb\x06@\xe5\xb1\xccA\xd2\x1f\x86|\x83l\xdfA\r\x7fWT\xa3m\xecAU\xee\x94~/A\xf6A\x00\x1c\xfdP\xedP\xffAR\x8cw\xb2fp\x04BzO\xcbg\x0fQ\tB\x01\xb5\xfa!u\xf9EA\x97\xbe\xce\xaf\x98\x97wA\xe6\xd94kzL\x9cA\x9b\x82\xba\xbfU\xd4\xb7A\xdc\x10\x8a\x0b\xe7=\xcfAw\xf7\xf0\x8f n\xe0A\xc1\x00\x0f\xc9T\t\xedA\xbes1\xd1\x9bs\xf6A\xd0\xd2\x1d,\xa1j\xffA{>]\xdc\x81u\x04B<4\xbeBIR\tB\x94dd\xc2P\x14RA<\x8dG\xfc\x9f\x88\x80A\\\xff\xa6\xe3\x01\x89\xa1A\xc0\'\xd4\xb3\x89I\xbbA?\xceNT#\xe8\xd0A-H\x8ef\x07&\xe1A\xdeO\x99y\xc5\xa7\xedA\x11x\xe1\xe2\xe6\xa8\xf6AV\xb9Q\xaa-\x88\xffA\x03\xd7\x05\xdf\xd4{\x04B\x8c\xa7i\xf72T\tB\xfa\xd6\x9f\xd8\x1e\xe1]A\xda\xca\xcb\x0e\x07>\x86Ai\x93\x8d\xd9*E\xa5A\x1d\xc1e\xc1\xeb\xe2\xbeA\xc2\xb0\xd2g/4\xd2A\xe61lK\xfc\xdd\xe1A\x80\r\xaf\xe9\x9cH\xeeAB\xa9g\x06\xe8\xe0\xf6A\xb1z-z\x06\xa9\xffA5\xae\xe5\xa3^\x83\x04BxbB\xc4\x0fW\tB./\x8d\xf9\x89\x8fgAu\xc0\xeb\x10!\xf4\x8cA\x96\x92\xae\xd4\xf3P\xa9A\xe8\x0c\x87?\xabP\xc1A\x9dP\xbb\xec\xdf\x82\xd3A\xd9c\xa5{\xf1\x95\xe2A_I\xbb\x02n\xeb\xeeA6\xe6Jc\x8d\x1b\xf7A\xcbI^s\x83\xcc\xffA\xbb\xf86 I\x8c\x04B\xefpRo\xe4Z\tB\xd1\xce\x96\x0ch\xffpA8?\x13Pzl\x92AYu\xc1\xadt\xb3\xadA]\xeb\x8e\x84\x01A\xc3A\xca\xf8{\xd3\x93\xd3\xd4A<\x8at\xef\xe2M\xe3A\x90*n3o\x90\xefA\xd8\xbbI\x06\xbaX\xf7AYf"\xaf\xd5\xf2\xffA\x03?v\xd6k\x96\x04B\x00^\x142\x9b_\tB2G/^Q\x1fwA\x94\xc4\x1e\xa0\x02\xdb\x96A_{5\xe6\xb3/\xb1Aa\t\xf7\x04\xa0>\xc5A\xa2\x90\x96G\x14&\xd6A\xf9\xba\xae\xff\xd8\x05\xe4Ac\xd3\xa7[\x92\x1b\xf0A\x1c\xae\x7fA\x15\x98\xf7A\x19\x9d7\xbd\xe3\r\x00B\xec\xd5\x9a\x10\xec\xa1\x04B\x1a\xee\xa0\x99Ce\tB\\9C^\r\xcc~A\xa5H\xd6C\x17\xd2\x9bA[\x9f\xb8R\x97\xb2\xb3Ae\xe2\x8f\xd3zG\xc7A\xf9,\xa0-<z\xd7A\x11\xf1\x91\x0c\xd6\xbd\xe4A\x89\x02#2\xc9o\xf0A\xe7\xabh\xccO\xd9\xf7AA\xd6G*\xc7#\x00Bdg\x7fb\xcf\xae\x04B8Wi<\xe7k\tB\xbeY?i\xe3\x06\x84A\xec\xf2\x95ak\xac\xa0A\xcbb)\x03\x87\\\xb6A\xb5 /\xd3\xba\\\xc9A\xcc(\xd5F\x01\xd0\xd8A9\r\xad\xc3\xceu\xe5A|\xb4o\x80\xbb\xc4\xf0A9\xc2\x92\xbbK\x1c\xf8Ak\xe7\x07\x04\x04;\x00B$|\xc5\x7fg\xbd\x04B\xa6\x0cRy\x9ds\tB \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_asian_option(
            payoff_type='CALL',
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            strike_type='FIXED_STRIKE',
            strike=66380.00,
            avg_method='ARITHMETIC_AVERAGE_METHOD',
            obs_type='DISCRETE_OBSERVATION_TYPE',
            fixing_schedule= [
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],                
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_asian_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_mc_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_asian_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)
    
    def test_cm_digital_option_pricer(self):
        expected = b'\n\xf4\x06\t\xa0\xce\xe7`\xf9\xe7!B\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x8c\x19!/:8@\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xe3d\xf1\xca\x17NHA\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\xe0F\xd6Gy\xe78B\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x000\x81Y\x02\x93j\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x7f\xc3\x9c\xa5\xd8\x82\xdfA\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xc0\xc9\xc0\xc9fdA\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x00>\xe0\xd3\xa2\x82c@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xff_\xcb\xd8\xabe\x90A\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08@\xbf\xdf\xbbL\xff\xcf\xc1\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08S\xff\\\x12RLe\xc1\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00z\x8a!\x10\xac\x91\xc1\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xa0\'\x068\xbf\xaa\xe7\xc1\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\x14;32K~\xc1\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08 \xfe\x07\xa0\xdf\xa9\xb2\xc2\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x80\xc8\x7fh\x11\x94\xde\xc1\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xee\xcc\xee\x9d$\xd7\xddA\x82\xaf\x90a2O\xf2A\x1d\xce\x8e\xf3L\xb5\x02BKU\x11!Dg\x10B\xda\x93\xeb\xab\xe1>\x19BC\xc2c I\x86!B\x8b7\x0e\x06)Y&B\x011\xd5\x86\xb3\xac*Bd\xb7\x98\x82bX.Bzp\xf9\xee\xb4\xa20B\x8d\x83\xa5E\x83\xd31B4$\t\xd3X\x80\xe2A\x08\x15\xbf\xacE\x08\xf5AB<\xdeE"G\x04B\xedKnH\xba\x0f\x11BF\x16/~\xb5\xa0\x19B\x9a\x90|\xaa\xb9}!B\x04V^Py\x1c&Ba\xb1,\x1cFP*B\x85\x0e1\x99\xb5\xef-B\xa4\x0eql\xd3s0B\x89\xb1\xc9Hc\xaa1B\xa9!\x96\x8b\xeeF\xe6A\xc5I\x1c\xfbW\xbe\xf7A\x80\xbc\xd8\x9c\xf4\xd2\x05B\xe2T\x05!\x86\xbe\x11B\xfd\xcb>\x89\x1e\xf7\x19B?O\xbb\xee\x1cr!B\xf0\xd8\xe8\xf8\x00\xe5%B\xf1\x0f\x8fM\x94\xfc)B?\xfdq\xa0_\x90-BG\x03\xc7\xf5<H0B}V\xcb?\xc0\x821B\x8f\xa1\xf1\xab\xc49\xeaA)(\x99L\x01c\xfaAN\xaa\xa6\xd2\x11G\x07B\xfc?\x94\xe0\xd7Y\x12B\x86\xd1\xfar\x18K\x1aB\x13%/_\x81o!B\x1c\xc3\x12&S\xb6%B\xde\xed\xff#g\xaf)B\xe7\x91N\xa6\xab1-B\xf9XK\xa1\xb7\x180B\xb1nF\x9aO]1Bn\xd6\xee3\xea-\xeeAp3\xa3\x91h\xf8\xfcA\xf3\xdf\xae\xa4\xdd\x9d\x08B\xbcL\xe2\xe5p\xea\x12Bo\x91}i\x81\x96\x1aB\xb3J0\xbd\x05j!B}\\\x836#\x88%B\xcc\x8f\xa0\xf2\xbcd)B#:\x8e\xa2\x0e\xdf,B\xcb;\xff\x05\xc0\xdb/B?>\xe8BU91BO\x90Y\xd8\xe5#\xf1A\x16\x9f1\x87"\x8d\xffAz\xfb\x9cgy\xed\tB\x86\x8b\xeb\xe2\xf6i\x13B\r2<\xdb\xbc\xde\x1aB\xafG\x06-\xa4l!Bj\xae\xee2\xbeg%B.\xc2\x18z\x9f&)B\xbc\xf0\x9cI\\\x89,B\xf8P\xa9\n\xda\x83/Bw\xbc\x0b3R\x101B+\x96\xa6]\x80+\xf3A\x1b\xa7[No\xfd\x00B\x03\xe7C),%\x0bBS`\xe9Q|\xe7\x13B\xb1k\xc8\xe3\xdc$\x1bB\x82\xe7\x9a\xe9al!BZ\xab\xd2\x9b\x0cB%B\x89\xaa\x04\xdc\xd2\xed(B8(zm^@,By\xabO\x13^7/B\x13\xd6\xd1\xc1K\xe70B\x19.B\xba\xceB\xf5A\xbb\x19o\x0f\xd80\x02B\x11~\xa5r\x08S\x0cB\x8d\xa1\xfe\xd2\x10b\x14B\x90\xd6\x87\xea\xe9d\x1bB\xc6\x94\xfa\xd7\x9ai!B\\8\x8b\x03\x15%%B\xab\xe1RH\xc0\xb2(B6\xf5K\xa6\xf5\xf9+B\x9b\xa3\x8e\xc9J\xe9.B\x14U\xf3N(\xc60B\xce2\x8b^\xb6D\xf7A\xc0\x1d\x1eQ\xe3Q\x03B\xd3\xd9\xe7\xa4\xedm\rB\xba\xcb\x02"\xd0\xcb\x14B\xca\x9c\xfe\x8f\x1f\xa2\x1bB\xc7\x97\xad\xc6\xd3f!B^)\xf1\xd6n\x02%B\xe1Ynp-\x80(Bbj\xc8H\xa7\xb4+B\xc4\x9b\xda\xb6\xe6\x9d.B:J\xe4\xcb?\x9b0B\xe4(\x86P#P\xf9A\xee\x99\xd1\xa5\x01o\x04B@=\xf69\xfco\x0eBK\x8e\xe7\xbeF3\x15B\xd0\xa6\x17*\x16\xd7\x1bB0\xeb\xda\t\xb0l!B\xc5\xbf\x1d\xa3}\xe8$B~\xd4\xddE\xaeP(B\xb1:\xd2\x17\xbct+B\xe8\xf8\r:yY.B\xce\xeb\xe8b\xfdy0B*E^Y\xeaE\xfbA\x10]\xa4S_\x85\x05B~,gc#y\x0fB\xef\x1f\xf4\xdd0\x95\x15Bw\xfe\xf4\xdb\x98\x0e\x1cB+!\x99\x94\xc9l!B\x19`Rl\xc4\xd9$B\xaec\x81\xc7\x14"(B\x85\x83\\%@D+B\x97W1\xcf\xc5\x14.B\xf4k\x87\xc5\xd7V0Bb\xfdJm\x17B\xfdA\x8a\xd3\xfa\xf6r\x91\x06B\xddn\x17\x8a\x02<\x10B~\t\xf9\xd7\x88\xf1\x15BEci\x82!F\x1cB?\x81\x865\xd8p!B\x0e?k^u\xc2$B2Ib8\xae\xf8\'B-\x9fG\x16\xd1\x07+BB\x14\xb4\xf2\xb8\xdc-B\xc6W\xb0tx60B \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_digital_option(
            payoff_type='CALL',
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            strike=66380.00,
            cash = 1.0,
            asset= 0.0,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )
        
        result = cm_digital_option_pricer(
            instrument=inst,
            pricing_date=self.as_of_date,
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_digital_option_pricer:', result.SerializeToString())
        self.assertEqual(result.SerializeToString(), expected)
        
    def test_cm_single_barrier_option_pricer(self):
        expected = b'\n\xf4\x06\t\x0eU\xba\xc6\x9a<\xf0A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08:\x15\x9a\x95:D\x11\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x03\x9c\xa1\x93AI!A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\xcc\x08\x0f\xf3\xd8\x81\x0eB\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00hGZ\x1aJ<\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xf8\xd2\xe6\x84Fi\xb6A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x18\xc7\xb8\xd3\xfd8A\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xbf\xea\x1a\xa1\xbc\x1eC@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xff\xe2\x90_\xb6\x11pA\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00\xeb\xac\x8d{\xde\x86\xc1\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08V`\\\xe6P\xdc\xf1\xc0\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff\x8fD(\xc2\xa3\x1d\xc1\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xc3\xebm\xb3/1\x11B\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xa8\xa8\xb5\xbc\x84\x01\xa6A\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xc3\xe3sP\xb4\xf4m\xc2\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\xe6\xf6\xdd3\x8a\x98\xc1\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xae|=\x037\x0f\x92A\xb5\xb8\xe5\x8a\xac\xaf\xaaA\x00\xe93\x98\xddS\xc0AG\xb4\x92\xefi\x0b\xd1Ab\xed&\xeb\xfb(\xdfA\x0f\xaf\x17c\xb7\x84\xe9A\xad\x88\xeb\xefl\x1a\xf3A]\xc73\x80\xdd\x89\xfaA<6\xf1\xe7^l\x01B\x88\xd6\xc9\xd2\xe8\xe4\x05B\xe5\x1d\xf0\x1dA\x92\nB \xc7\xbf\x85_\x08\x99A\xd0-Q\x02\xbe\xe8\xb0A)0\xfa\xeeVM\xc3A\x03F\x0b4\x18\x1e\xd3A$\xbf\xf3M\x04\xd0\xe0AMh,n\xc6\xca\xeaA\xf8\xd6\x03\x16P\xaf\xf3A1s%\xa9R\x06\xfbA]\xab\xf4\x9a)\x9c\x01B\xc8nG\x97\xc3\x06\x06B\x08\xc3\xf0\x8f\x90\xa8\nB\x9a\xd8\xb6\xe2\xb8\xaa\xa0ATz\x92\xc0\x10\xda\xb4A\x99\xa4=\xb8\xfck\xc6A\xe9h%\xd448\xd5AR\x85\x8f\xb0\xac\n\xe2AQ\xe5~\xac\x86\x0f\xecA\xc76\x88\xd7tE\xf4A\xcb\xcd*\xaci\x86\xfbA\xa8:\x13\xf7\xc1\xce\x01BY\x8d]T\xed+\x06B\xeeN{\x1a$\xc2\nBV\x99qZ\xaby\xa5A\x0c\x05\x16\xb9g$\xb9APUg\xfa;\xab\xc9AV!T\t\xa0X\xd7Ae\xf6y2\xa1D\xe3A}\xa2\'t=S\xedA\x04\xae\x0f\x95\xb1\xdc\xf4A\xb3\x82$\xde\xb1\t\xfcA\xb1a\xa0M\xe2\x03\x02B\x9f\xf8m<.T\x06B`\x18\xd9\xe0\xe4\xde\nB^V\xc6\x87\xfa\xec\xaaA\xd8\x0e\x88\xc6\x93\xc0\xbdAT\xbd\xf0\xea1\x07\xcdA5!\xa0\x93v~\xd9A\xff\xc2\xa5\xf3\x03~\xe4A\xd9\xd3\x07\xfa\x1e\x96\xeeA\x80RF\xfd\xe2t\xf5A\x82\xb5\xd8\xc4\xca\x8f\xfcA\x18|\x05\xb1K;\x02B|\x99v\xbcN\x7f\x06B\x92\xcb\n\x92\xb4\xfe\nB>\\4\xfcr\x7f\xb0A\xd7\xb7h\x01\xe6S\xc1Ag\xb1\n\xd8G>\xd0AN\xc5\x18\xc3\x01\xa9\xdbA\x851\x83P\xf0\xb6\xe5A3\xf4\'\xe7R\xd8\xefA\xcf\xf7\xd0\xf3\xea\r\xf6A\xc5*J\x7fa\x18\xfdAf,\x9f\x9f\xc5t\x02B[~\xb2\xf4\x18\xad\x06B\\\t3\x1fp!\x0bBDWd\x0eM\xd4\xb3A\xadv\x9b\x00\xe2\xe9\xc3A<I\xc6\xd3@\x04\xd2A\x80\xd7*@\xac\xd7\xddAwR\n\x0e|\xef\xe6AJ\x8cn\xcd\xfb\x8c\xf0A\x9c1\xa0\xac\xaf\xa7\xf6AB\x80;\x9a.\xa3\xfdA\x9b?\xf3\x87\x1d\xb0\x02B\\c\xf6\x9cY\xdd\x06B\xe8g;\xce\xf1F\x0bB\x91v\xd6rTq\xb7A\xef\xf0X\x81Y\x9f\xc6A\xb8\xf4\xb9FM\xd4\xd3A\xea\xfd\xd9\t\xfd\x04\xe0A\x8d\x19\xc4d\xb8\'\xe8A\xe3\x17,A\x92-\xf1Ay\x80\x00\xf2\x1aB\xf7A\xba3\xceA\xf4/\xfeA\xd0\xd7\xb7=&\xed\x02B\xef\x8f\xfe\x81\xe0\x0f\x07BU:r\xc3\x12o\x0bB\xac\x9a\xbb\xa9\xb0R\xbbA\x9d\x9a\x03,\xa9q\xc9A\x1b\xf3\xcb\x1fa\xad\xd5A\xafK\x83u\xc1\x1f\xe1AC\xa4\x02\xe3\xb2_\xe9A\xbc\x05\x19\xe6\xf5\xcd\xf1A\x1b91\x8d\x19\xdd\xf7A\x1c\xad\x87\xc1|\xbe\xfeA\x10\xcb[m\xb7+\x03B\x81\xeb\xd8\xbc\x80D\x07B\x04]`\x1d\xac\x99\x0bB\xdf\x196\x91\x86t\xbfA\xba!Itk^\xccA]\xa7\x1c\xd0\x93\x8e\xd7A\x9bu \xf4\xf6;\xe2A$\xd8N\'v\x97\xeaA\xbb\xeb\x06\xd4-n\xf2AX\xdd\xc3\xca\x9ax\xf8AD\x0c\x87E\x99N\xffA\x14C\xa6\x15\xadk\x03B\xebg+\xbc\x10{\x07BZ\xcfF\xbb\x97\xc6\x0bB\x1ag\x02\xb8\x86\xe9\xc1A7\x8c\xe8)tc\xcfA\xfe\xb7)\x89\x1aw\xd9A\xc4Z\x03DwY\xe3AS`\x94w\n\xcf\xebAq\xe9\xb9\x99?\x0e\xf3A[\xe8Q\x15\x90\x14\xf9A\xab\x84\x90\xd1 \xe0\xffA\xd7\xe5E\x0b\xe7\xac\x03B\'0\t0j\xb3\x07B[\xd8\xbf\xc2\xb0\xf5\x0bBgeRbN5\xc4A\x91\xd1W\xcae?\xd1A.mN\x8aCf\xdbA\x02\xd7\xd0%!x\xe4A\x1d`\x8c:v\x06\xedA\xe8+z\x95/\xae\xf3A[6-\xa2\xec\xb0\xf9A\x0cp3\xb2w9\x00B\x83t\xe8\x87H\xef\x03B\xbc\xcf\xe4\xe3i\xed\x07B\xf7V\xfd\xf4\xd3&\x0cB \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_single_barrier_option(
            payoff_type='CALL',
            strike=66380.00,
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            barrier_type='UP_IN',
            barrier_value=66380.00*1.05,    
            barrier_obs_type='CONTINUOUS_OBSERVATION_TYPE',
            obs_schedule=[[],[],[]],
            payment_type='PAY_AT_MATURITY',
            cash_rebate=0.0,
            asset_rebate=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_single_barrier_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_single_barrier_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_double_barrier_option_pricer(self):
        expected = b'\n\xf4\x06\t\\\xad\xe0\x17\xadI\xf0A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08^\xf4\x1f\xb5\xe5E\x11\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08_\x14mj\xdb+!A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08p[\x15~\xf1\x81\x0eB\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\xf8\xb4&\xd6L<\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x83k\x14\xf8(C\xb6A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xe0\xd4\xd3\xe7\xfd8A\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xd1o\xd4\xb5(\xf3B@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xfd\x82\xde\x13-\xdaoA\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x80\x86\x16\x10x\x9f\x86\xc1\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08G.\xea\xa7\x00\x92\xd2\xc0\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff_\x9fjD\xd1\xfe\xc0\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xefY\xdf\xb0z\x00\x11B\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08(J\x84g,\xc3\xa5A\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xa2H\x1f\x14\xc6\x8am\xc2\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\x84\xbf\x9bl3\x98\xc1\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\x90\xbc\x0b\x11U\x19\x95AMK\xca\xf2W\xb0\xadA\x8e\xb0\xa8\x01\xcf}\xc1A\xb9\xef\xb5\x9f\xa9\xc1\xd1A\x8a\xe0\x19i\xcf\xd3\xdfA\xfb3\x86Xl\xbb\xe9A\x00\x8a-\x0c\x14 \xf3A]\xc73\x80\xdd\x89\xfaA<6\xf1\xe7^l\x01B\x88\xd6\xc9\xd2\xe8\xe4\x05B\xe5\x1d\xf0\x1dA\x92\nB\xdeig\x1f\xfb_\x9cA\xff\xd3\x82\xa1ol\xb2A`A4\xbf\xd4f\xc4Ab\x06\xa5sQ\xc2\xd3A\x8b\xaa\xda\x19\xd4\x1a\xe1A\xfdSw/\x86\xfa\xeaA1\xda\xe3\xa1A\xb4\xf3A1s%\xa9R\x06\xfbA]\xab\xf4\x9a)\x9c\x01B\xc8nG\x97\xc3\x06\x06B\x08\xc3\xf0\x8f\x90\xa8\nB"_\x1a3\xe0s\xa2A\xc2\x86\xaa\xe2\xdbZ\xb6A\x0ey\xf7\xd3 t\xc7A^\x8c\xcc\xc1.\xcc\xd5A\xeb\xcb\x98\x86VL\xe2A\xe9\xe8\x7f_,9\xecA\xda\x04\xa0\xb4\xc4I\xf4A\xcb\xcd*\xaci\x86\xfbA\xa8:\x13\xf7\xc1\xce\x01BY\x8d]T\xed+\x06B\xeeN{\x1a$\xc2\nB\xdb\xd5%~9W\xa7A\xd0\x1f\xd9a\x8c\x9d\xbaAPv}\xdb\xe2\xa1\xcaAwk\x95\xeb\x0c\xde\xd7A\xe1\xb0\x9e\x0cc~\xe3A\xdcQP\x9e\x9bw\xedA\x8e~{\x98t\xe0\xf4A\xb3\x82$\xde\xb1\t\xfcA\xb1a\xa0M\xe2\x03\x02B\x9f\xf8m<.T\x06B`\x18\xd9\xe0\xe4\xde\nB>g\x9e|\xe0\xd6\xacA\x85\x03\xc9\xb2\x9f.\xbfA!\x08\x06\xec\xb9\xec\xcdABE\x8bJ\xe8\xf6\xd9A\x7fd|\t\xe9\xb0\xe4A\x80p\xa6I\xf1\xb5\xeeAM\x9f#\x84,x\xf5A\x82\xb5\xd8\xc4\xca\x8f\xfcA\x18|\x05\xb1K;\x02B|\x99v\xbcN\x7f\x06B\x92\xcb\n\x92\xb4\xfe\nB\xc7Ho\'\x17w\xb1A\x0e\xe9\x82\x0f0\x04\xc2AA\xa7\xea\xce\xd4\xa8\xd0A\xd4\xa69\x1e\xe5\x15\xdcA\xf4\xab\xd2;\xd7\xe3\xe5A\xc6bH\xa39\xf4\xefA\xfb\x86J\xdf\xcb\x10\xf6A\xc5*J\x7fa\x18\xfdAf,\x9f\x9f\xc5t\x02B[~\xb2\xf4\x18\xad\x06B\\\t3\x1fp!\x0bB\xabb\xe9\x1e\xbb\xcb\xb4A\x1b\x16\xa4D\xae\x92\xc4A*{\x93s\x07g\xd2A\x9f\xf2\x83WH:\xdeA\xca\x0b2\xf5\x1d\x17\xe7A\x99\x15+=<\x99\xf0A\xa5\xec\x0716\xaa\xf6AB\x80;\x9a.\xa3\xfdA\x9b?\xf3\x87\x1d\xb0\x02B\\c\xf6\x9cY\xdd\x06B\xe8g;\xce\xf1F\x0bB\xcbwF\x852f\xb8Av\x1e\xa1\x1e;@\xc7Ai\x1b\xaf\xc2\xca/\xd4A\xac\xf5G\xec\xb81\xe0A\x00\x81#\xff\xafJ\xe8A\xe9\x7f&\x03W8\xf1Aa\xc9\x8a\xd0RD\xf7A\xba3\xceA\xf4/\xfeA\xd0\xd7\xb7=&\xed\x02B\xef\x8f\xfe\x81\xe0\x0f\x07BU:r\xc3\x12o\x0bB$\x00;?%C\xbcA\xb5\xb9E\x9bs\n\xcaAx\x1fH%\x17\x02\xd6A\x9b\xa7\xfc\xebkH\xe1A\x17\x8a\xa0\xb4\x82~\xe9AT\xb0\xe9\xael\xd7\xf1A\x9f\xf5>w\x0c\xdf\xf7A\x1c\xad\x87\xc1|\xbe\xfeA\x10\xcb[m\xb7+\x03B\x81\xeb\xd8\xbc\x80D\x07B\x04]`\x1d\xac\x99\x0bB@\x97\xd83\x94/\xc0A\xacG\xcf\xb4!\xef\xccA\x0c\xfal7\x03\xdd\xd7Ai\x04E\x94\x01a\xe2A\xdbd\x05\xb1\x8d\xb2\xeaA\x12 N\xc5|v\xf2A!(\xb4\xcaPz\xf8AD\x0c\x87E\x99N\xffA\x14C\xa6\x15\xadk\x03B\xebg+\xbc\x10{\x07BZ\xcfF\xbb\x97\xc6\x0bB\x86\x90\xf7Ti[\xc2A<\xca\xd3l;\xec\xcfA\x8a\x92&\xf3\xbf\xbf\xd9A\xc24\x80\x1aF{\xe3A\x95\xa8\x7fU\xca\xe6\xebA|4\xbf\xf0\x86\x15\xf3A5\xf7\xc4\xeb\x0f\x16\xf9A\xab\x84\x90\xd1 \xe0\xffA\xd7\xe5E\x0b\xe7\xac\x03B\'0\t0j\xb3\x07B[\xd8\xbf\xc2\xb0\xf5\x0bB\xed;ahe\xa3\xc4A\xe9\x19Xn\xf0\x7f\xd1A\x1d\xab3V\x95\xa9\xdbAZ\x7f2E\x0c\x97\xe4A>\xf4\xa4K3\x1b\xedA\xd9\xce\x7f\x01\x8b\xb4\xf3A\x8fA\xc0\x11<\xb2\xf9A\x0cp3\xb2w9\x00B\x83t\xe8\x87H\xef\x03B\xbc\xcf\xe4\xe3i\xed\x07B\xf7V\xfd\xf4\xd3&\x0cB \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_double_barrier_option(
            payoff_type='CALL',
            strike=66380.00,
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            lower_barrier_type='DOWN_IN',
            lower_barrier_value=66380.00*0.95,    
            upper_barrier_type='UP_IN',
            upper_barrier_value=66380.00*1.05,    
            barrier_obs_type='CONTINUOUS_OBSERVATION_TYPE',
            obs_schedule=[[],[],[]],
            payment_type='PAY_AT_MATURITY',
            lower_cash_rebate=0.0,
            lower_asset_rebate=0.0,
            upper_cash_rebate=0.0,
            upper_asset_rebate=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_double_barrier_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_double_barrier_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_one_touch_option_pricer(self):
        expected = b'\n\xf4\x06\t\x000\xa4L\x13\x83&A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\xb8\xf9\x08\x1d\xf3\x17(\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x8d#\xa2\xb7n\xa2R@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x080\xb2"\x151\xdc\x19A\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00p\x02\xcc\xc8\xbcS\xc0\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x18\xe9\x13\x8b\xca(\xe8@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00`\x1a\xd5B/E@\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xdb\xbe\xca\x83C\x86R?\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xfd\x17u\x16##\x7f@\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x009\x92\x89\xca{\xa3\xc0\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x0e%\x7fU\xce\x9dq\xc0\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff\xa23\xe6\x05<\x9d\xc0\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x90\x15\xe2\xc2\xb9\xb5-A\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00AS\x16\xaa\x03\xc3@\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08E}\xe2\xac\x1an\x8d\xc1\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\xbbR+\xf0\x1b\xb8\xc0\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\x0bM\x93\x1dLn\xd3@\x7f\xa5\xfd\xfbF\xaa\xeb@\x0f\xcc\x95\xd1>+\x00A\xba`\xe4O\x98\xed\x0fA\xcc\xcdVP]L\x1bAdt\xea\x91\xe3\xa9$ANJ\x03h\x93@,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\x82\x90y6\xa7W\xda@\x15\x8bF\x0b\r\x19\xf1@\xe4M\x1a2\x8e\x99\x02A\xa8\x08\x8a\xee\xbfd\x11A\x15\x99\x0ba\x18\x98\x1cA\xb8L^\xa0\xfa\x11%A\x99\xf6\x87\xa8\x03U,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xe7Z\xde\x12P"\xe1@\xa9\xf06\xcf?\x8c\xf4@\x12\xe2\x84\x9f\x87\x03\x05A\xf0a\x8cMd\xc0\x12A3\x1a8\xeei\xca\x1dA\xa3]\'\xb2\xcdp%A\\\xc9\xb9O\xa7g,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.Ah\x8d{B%\x8c\xe5@y\x99=\xe12!\xf8@\x92)\xf6\xb5\xefc\x07A\xa0\xb2\x11\xe5\xea\t\x14A\xb4M|\xeb\xd3\xe5\x1eA\xf6<\x89\x8a\x89\xc7%AI?\x9e2\xb8x,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xd6\xfc\xb6\x90=Y\xea@\xaf]\xc6D\x0e\xcc\xfb@\xf9\x8c\xe2\xb1\xfb\xb6\tA=\xdc9_\xd9A\x15A\xb3\x8a,a\x96\xec\x1fA_\x86w\x8a*\x17&A&\xd00\xe8f\x88,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xab$\xfc\x84"y\xef@\x9cL\xe2U\xbe\x82\xff@k\xcf8\xee\x05\xfa\x0bA\xdb\xcfG\x98\xe8h\x16A}\x12n\xaaYp A\xeb\xe8v\xf1\x85`&AO\xf6<\x8d\xdc\x96,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xad\x925\x99\xedm\xf2@\xd0\x9aA\xa9p\x9e\x01A+\x8b\x9d\x81M+\x0eA\\\xcf{\r\xee\x7f\x17AYtU\r\xfa\xe1 A\xfd\xce\xec\x19Q\xa4&A|}\x1b%<\xa4,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.Avg\\+=9\xf5@)\xec\xdda\xd0y\x03A\xe0\x0cL\xa4\xe0$\x10A\xf0\x01\xed\x8f\xcc\x87\x18A\xd9\x8cG\x89\xf7K!A\x83\x91\x87-\'\xe3&Al\xf1\x9f\xaf\xa3\xb0,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\x1d\xc8zX\xb7\x17\xf8@\xf3\x0c\xcc#\xc1P\x05A\x9d\xd0\xd5\xacj*\x11A\xce0\x9f\x0fj\x81\x19AIgI\xa5\x06\xaf!A\x1a\x0c\xe3\xad\x8d\x1d\'A\xf7\xb8\xfb\x05-\xbc,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.AD\x18\xe6YS\x03\xfb@\x8b(j]\x1b!\x07A\x87\xdd^\xb20&\x12A\xc2|>\xf3\xa8m\x1aA5%I\xe1\xc7\x0b"A\xe5\xe0\x03\x16\xf8S\'A\x11\xae\xb9\x8b\xee\xc6,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xc7:<\xde\xca\xf6\xfd@#\xbe\x07\xdb5\xe9\x08A\xff\xc9\xb27C\x18\x13A\xcbh\x1e\xe5cM\x1bA\xf2\x1f1\x1a\xcab"AL]#\xc8\xca\x86\'AP\x13\xa1\xbd\xfb\xd0,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A*\x00\x9cm\xc9v\x00A\x80\x80\x0c\xae\xd0\xa7\nA\x01\x1b\x9b@\xcd\x00\x14AkR\x1eQk!\x1cA\xb3\xbeG\xac\x8c\xb4"A=v\xban]\xb6\'A\xb7\xb5\xe4\xa5e\xda,A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_one_touch_option(            
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            barrier_type='UP_IN',
            barrier_value=66380.00*1.05,    
            barrier_obs_type='CONTINUOUS_OBSERVATION_TYPE',
            obs_schedule=[[],[],[]],
            payment_type='PAY_AT_MATURITY',
            cash=1.0,
            asset=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_one_touch_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_one_touch_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_double_touch_option_pricer(self):
        expected = b'\n\xf4\x06\t5D\x85\x8aX\x84.A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\xc0\x08\x83XND\x1e\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xc1\xde\x08[f\xae2?\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x00\x18\xbdJ\xcf%@\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\x80\xe9\x8ci\xcbH\xc0\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xff\xff\x9f\x80N8\xc8?\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x00\x000\xd5\xddQ?\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xb4\xa7\xb3\xc8K\x98\xd1>\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xfe\xff\x87\xd5$\x93\xfd?\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00\x00\xf6/\xa4\x15\x18\xc0\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08vV\x99\xb9r5\xaf\xbf\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff\xff\xf7\x9d>\xe5\xd9\xbf\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\xa0\xdcu\t\x0f\xa8@\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\x00\xb4:\x91\xcb>@\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x80BF\xe2\xf6\xcd\x18\xc1\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\x00U\r\xe4QD\xc0\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xcc\xbb\xdb\xa9\x93\x7f.A\xa9\x02w\x0c\x8cu.A\xf8\x89^\xfa&\x80.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A{z\xdd\xd4)\x82.Atc\x98\xda_}.A\x1d\t\x18\x8bk\x82.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\x81\x94\xc2%o\x83.AX\xf7\x84\x0b=\x81.A0Z\xecx\x8b\x83.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xe2\x1e`d\x08\x84.A-\xe5O\xe6\x10\x83.A/\xed\xbe.\x14\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xdbs\xd1\x9dM\x84.A\xd0I\xea\xf6\xe4\x83.A\xadNtZR\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\x0fKJ\x9bk\x84.A\n\xdc6\x1bA\x84.ADmAqm\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.Ai\x01\x97\x11x\x84.A\x80\xad\xd2}g\x84.A?Z7\xc1x\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xc8IJ\t}\x84.A=!n\xd3v\x84.An\x1b\x8dH}\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xc7\xe4\x9b\xef~\x84.A\xb2\xde\x84\xb3|\x84.A_\xb4\x90\x05\x7f\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A/>\x0b\xa2\x7f\x84.A,\xf0O\xdc~\x84.A\x18mb\xa9\x7f\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xca+\xdd\xe0\x7f\x84.A\x8d\x0e8\x9f\x7f\x84.A\xc31:\xe3\x7f\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xb8J\x16\xf6\x7f\x84.A\x01D\'\xe1\x7f\x84.AU\xd6\xd1\xf6\x7f\x84.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A\xaa0\xc9\x8c\xe2!.A \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_double_touch_option(            
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            lower_barrier_type='DOWN_IN',
            lower_barrier_value=66380.00*0.95,    
            upper_barrier_type='UP_IN',
            upper_barrier_value=66380.00*1.05,    
            barrier_obs_type='CONTINUOUS_OBSERVATION_TYPE',
            obs_schedule=[[],[],[]],
            payment_type='PAY_AT_MATURITY',
            cash=1.0,
            asset=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_double_touch_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_double_touch_option_pricer:', result.SerializeToString())

        self.assertEqual(result.SerializeToString(), expected)
    
    def test_cm_single_shark_fin_option_pricer(self):
        expected = b'\n\xf4\x06\tq\xa1\xc3\x8cu]t@\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x80mV\xc0\x07\xc6N\xc0\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08Zl5\xbe\x13\xe3\xb4\xbf\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xcb\x15{A\xedZ\xc0\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\x00\x0b\xb2\xae5y\xbf\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x94\xa9\x80\xe5f\x14K\xc0\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x00\xf6\x83\xf4\x0e\x86\xbf\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xaa\xfc\xf7\xa2fd\x15?\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xd7)\x9bR\x90\xfaA@\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\xc0hr\x86\x11t*@\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08+\x91q\'gD\xee?\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x9f\x97\x95\xc2<\x1d\x19@\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x05e%\x91*\x12\xb0\xc0\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x8c\x8bw\x01"\x92D\xc0\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08iD\xe8\xfbn\t\x11A\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08`\xeb\x83\xcf\xc5\xe9;@\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xd9\xd0N|p\x9cm@\x0f\xfe\xbf`M\xdb}@\xcf\x18-\x16\x8f\xbb\x87@\xf3\x9a\x94\x91\x0e\xe1\x8d@\x9d\x96\xa8\x90gH\x8d@k+\xb7\xd6?\x13\x84@\xa2\xb6\xe6\x0f\x97]h@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00C\xc2\xb6\x84\x02\x99p@}3\xca\xa0L\xbb~@bG{\x90i\xe0\x86@\x8f\xc6Q\xb5\xcav\x8b@\xc3o/[\x05\x18\x8a@\xa4Z\xb5\x01\xb5\x88\x81@\xe4v\xa94\xb5\xa3e@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xef\x84\x8b s\x15r@Yma\xcd\xc9\x1c\x7f@\xab\x18\x0e{c\xe4\x85@@\xba\xf0\x85\xd1;\x89@\xee\xe6\xd9ZLY\x87@X\x8f\xd2>\x94\xcf~@\x94\xee\x83n)Zc@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00c,D\x12=Bs@\xae\x94\x17\xc9\xc4\x17\x7f@M\xaa#x\xec\xd6\x84@\xb5s\xa6\xcd\x1f1\x87@\xa9(\x00\xe4A\xfa\x84@\x98\'6w\x017{@q4ER\x9bja@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x15\x05Q\x90\x18#t@k\xcdZ\x0cf\xc2~@\x00\xd7\xa3\x87!\xc3\x83@\xf4\xdf\xe5%OU\x85@\xa2\xbd\x86q\xdc\xeb\x82@\xca\xab\x01jO\'x@7\x1b\x91\x18\xb6\x87_@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x197\xfb\x06\xc2\xbet@\x82\xc5\xd7\xcd\x040~@\xf5r\xfc\xad\xc6\xb0\x82@\x90\xcd\xb0\x0c\xaa\xa5\x83@\xe6\xacE8\x96!\x81@1W\xf2?D\x87u@\x88r\xbd\x9f\x13\xb1\\@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1c:\x92%w\x1du@&\x89\x8b\x05\xe3p}@C\x13\r\xc9\x1b\xa5\x81@\xcd\x86l\xc2\xd9\x1e\x82@9&\xef\xca\r"\x7f@0\xaa\x1c\xcf\x07Cs@\x9d,\xed<O<Z@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf7\xf4\xf6\xef\xe9Gu@\n\xdar\xb1L\x92|@\x87[\xe2\xb6\x86\xa3\x80@\x9a\xe0?\x1eO\xbd\x80@\x124\xb2\x81\x10c|@N\xff\x89\xb6\xdaJq@ \xe9\xac]\xc2\x18X@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdd\xbd&\xe9\x91Fu@6\x1f&O\xe4\x9e{@\xa1$\x08\x02*\\\x7f@nG[B\x05\xfb~@\xaa-!X\xcc\xf7y@8/\xeb:G$o@|\x8aC\xec\x1d9V@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc8B\xbbPG!u@\xf6\x99\xcai\x04\x9fz@?F[!\xbf\x8b}@\'n-v1\xb8|@\x8d\xda\xcd\xbb;\xd4w@|\x12\x8e\x99p\x1dl@\xba\xe9\x16\x06\xa5\x92T@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdd7\xf4\xcf\x10\xdft@\x0b;\x10\xdb!\x99y@\xfc\x89\xfc\x86\xa9\xd6{@Dn9\xad\xe5\xabz@\xd0\x11\xf6\x84N\xeeu@\x1c\xc3\xbf\xfe\xacpi@\xcc\x87\x7f\x96\x9e\x1cS@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00w\xdc\xed0\x10\x86t@\x83!\x96d#\x92x@\x97{\x1cx\xda<z@q(\xa7\xc3o\xd0x@n\x95Fg\x92=t@<\x83\xb7\x03x\x10g@\x99\xdd7|\xe6\xcfQ@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_single_shark_fin_option(
            payoff_type='CALL',
            strike=66380.00,
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            gearing = 1.0,
            performance_type='RELATIVE_PERFORM_TYPE',
            barrier_type='UP_OUT',
            barrier_value=66380.00*1.05,    
            barrier_obs_type='DISCRETE_OBSERVATION_TYPE',
            obs_schedule=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],
            payment_type='PAY_AT_MATURITY',
            cash_rebate=0.0,
            asset_rebate=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_single_shark_fin_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_pde_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_single_shark_fin_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_double_shark_fin_option_pricer(self):
        expected = b'\n\xf4\x06\t\x1fg\x11\x7fuK=\xc1\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\xb3\xfa\xd3\x82\xe8\xe7@\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xe83\xc8\xab\xd8jI@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08`\xd6.\xb5\xb8\xca\x11\xc1\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\x00\xc62\xec\x95\x13@\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08?\xa1\xc1\'\x03z\xe0@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x80\xb1\xaat&=\xc0\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08p\xb2\xaeU%@(@\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x91!\x0ff\x8caTA\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\xe0l\xe9\xec{\x88\xfa@\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08M\x9e\x9fg\xc3"\x86\xc0\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff\x06p1\xff]\xb2\xc0\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xc4),\xc7\xa6\xfd\x87\xc1\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x10\xcf\x19[P\xb5\x1e\xc1\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xe0\xe4\xbf\x8ef\x9c\xf0A\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xa9\xb5X\x17"7\x1bA\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00R\xf5\xecm\xee8PAF\x98\x93\x81}\xf5[A\x0e\xce_\xa5\xd7\x9fMA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xf7\xdf\x88(vDA`k\x98j\xd4*KA\xa8\xb3\xc6\'\xe3\xedBA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb7\xbe1\x1d\xd5&:A\x82C\xc2\xef\x14\x992A\xef\x9e4\xeb\xafy8A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd8B\x0f\x1e\xfb-1A2\xe9\x9b\xf2\x1c,\x0c\xc1\x86)\xb9\x08\xcf>0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa1\xc7\xe9\x9er\x92\'AB\x9e\nO\xecQ1\xc1NoS\x81x~&A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00N\x7f\x16\'t\x1d!A\x9aD\xe2A\x05$:\xc1!}\xb0\x91\xb6u A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00F\xbd^\xeb\xaaw\x1aA\xc0\xb4\xf33\xf6\x04@\xc1\xaa\x12bP\xdc\x9d\x19A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x005\x8d1\xecM\xba\x15A\x11?,\xf6\xa8\x1fB\xc1)\xe3\x93c\x9b"\x15A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x004\xb7\x11B\x1b\xbf\x12A\x03\xc0@\xe3\xc8\xbeC\xc1+Z\xab\x92\xadN\x12A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa5\xd1\x8ch0\xc9\x10A\x9fm\x99\xca\xb8\x17E\xc1\x08\\\x98\xde\xf2q\x10A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00r\xcb=R\xf3\xd7\x0eAl\x1e\x96x\xa8HF\xc1\xa3\x90XQ\x9dL\x0eA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x81\x06\x9e\xb2t\xd3\x0cA\x8d\xef\x12C\x9fbG\xc1\xc6\r\xe4\x91\xbcb\x0cA\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_double_shark_fin_option(
            lower_strike=66380.00,
            upper_strike=66380.00,            
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            lower_participation = 1.0,
            upper_participation = 1.0,
            performance_type='ABSOLUTE_PERFORM_TYPE',
            lower_barrier=66380.00*0.95,    
            upper_barrier=66380.00*1.05,                
            barrier_obs_type='DISCRETE_OBSERVATION_TYPE',
            obs_schedule=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],
            payment_type='PAY_AT_MATURITY',
            lower_cash_rebate=0.0,
            lower_asset_rebate=0.0,
            upper_cash_rebate=0.0,
            upper_asset_rebate=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_double_shark_fin_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_pde_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_double_shark_fin_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_range_accrual_option_pricer(self):
        expected = b'\n\xf4\x06\t5\xf6Q\x16\xfcl\xb2@\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08@U\xe5R\xbf;\x89@\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x1e\x8f\xb7\xb6\x94\xfe\xb0\xbf\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\xd0\xfc\x1c\xd8&\x95\xa8\xc0\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\x80\x925\xd3\xab\xb4?\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08@\xfb\x16\xceu\x08F\xc0\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xa0#\x93Y#\xd4\xbf\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xcc\xb7\xf6\xc5|2%\xbf\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xbf\x1c\x1aY\x9d\xd0Q\xc0\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00,\xb8/\x03=9@\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08F\xf8L\xac\xd7\x94\xea?\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff\xc20kQ\x0e\x16@\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08C\xfc,\xc3\x99\x15\xd4\xc0\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xf0\x19%\xb2?\xb5i\xc0\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xfcdI\xdf\x83\xca0A\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x81\xa7+\xeb\xaf\x82[@\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x088{\x1d\x98\x8b\xb0l@\xd3\xff\x11a\xfd\xfc\x82@\xf5\xd3WsY?\x95@\x1c?\'\xe1\xa8\xa5\xa4@:\xf7\x0b\x8cqj\xb1@\x0f\x8a6\xf2\xfbB\xb4@(\x17\xbbe\x98\xdf\xb0@m\xcdc\xba\xb8\xaa\xa4@\xd0N7\xca\xb6\x9d\x97@r:\xfc\x95\xaa\xcc\x89@\xd4\xce\xfc\x9b\xdb\x01{@\x15\xa1\xc7\xc9J\xdbp@\xadh9\xc0\xf2\xc7\x84@h\x04\xce\x964\x04\x96@z\x8c\xeeU\x8c\x88\xa4@\r \xe7sA\xd3\xb0@$\xe3"\xcd)z\xb3@;x`\x1c@e\xb0@\xdd\x92 $\xa8\xbc\xa4@/\x82Y\xd1-\xa2\x98@Z\xc9\xcaT\xde \x8c@\x8f\xe0\x12fQ\xf0~@dJ}\x11n^s@\xc6zY<\xc3p\x86@\x9a\xa9V\xbc\xed\xa8\x96@G{\xd2\x08\xf3`\xa4@\xbe\x95\x8c\x940E\xb0@Mf\xbe$9\xbf\xb2@_\x83\xe6E\x06\xdf\xaf@\xfd\x06An<\xbd\xa4@6~\x89{m~\x99@\x925h@gC\x8e@\xdc\xbcM\x81\x03a\x81@8\x14\xb0\xcc\x05\xd8u@\x11\xbf%\xb0\x96\xf6\x87@\xde\x1d)\xec\x0e1\x97@\xf0f>\xee%1\xa4@\x7f\xc3qz\x0f\x7f\xaf@\xe7%\xbe*\xe9\x10\xb2@\x7f\xa2Y\xb3\xe1\xfc\xae@6.\x01\x9a\xa8\xaf\xa4@\x07/:\xdc\x846\x9a@7\x06\xbe\x85\xf4\x19\x90@\x15\xa1d\x9e\xc55\x83@:AWD\x82@x@\xdd\x0c\xe4\xb4\xacY\x89@\x83\xed\xb6\xda\xe6\x9f\x97@\x93\xb0\xfe\xd2\x00\xfb\xa3@*\x92\x9d\xfa=\x83\xae@\xa8\x8f\xa8\xa8\x17n\xb1@s\xdc\x98\t\x05$\xae@\xe2\x9fy@\x98\x96\xa4@\x04UfU`\xce\x9a@X\x0e\xb3\r\xb9\xf9\x90@>9L*w\xf2\x84@\x96\x1e\x99\x9f6\x92z@\x99\xc9j\x91\x06\x9b\x8a@*\xa740}\xf8\x97@\xf8\xf9cJ\x06\xc0\xa3@\xf9J=}\xb9\x95\xad@\xd4\x94\xbe0\xbf\xd5\xb0@\x9c\xda\xa6\xc3CT\xad@j\xe2\xae\x1dDt\xa4@~Pd\x16\xaeI\x9b@\r\xa9\xc4f\x01\xc2\x91@\'\x83`~\x91\x94\x86@>\xc1/\xeb\x14\xc9|@q\x17\xfb\x18%\xbc\x8b@\t\xedy\xa4\x8e=\x98@=\x0eU!p\x81\xa3@\xdc\x04!\x8ei\xb5\xac@5\xef\x85\xcf\xf4F\xb0@J\x98\x9eB\\\x8d\xac@\x00\xea\xa8<\x84J\xa4@\xf7\x8f{F\xd0\xab\x9b@\xc4\x83\xa0%\x19t\x92@]\x18g}\xb2\x1a\x88@\xb0\xef^ h\xe2~@\x82\xd9\xce\x12\xd7\xbe\x8c@\x98\x1e&-\x8eq\x98@-Up\xe5<@\xa3@Y7\xa6ZN\xe1\xab@\x1e\x8c\x165\xcb\x81\xaf@L\xff\xbb\x08\xff\xce\xab@\x83\xae\xb5\xc7\xdf\x1a\xa4@}}\x04/\xd8\xf7\x9b@\xb1\xdf\xe0\xb9u\x11\x93@\xaa\xf8\x9e\nZ\x84\x89@q\xc7ZgIn\x80@\xc3\xf5\xdc\x1e\x15\xa5\x8d@\x1d\xbe\xb2\xd3\xa8\x96\x98@Sx\x01\xda:\xfd\xa2@Pq\n\xa2~\x18\xab@\xe1\xef\xaez\xa8\x85\xae@\xbeG\xa89\xd4\x18\xab@\'P\x88\xa3\x9a\xe6\xa3@\xe6\x94oy\x860\x9c@\x8a\xa1\x9a\xaa\x9e\x9b\x93@\x06\x08n\xcb\xb1\xd1\x8a@\'\x96\x85\\j[\x81@9\xd2\x99\xbb\xe7p\x8e@\xf5\x02\x8e\x16\xcb\xae\x98@" [\xea\x10\xb9\xa2@\xcb\xc6\x95\xb5%Z\xaa@\xf1\xa1Jc-\x98\xad@\xb5\xa5\xa9\x8b\x7fj\xaa@\xa3rt\xac\xc0\xae\xa3@\x90\xbes\nOX\x9c@,\x0b\xed\x13\x1d\x14\x94@T\x1e\x8b\x85^\x03\x8c@\x1a\xaa\xbcp\x8c8\x82@v\xc4\xb1AU$\x8f@\xc8pW\xcd\xa6\xbb\x98@\xc7\xfc3\xfaEt\xa2@\xaf\xa6G\xa2\x81\xa5\xa9@\x8b\xd7\x94?(\xb8\xac@\xf1Y\x06\x17\xa3\xc3\xa9@\x8d\x0c\xb5Z/t\xa3@^\xdf?W^q\x9c@\x0f\xdb,Sp|\x94@\xff\x9b\xd3\xde[\x1a\x8d@\x96\xf4\xd6\xff\xe5\x05\x83@I(N\xc9U\xc1\x8f@\xba\xdd\x00G\xb9\xbe\x98@?\xf7\xd1\xb4F/\xa2@\x85r\xe6d\xe1\xf9\xa8@\xb8b\r\xeb\x85\xe4\xab@\xcfM\xdcd\xe1#\xa9@\x90s\xee\x9b\x9d7\xa3@\x82P\xe5\xc5\x9f}\x9c@\x9d\xec\x8a\x0f\x07\xd6\x94@\xcep&\xcf\xde\x17\x8e@ \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_range_accrual_option(
            expiry_date=datetime(2020, 8, 19),
            delivery_date=datetime(2020, 8, 20),
            cash=0.01,
            asset=0.0,
            lower_barrier=66380.00*0.95,    
            upper_barrier=66380.00*1.05, 
            obs_schedule=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],   
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_range_accrual_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_range_accrual_option_pricer:', result.SerializeToString())
                
        self.assertEqual(result.SerializeToString(), expected)
    
    def test_cm_airbag_option_pricer(self):
        expected = b'\n\xf4\x06\t2\xdc#\x8e\x9et\xe4A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08({\x01\xe7[\xe5\x19\xc2\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x18E\x1b\x02\'\x0b+A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x1f\xce*u\x7f\xa3\x18B\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00P\xe3X\xc56E\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08>\xfa\x03#\xe1\x87\xc1A\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x1e\x03.\x1a/DA\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x98\x1a\x10\x8c{S2\xc0\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xfe\x19:\xcf\xc7\xcd^\xc1\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00z^c\xd8\xf3jA\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x16\xfc\xea\xc2\xd8vAA\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xbe\x13k\xc1^\xfblA\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x086?0\xc2\xc4E\xf5\xc1\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xc0\xf4ps\x95:\x8b\xc1\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xe4xH\xb5:\'HB\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\xd9\xe0,M\xc9sA\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xff\xdb\x07L\x1c\xcd\xf6\xc1\xd3&\xb0^\xc4\xf1\xfc\xc1\xd5pinw\xaf\xee\xc1\x12Q\xe2U\xbb\xa6\xd3\xc1\xbb\xabZ\xca@\x0f\xcbA\xed\xd7\xea\x885\x98\xe5AX\xb2\x9fvB=\xf2AZ\xa4w\xe5\x7f,\xfaA\x19d\n\xdd/Y\x01BPj\xac=r\xdc\x05Bt\x81\xc48\xd2\x8d\nB\x08\xf0k\xe5Q\xca\xf5\xc1*\xd0\xc3\xaat\xb6\xfd\xc1\x05^\x87i\xe1Q\xf0\xc1h\xb8\xd6nt\xa9\xd6\xc1\xe4J~\x13\rE\xc8AAd\xa1H\xe5\x9e\xe5A\xb3\x1a\xf2S\x82x\xf2A\xf4\xb6\xf1F\t{\xfaA\xe8\x03$\xce\x02~\x01B\xcf\xff\x1a\xfac\xf9\x05B\x02\xd7O\xe2\x0b\xa2\nB\xf7rt!\x88\x14\xf5\xc1\xb2\xd3\xb8\x9byb\xfe\xc1;m\xff#;4\xf1\xc1\xfa-\x17\xa3+\x8d\xd9\xc1"\x94BF\x926\xc5A\xdf\x1f\x9d\xb2\x05\x85\xe5AX\xb1\\\x1b\x99\xa4\xf2A\xba\xa9\x83\x178\xc0\xfaAaB\xa2\x91S\xa1\x01B\x8c\xf4\x93/\x1a\x17\x06Bi\x80(C+\xb8\nB\x16G\xadX5\xa4\xf4\xc1\x80\n9fA\xf9\xfe\xc1Yj\xd8`\x9f\x00\xf2\xc1\xff\xb8o\xf2\xf8K\xdc\xc1\x14\xbd\xe1\x85\xc9\xfd\xc1A\x84\x8c7\xc5\xddO\xe5A\n.\x93\xb3P\xc2\xf2A`_K\xcf+\xfb\xfaA\x9b\xb2\xeb\xafK\xc2\x01B\xeb\xc0\xd4\xb2\xc24\x06BW\xb7(\xd8\x9d\xcf\nB\xc9*\xdc^2p\xf4\xc12\xcax1\xbd}\xff\xc1E\xb6\xd58\xf6\xb8\xf2\xc1@\xfdA\x86\x85\xe2\xde\xc1\xcd~\xf8G\x01`\xbdA\x9ap\xf2\t\x93\x04\xe5AJ~Z\x1d\xdc\xd2\xf2A\xac!\xa7~\x91+\xfbAFW\x864H\xe0\x01BJ\xef\x1dJ\x9dQ\x06Bx\xe9\x89\xef\xc6\xe7\nB\x87|\xfa\xa9\x13\xef\x06\xc2zM\xfc<q\xf2\xff\xc1\x0f\x9a\xd0\\ _\xf3\xc1\x89Y\xb9,\xb2\xa7\xe0\xc1-&C\xe0P\xbc\xb6A\xaf\xa2\x0f\xc9\xea\xa7\xe4A:\xd4*\x9a\xab\xd7\xf2A8g_;\x8aQ\xfbA\xfc\xdd \xa5\xda\xfa\x01B\xf1\x01\x03\xde\x05m\x06B\x9c\xc5\xec\xcf\x0b\x00\x0bBJJ>4\\\x91\x06\xc2\xc2Kc\xed\xc1,\x00\xc2\nU\xb7\xf0\xe7\xf4\xf3\xc1\xb2r\xed\xd5E\xc9\xe1\xc1\x9d\x18\x1f\x9e\xa9*\xb0A\x84\x1d\xeas\'>\xe4Ak\xa4C\x88I\xd2\xf2A?\x0cW\xf1\x8em\xfbA\x12oX\'\xc5\x11\x02B\x03\x1d\x90\xedy\x86\x06B\xd6\xaa^\x89\xdd\x17\x0bB\xaba\xe5\x8fZ7\x06\xc2h\x1e\x95ueZ\x00\xc22\xe1\x96"\xf8{\xf4\xc10\xcc\t\xc4t\xd6\xe2\xc1\xd401\xd7?}\xa3Ap\xa18\xf5\xfa\xca\xe3A\x1f\xa9\xafi@\xc4\xf2A\xb7\xab\x11\x97U\x80\xfbA\x0f}\xcc\xb7\xf3$\x02BK}\xc9\xf8\x99\x9d\x06B\x9e\xa8\xd2\xc3\xbf.\x0bB\x94o\xd0\xc1A\xe3\x05\xc2\xa9<\xd4\xc4\xeb\x82\x00\xc2H\tAC\xd9\xf5\xf4\xc1\xe7F\x1b\xf3\x08\xd0\xe3\xc1D\xa3\xa1\xe7\x9b2\x8cA<Lhx\x86Q\xe3A\xa5\x1f\x0f\xf3\x08\xaf\xf2A:F?\xd1\xb9\x8a\xfbA|\xba\x90 t4\x02B\x01\x08\x94\xd9\'\xb2\x06Bf\xe6\xa0\x9fLD\x0bB\xabQ\x94\xb0p\x96\x05\xc2\x93\x00\x14J\x00\xa7\x00\xc2\x83\xb5R\x95\xefc\xf5\xc1`\x03\x8d\x82\x00\xb7\xe4\xc1\xdc\x8b\xf3X"\xa4\x83\xc1,x\x12\xb2b\xd4\xe2A\xe8\xd1\x89\xeb\xfe\x93\xf2A\x13\x11\x99\x19\xaa\x8d\xfbA\xafG\x15\xcem@\x02B\x11&\xdd%\x03\xc4\x06Bj\x90\xb2\xff5X\x0bB\x99+1\xa4\xa8Q\x05\xc2\x07\xee2\xaa5\xc7\x00\xc29\xe8\rP|\xc7\xf5\xc1I7\x02\x01w\x8c\xe5\xc1\xc0\xe6\x18G^W\xa0\xc1\'\xe1\xf7\xbd\xacU\xe2At\x9d\xa3\x1d[t\xf2AHD\'L\x19\x8a\xfbA\xa9\xa95K\x1aI\x02B`\xcf\x12\x85$\xd3\x06By)\x10\xe6Dj\x0bB>Ot\x078\x15\x05\xc2\xb7\x0b\xf7\x88\t\xe4\x00\xc2\x06[\x9bP\x9f!\xf6\xc1\xa1\xe5<\n\x95Q\xe6\xc1\x18\xb70W[7\xab\xc1\x83\xfc\xd0\r\x15\xd7\xe1A\xe7Hl\x061Q\xf2AS\x82\xc7<\xf4\x80\xfbAz\x89\xb7\xc4\xbeN\x02B\xba\x03\xf7\xb2\x98\xdf\x06Bp\xa6UtWz\x0bB \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_airbag_option(
            payoff_type='CALL',                    
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            lower_strike=66380.00,
            upper_strike=66380.00*1.05,    
            lower_participation = 1.0,
            upper_participation = 1.0,
            knock_in_strike = 66380.00,
            barrier_type='DOWN_IN',
            barrier_value=66380.00*0.8,                
            barrier_obs_type='DISCRETE_OBSERVATION_TYPE',
            obs_schedule=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],            
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_airbag_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_pde_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_airbag_option_pricer:', result.SerializeToString())

        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_ping_pong_option_pricer(self):
        expected =  b'\n\xf4\x06\t1\xf0\x1f\xa8\x8f\xf4\xb7@\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\x00\x00\x00\x00\x00\x00\x00\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08#\x17J\x10\xea\xb1\xa8\xbf\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08pd\x85\xb0\x8d\xa0\xa7\xc0\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\x00\x00\x00\x00\x00\x00\x00\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x80:\x0f\xae!\x02@\xc0\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xe0\x06\x9a\xf9Z\xd3\xbf\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xc7\xe3Z \x99S\x10?\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xffq\xf5N^q;@\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08@_"\xa8;S[\xc0\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x04\xbeH\xe2\x05A\xf8?\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x7f\xd6\x80\xd3\xef\x1f$@\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08n\xf6\xc6~_\xd2\xe1@\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08O\xb6\xd5d\xd6\xcfv@\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x16\x8f:26\x9c@\xc1\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xbf\xe6\x19\xdb\xd26k\xc0\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08O\xe1\xea!\xad<p@F\x00\x8dL\xedD\x87@3\x99-L]\xb3\x9c@k\xdcH\xb5t\x87\xac@x\xf0\x02\x9b\xdc\xb3\xb2@\xfa={\xf8\xc9\x07\xaf@\x83&\xe6\x06\xf5E\xb1@\x97\xad\x1dW\x99b\xaa@\x18\xfe;\x16Qj\x9d@UZy\xba\xe6q\x8f@\xb6yS\x03\xa2\x12~@\'\x81\'\xa0\x1cLv@{\xc6?\x92\x17\x96\x8c@_\x9d\xcf\xb8\x95h\xa0@h\xc7X\xaa8\xd8\xae@\x9e\xc6w\xb0\x92.\xb4@"\x8f\t\xf4w@\xb1@\xba\xb8?\xb3\x93\xec\xb2@\xa3u\x05D"\xc2\xad@\xfe\xd4\xcb<\xcf<\xa1@\xb3xr\t\xfch\x93@klS$\x1ei\x84@\x91\xc4\n\xeb\xb8\x87~@\xd8\xa7\xb9\xf6\x14Z\x91@\x87\xe4\xaa\x19\x0e\xa7\xa2@[\x07\x9a\x85X\x8b\xb0@\xb6\xe0\x07/`}\xb5@\xb9Z\xcdg\x9f\xd6\xb2@mUJ\x01\xc1w\xb4@Mzn\x14jj\xb0@\x16\xb0n\x8d5=\xa4@\xe7\xb8#$V \x97@\x8e9\xa2\xe8G[\x8a@\xff@v\x85\xc2\x94\x82@\xa9\xa0\x01\xe9\xd7\xec\x94@\xfc\xe5\xc31/\xe9\xa4@5\xe6\x18]]\xc2\xb1@}o\x13\x1c\x7f\xd3\xb6@Q&\x91\xdb\xc6l\xb4@\xcff\xd0\xbd?\n\xb6@r\x7f\x9cO\x1a\xf0\xb1@9&\x03\x14\xa8\x86\xa6@I\xcf\x10\xb8uE\x9b@\x18\xb4\xd8\xdb\xf2Y\x90@k\xf2TO\xee\x02\x86@(\x0e\xc5I\xec\x86\x98@X\x9e\xccAy\xde\xa6@\xb1\xdb\xa0W\xbf\xea\xb2@\xceXC\x95\x12\xef\xb7@yZx<q\xfd\xb5@Y\x8b\x11\xde\x9b=\xb7@\xcf$\xb1_\x967\xb3@\x84r\xd3\x13\xe0=\xa9@y\x87\x8b\x00\xa1T\x9f@!\x1eN}\x87\xa3\x93@\xd7)5D\xea\n\x8b@$\x1a\xc8\x9f\x8c\xba\x9b@\xff\x83\xe7\x97}\xb6\xa8@\x83\\\xad\xe3\xcf\x0b\xb4@\x13\xe4\x00\xc3\xb1\xf4\xb8@\xc1\x80`<\rY\xb7@4j\x90\xb5\xa0t\xb8@=\xf9~\x95\x0c\x8a\xb4@\r\xa3\xa5Q\xfb\x8a\xab@R\xb0\xfcTT#\xa2@r\xb5\xd5d\xd6\xcf\x96@0\xe2\xaf\x8c\x15\x1a\x8f@m\xcb\xa6i\xb8(\x9f@\xce?>gG\xfc\xaa@X\xae\x00J\xe6!\xb5@}\x1d\xa4&+\xf1\xb9@\xad\xbdQ_\x06\xa6\xb8@\xfe\xbb\xe3\x1b\xb7\x8a\xb9@\xbeZx<q\xfd\xb5@\x14\x1b\xe1\xb7\xad\xfc\xad@8W\xf1\xe0\x00\xa0\xa4@\xa7\xf5\x86\x7f0\x87\x9a@\xc5\xaeUu\x14\xfb\x91@\x99^\xa9\xee=\r\xa1@/\xaf6o\xba\xa4\xac@\xabhw\x9d\x7f2\xb6@\xac\xec|\xbd\xe1\xca\xba@3\xb3\xd9Yh\xce\xb9@ \xc8t9v\xa4\xba@\x17D\xa8\xb5\x04\x19\xb7@\xcd\xe2\x91\x01\xedd\xb0@\xde<\x0c7\x05x\xa6@W\xee\xceq\xf3\x19\x9e@\x97\xe4\x1cR\xef\xc0\x94@\x97\xa0\x8f\xb0\xf6\xd2\xa2@\x9d\xabZ\xe8\x1bn\xae@g\xcf,G\xb3\x11\xb7@\xb7\rp\x1e\xbe\xad\xbb@\xfe\x04-\xc0~\xe4\xba@\xba\rp\x1e\xbe\xad\xbb@\xc5\xe7\x15\xe6@8\xb8@[\x94\xfe\x927\xb9\xb1@M\xe0\xb2\x032\xa4\xa8@\xd6-I\xe9\x03\xda\xa0@(KD4\x04\xba\x97@=\x86\xaa\x06\xfb\xaa\xa4@\x85\xbc\xe2\x9dA\x16\xb0@\xc7L\xeb\x13D\xe2\xb7@\xbf\xff\xa9Y\xa0\x85\xbc@\x08& ![\xc7\xbb@\xf8it&c\xa8\xbc@\x1a\xd1E_\xd4S\xb9@He~\t.\xbb\xb2@e\x9ab\xf3\xbb\xc1\xaa@\xb5\x18Y\xde\xc7*\xa3@hcfo\x82\xed\x99@\x1f\xdd\xf2\x0b\xd19\xa6@\xbf\xe9-\x80\xec\x05\xb1@ \x9b\xf0\xba\xda\xa7\xb8@\xb4d\xb8#\x94<\xbd@g\x01Q9\xe0\xad\xbc@\xccOV\xe0vs\xbd@J\x0c\x90\xa2\x8dx\xba@\xb7\xcd\xda\x92\xa1\xc2\xb3@K\xc9\x8dQ\x97\xe6\xac@j\xbaX\xcb\xb4.\xa5@\xe2\xc9\x8dQ\x97\xe6\x9c@\xbb5\xe2\xf0\xe6\xf0\xa7@k\xf2p\xde+\xcf\xb1@\xf8Q\x19O\xf4g\xb9@\xd9\xd5\x1eoV\x00\xbe@\x96\xd0)\xd0\x96\x87\xbd@J{\xfa\xe2\xe1:\xbe@$\xf2q\\\xa1C\xbb@\x8c\x1f.\xf9\xb7\xd8\xb4@\x87\x83=A!\x04\xaf@So\x13\x1c\x7f\xd3\xa6@ \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_ping_pong_option(
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            lower_barrier_type='DOWN_IN',
            lower_barrier_value=66380.00*0.95,    
            upper_barrier_type='UP_IN',
            upper_barrier_value=66380.00*1.05,    
            barrier_obs_type='DISCRETE_OBSERVATION_TYPE',
            obs_schedule=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],  
            payment_type='PAY_AT_MATURITY',
            cash=0.015,
            asset=0.0,
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_ping_pong_option_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_mc_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_ping_pong_option_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_phoenix_auto_callable_note_pricer(self):
        expected = b'\n\xf4\x06\t\xd7\xf8\xa4 \x89\x0c)A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\xd0\xf1\xbc\xa49j%\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08b\x00ys\x90B\xf3?\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\xa0\xb0\x8dV\xd9\x89\x17A\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00\xa0\xad\xf2\t\x8bQ\xc0\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x00\xfaNGf\xf8\x88@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00@\x95\x1f`HC@\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\\\x82\x16\x0c\xdf\x96d\xbf\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xff\xd9OK\xd4M\x91\xc0\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00LwdsO\xc0\xc0\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xf3\xd85\x92_+F@\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xffU\xa3\x19$er@\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x085\xe8\x0f\xfa\xd4>EA\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xa0\x8fGs\xb41\xdb@\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x1a\xfa\xea\r\x01!\xaa\xc1\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x80M\'\xd6\xa1g\xd5\xc0\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08W\x83\xb0[k\xfc+A\xb8\xc7@ww\xd1,A\x92n\x19_\x00u-A\xe3F\x9f\xbdc\xd9)A\xa1\xb0\xb9\xf7\xe9\x1f%A\xe7\xc3(\x04\x84\x87#A\x99e\xb0c.\x15%AU:\xfbID\x8d(A\xca\xf3\xcb\xe9y8,A+"\x19\xe3\x9e\x0c.A\xddx\xb2\x80\x08\xa7.A\xbcP\xf2t6\xec+A\xb3\xd4\x17)K\xc0,A\xd4\xf0\xfa\xa0\xc0e-A/~\xf3\x08\xabO*A\x1cY{\x11\xa8\x1b&A\xb0\xean7\x1e\xb3$A \xe1\x0fS+\x1e&A\xae\xf4\xc67\xf6\t)A.B|=\xa2@,A\xca\x92\x06\xdd\x80\x05.Ai\xec\x08\x14Q\x9a.A\xb4\xedA\x05v\xdb+A\xf1\x90\xe7\xf0!\xaf,AggI\xac;V-A\xebl(NV\xab*A\x83\xa60\xaf7-\'AIE\x06\x04\x05\xdf%A\x0b\x08V\xacA\xe3&A}tam\xd8\x85)A)I\xb3g\x14[,A\xeb+\xc3\xf2{\xf5-A\xb5<\xc6i;\x96.A\x8f\xe2\xc38\xe9\xca+A*\x10Sh\x86\x9d,A\x88&\x14\xb8SE-A\xd01\'\x92\x17\x04+A\x19\x97\xe6\x04#\xf1\'Ac\xd9\x8b\x803\xed&A\x05\xa5\x12R?\xd7\'A\x98F\x91)\xa2\n*A\xd7\xdc\xdc\x8ado,A\xa7\x95v\x833\xf3-AvSk\x8d\xea\x85.Ai\xfb\xf9\x13D\xba+A\xba\x00\xf2\xc7>\x8c,AD\xf8Gga4-A\xa0\xe0\xf5\x8e\x86Z+A\xaa\xc9\xd6\x031\xb5(AEc\xb2\xe3\xde\xca\'A\x9b\x8e\x88\xabP\xa3(A\xc1\xe6\xf6\xfc\xd5\x82*A<\x14\n\x9c\x91\x8e,A\xf3\xaaK\xd0\xfd\xe8-A\xb87@\x8f\xfbz.A\x07\x84\xa3\xa4\xcf\xa9+AN\xb3@\xcb\xe2z,A*S\x0c\x0c\xe5$-A\xf1\xa4kE\xfd\x9e+A\xe4:kh\x18U)A\xc5\xb2{\xd2\xb5\xb0(Ag\xccd\xc2\xa6Y)A7C:\xa5{\xea*A$\xf0\xa0\xea;\xad,A(\xcawG\xb0\xe6-A*\xbf\x9a\xf0\xbct.A\xa5\x08S\xe2\x12\x99+AS\xc2\xe4\xb2\x94i,Au\xf2\x8a\xaau\x13-A\x08\x01y|\x10\xd1+A\xa7\xec\x82\\\x17\xda)A\x8c\xd4f\xa4\xf3^)A2}\xf1\xb3{\xf0)AU\x94}\xf1\xb2C+A`\x03\xa6\x90(\xd7,A\xb8s\x1f\x9b\xd9\xea-A\xfb\x12\x1c8/n.A\xb6\xf8gA\xb8\x88+ABfbGxX,A\xf62\xc3r\xa1\x02-A\xee\xf6\x99\xff:\x04,Ab\xde\xbf=G^*Ar\x93\xeeb\x1b\xe9)A\xb2\x0czz`\x80*A\xf0cB}\xc5\x99+AO\x14{\x87\xb3\n-AA\xad\xb8-\xc3\xec-A\x15\xa0\xd9\xd4Wj.A\xa4\x15\x8cEGx+Amy\xcfJCG,A\xf3A$u9\xf0,AZ\xfd\xed#\x93&,A\x08\xb3\xc7f\xf8\xd2*AU\xe7\xffdV|*A\xe7\x03m\xb0\x01\x03+A?LD\'\xc8\xed+A,\xc4\xab\r5\'-A:\x7f\xfc\x18\xc4\xea-A\x1fe\xea\x037i.A\x19vp\xd4\x8cg+A\xf4\x89\x94\xf6y5,A\x16c\xf9\x9fY\xe0,Ac\x84\xaa\xb6^C,A\x8fm\x18\x8e-4+A\xf1\xd36$(\xed*A\x11o\x1d\x99\xf4l+A0\x9ad\xe7\xd10,A\x90_\x00\xcd\xa6L-A\x04\x8d\x12\t\xc0\xf8-A\xe5m\xa4\xaa\xaam.Amt\x0bF\x96V+A\xefjz\x86\xf6#,A82\xd5\xcb\xf3\xcf,A\xf1\x94\xe6\xe1BY,A\xf0}\xd6\xeb\xfb\x89+A\xf7\x10\xfb\xa1$X+AC\x83\xb1\xa6\x01\xbd+A\xb8\x16\'zTr,A\x02\x94\x86\x1b2d-A\x84h\xee\x99\xf6\x0c.A\x05\xa1\x9e\xc7\xb1w.APz\x8dA\xf2E+A`k\xdaZ\xd7\x11,A\xa3\x95%\xcc\xc1\xbd,A\x82b\x01\x8b\x86t,A\x12\x9b\xcd2\xc7\xe1+A\x81\xfde\x0c1\xa0+Ad\xc5\xa0\x04{\x11,Ap\xe2\xbc\x94w\xb3,A\xfe\xec\x10\xb0\xeew-A\xe3\xf2\x15\xb3K\x1d.A\x15\xac\x07V\xe7u.A \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_phoenix_auto_callable_note(
            coupon_payoff_type = 'CALL',
            coupon_strike=66380.00,
            coupon_rate=0.12,
            start_date=datetime(2020, 2, 22),
            coupon_dates=[datetime(2020, 3, 23), datetime(2020, 4, 22), datetime(2020, 5, 22), datetime(2020, 6, 22), datetime(2020, 7, 23),datetime(2020, 8, 22)],
            day_count='ACT_365_FIXED',
            knock_out_barrier_type ='UP_OUT',
            knock_out_barrier_value=66380.00*1.1,
            knock_out_sched=[
                [datetime(2020, 3, 23), datetime(2020, 4, 22), datetime(2020, 5, 22), datetime(2020, 6, 22), datetime(2020, 7, 23),datetime(2020, 8, 22)],
                [0.0] * 6,
                [1.0] * 6
            ],
            knock_in_barrier_type ='DOWN_IN',
            knock_in_barrier_value=66380.00*0.9,
            knock_in_sched=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],  
            long_short='SELL',
            knock_in_payoff_type='PUT',
            knock_in_payoff_strike=66380.00*0.85,
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )
        
        result = cm_phoenix_auto_callable_note_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_mc_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_phoenix_auto_callable_note_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)

    def test_cm_snowball_auto_callable_note_pricer(self):
        expected = b'\n\xf4\x06\t\x93\x9e\xd7\xf5$ .A\x1a\xdf\x06\n\x94\x01\n\x05DELTA\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08 \xe6\x98,\x7f\r\x06\xc1\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08x<\x98\x82\xbam\x1b@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\xa2\xc4\x97\x87\x13\xd1\xc0\x12\x05TOTAL\x1a\x00\n\x9d\x01\n\x0eDELTA_EXPOSURE\x12R\n\tCOMMODITY\x12"\n\tDIVIDEND_\x12\x15\n\n\n\x08\x00@0|\xca\x102\xc0\x12\x05TOTAL\x1a\x00\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\x00\x96\x8e\xda\xc7\xc7\xb1@\x12\x00\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x00\x00\x08oP\xfa\xfb\xbf\x12\x05TOTAL\x1a\x00\n7\n\x05GAMMA\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xbb\xed\xa1\xbe\x08\xe4[\xbf\x12\x00\x1a\x00\n@\n\x0eGAMMA_EXPOSURE\x12.\n\tCOMMODITY\x12!\n\rPRICE_CU.SHFE\x12\x10\n\n\n\x08\xfe\x87 \xa5\xbdp\x87\xc0\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\x00T\x02\r\xecS\x84@\x12\x00\x1a\x00\n;\n\x05VANNA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08A\x02;-\xa4,J@\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVANNA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xff9\xf4l\xdb\xb7u@\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x04VEGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\xc8\xbc7\xf4\xf1\xa3\x13\xc1\x12\x05TOTAL\x1a\x05TOTAL\nC\n\rVEGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\x81\xa3\x0f\xc5#\xa9\xc0\x12\x05TOTAL\x1a\x05TOTAL\n;\n\x05VOLGA\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x94Mu\x07\x15\x1a]A\x12\x05TOTAL\x1a\x05TOTAL\nD\n\x0eVOLGA_EXPOSURE\x122\n\tCOMMODITY\x12%\n\x07CU.SHFE\x12\x1a\n\n\n\x08\x00\xa8\x91w\x1b\xd7\x87@\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08\xcb_\xa1\xee\xa6\x7f(A\xf0\xf1\x11\x89\xe0\x7f*A\x81\xd5v\xae\x04\x1b,A\xc2\xdb\xef\xa2\x80I-A\x1cz\x80c\xf2\x14.A\xa5C\xb6\x92\x8f\x90.A\x08<vo@\xc9.A\x7f\xb1z5m\xd8.A-\x15\xe3\xf1Q\xd5.A\x81t\xe6\xfcA\xd4.A\xa6\xc4\xe1\xed\xdb\xd3.A\x01\xf7\nC\xb6{(A\xdc\xcfA&\xf2e*A\x13-\xd57\xff\xf7+Ad\xff\xefd\x93&-A\x86\x17\x1cM\xee\xfd-A\x16\xb9\xe3D|\x7f.A\xfd\xf4\xeao&\xbe.A\x8e\xac\xecK\xb4\xd5.A\xcc\xb9g\xb2\xe3\xd4.A\xec\x1b\x95i_\xd4.A\xdf\xd2\x85J\xe3\xd3.A\x11\x83\xd3\xf3\x1dy(A\xdes\x95\xc8\xd0K*AG\xbf.\xe3G\xd7+A\xbb\x14\xadC/\x08-A\x92z5\x89\x0b\xe3-A%#^$\x9ei.A$bT\x89\xa6\xb3.A\xc0\r\x91\xfbk\xd0.A\xb6\xd7\x05\xa2\xa3\xd3.Am\x1cPS=\xd4.Au\xa3,m\xef\xd3.A\x06\x06c\xfc4v(A\xf3\x99aV!5*A\xdc\xd0N\xa29\xb5+A\xb2X\x02/\xe1\xe6,A`\\\x0b`\x88\xc5-A\x8a4\xa7\x1c\xb3S.A\x0eY\xa5\xf2\x07\xa7.A\xad\x0f\xc7\xe7h\xca.A\xe4C\x80\xe37\xd3.A\xd7\x05\xb1\xc3\xe1\xd3.Aa\x8ey|\xea\xd3.A\\j\xc6\xc2\xe9q(A6B\x0b\x89\xc9\x1d*A\x04g\x8d\x11\xe9\x97+A\x08\x87\xb9\xa2\xaa\xc4,AZ>V\x8c\xe9\xa6-A&Sd\xd1\x88?.A\xcf\xb1\x983\x9d\x98.AT\x00rs\'\xc4.A\x05\xaa\x89\xd8\x81\xd1.A\xa7[\xf9\xc2\xc9\xd3.A\xec\xb6\xa7\x1a\x15\xd4.A\xb5r\xff\xefZo(Ay\x8c\x0b\xad\xc2\x0b*A\x8d0`\xf0\xca~+Av\xc0\x01\x9e\xd4\xa6,A\xb3Q\xb1OD\x8a-A\xa1d5\x97\xab).A \xb8\xe5\xfa\xd8\x87.A\xef\xdb\xc3*\x7f\xbc.A\xf8Ry4g\xcf.A\xcfER\xe4\x82\xd3.A\xc0\x14\xc3\xd2\x12\xd4.Ag\x1bO\xf4Zj(A\xf0\xc0~\x12H\xf8)A5\xa3\xb8\xfe\xd3c+A\xb1\xb3\xf9[\xe8\x87,A\xc3\xce\x8a>7n-A\xffGv\x90\x1c\x12.A\xdc`\xb6j\xf4x.AJ\xff[\xdf\x08\xb3.AtS\x9eA\x1d\xcd.An\x91:\xd3\xc0\xd1.AE\xed\xee\xd0\xfd\xd3.A\x88K\x0bMSe(AF\xed\x8f\xf0U\xe7)A\xbf\xd9.\x9a\xedI+A\xd6?\xa0w\xc6l,A&\xc8\xbe\xa1\xb7S-A\x161\xca5\x12\xfb-A\xe6\xa5+y\xaej.A\xdc\xf4\xa6\xd9\x9f\xa9.AT\x14\xbd9\xbf\xc7.AT\xec\xef\x13\xcd\xcf.A\xf5\x9f\xf0@t\xd3.A\x1f\x83\xbe,\xd1a(A<\x05\x94\xb2m\xd7)A\x9a\t\xd5H\x113+A\x05d\xc2\xb0\x07O,A\x88\xda\x8a\x11\x008-A\xee\xaanf\xc1\xe2-A\xdc74\xfc\xd8Z.A\x97A\rw\x06\x9e.A\x7f\xfc\xc8\xdf\x9f\xc3.A\x99?\x88\xf4\xca\xce.A\xf8\x05\xc2u\xd2\xd2.Av\xca\xb0/\x07](A\x03\x8c~\x00\xc6\xc7)A\xb0\t\xee\xf4g\x1c+AZb5BA5,A*\xd3\x87\x9b[\x1e-A\xf1.\xe2\xe1\xec\xcb-A0\xc1NW\x8fJ.A7T\xb6UH\x94.Ap\xc8v\xeb\x8d\xbc.A \xe1G\xc1>\xcc.A\xb0@\'\xe4G\xd2.At\xc1\xda\xdb\xa3W(A\x8c\xb5s=G\xb9)A\xa2\xe8q\xa7\r\x07+A~MB\x07\x17\x1f,A\xac\xae;M\xc6\x03-A#~EC|\xb5-AQZ\xe7\xd6(9.ASp\xa5\xfd\x7f\x8a.A\xb0r\x81\xc8\xbd\xb6.A\xbb\xe8R2\x9a\xc9.AJ\xcc\xacU@\xd1.A\xb7\xa6\xc4\xfb\tS(A\xf2W?&t\xab)Aq\xdb\x1dj;\xf2*A\x92?\xb6\xdd\x85\x04,A\x19h^e\xb2\xeb,A\x7f\x8a\xfb\t|\x9f-AM:\xf8\xf9\xcd&.A\x8e\xae|\x9b\xef}.A\x0e\xa2\x151\x8a\xae.A\xfbt\xc1\x1cl\xc6.A\xd4\xd7\x17\xdb\x01\xd0.A \x01*Z\nX\x00\x00\x00\x00\x00\xee\xe9@ffff\xe69\xeb@\xcc\xcc\xcc\xcc\xcc\x85\xec@2333\xb3\xd1\xed@\x98\x99\x99\x99\x99\x1d\xef@\xff\xff\xff\xff\xbf4\xf0@2333\xb3\xda\xf0@efff\xa6\x80\xf1@\x98\x99\x99\x99\x99&\xf2@\xcb\xcc\xcc\xcc\x8c\xcc\xf2@\xfe\xff\xff\xff\x7fr\xf3@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'
        
        inst = create_snowball_auto_callable_note(
            coupon_rate=0.12,
            start_date=datetime(2020, 2, 21),
            coupon_dates=[datetime(2020, 3, 23), datetime(2020, 4, 22), datetime(2020, 5, 22), datetime(2020, 6, 22), datetime(2020, 7, 23),datetime(2020, 8, 22)],
            day_count='ACT_365_FIXED',
            knock_out_barrier_type ='UP_OUT',
            knock_out_barrier_value=66380.00*1.05,
            knock_out_sched=[
                [datetime(2020, 3, 23), datetime(2020, 4, 22), datetime(2020, 5, 22), datetime(2020, 6, 22), datetime(2020, 7, 23),datetime(2020, 8, 22)],
                [0.0] * 6,
                [1.0] * 6
            ],
            knock_in_barrier_type ='DOWN_IN',
            knock_in_barrier_value=66380.00*0.80,
            knock_in_sched=[
                    [
                        datetime(2020,2,22), datetime(2020,2,23), datetime(2020,2,24),
                        datetime(2020,2,25), datetime(2020,2,26), datetime(2020,2,27),
                        datetime(2020,2,28), datetime(2020,2,29), datetime(2020,3,1),
                        datetime(2020,3,2), datetime(2020,3,3), datetime(2020,3,4),
                        datetime(2020,3,5), datetime(2020,3,6), datetime(2020,3,7),
                        datetime(2020,3,8), datetime(2020,3,9), datetime(2020,3,10),
                        datetime(2020,3,11), datetime(2020,3,12), datetime(2020,3,13),
                        datetime(2020,3,14), datetime(2020,3,15), datetime(2020,3,16),
                        datetime(2020,3,17), datetime(2020,3,18), datetime(2020,3,19),
                        datetime(2020,3,20), datetime(2020,3,21), datetime(2020,3,22),
                        datetime(2020,3,23), datetime(2020,3,24), datetime(2020,3,25),
                        datetime(2020,3,26), datetime(2020,3,27), datetime(2020,3,28),
                        datetime(2020,3,29), datetime(2020,3,30), datetime(2020,3,31),
                        datetime(2020,4,1), datetime(2020,4,2), datetime(2020,4,3),
                        datetime(2020,4,4), datetime(2020,4,5), datetime(2020,4,6),
                        datetime(2020,4,7), datetime(2020,4,8), datetime(2020,4,9),
                        datetime(2020,4,10), datetime(2020,4,11), datetime(2020,4,12),
                        datetime(2020,4,13), datetime(2020,4,14), datetime(2020,4,15),
                        datetime(2020,4,16), datetime(2020,4,17), datetime(2020,4,18),
                        datetime(2020,4,19), datetime(2020,4,20), datetime(2020,4,21),
                        datetime(2020,4,22), datetime(2020,4,23), datetime(2020,4,24),
                        datetime(2020,4,25), datetime(2020,4,26), datetime(2020,4,27),
                        datetime(2020,4,28), datetime(2020,4,29), datetime(2020,4,30),
                        datetime(2020,5,1), datetime(2020,5,2), datetime(2020,5,3),
                        datetime(2020,5,4), datetime(2020,5,5), datetime(2020,5,6),
                        datetime(2020,5,7), datetime(2020,5,8), datetime(2020,5,9),
                        datetime(2020,5,10), datetime(2020,5,11), datetime(2020,5,12),
                        datetime(2020,5,13), datetime(2020,5,14), datetime(2020,5,15),
                        datetime(2020,5,16), datetime(2020,5,17), datetime(2020,5,18),
                        datetime(2020,5,19), datetime(2020,5,20), datetime(2020,5,21),
                        datetime(2020,5,22), datetime(2020,5,23), datetime(2020,5,24),
                        datetime(2020,5,25), datetime(2020,5,26), datetime(2020,5,27),
                        datetime(2020,5,28), datetime(2020,5,29), datetime(2020,5,30),
                        datetime(2020,5,31), datetime(2020,6,1), datetime(2020,6,2),
                        datetime(2020,6,3), datetime(2020,6,4), datetime(2020,6,5),
                        datetime(2020,6,6), datetime(2020,6,7), datetime(2020,6,8),
                        datetime(2020,6,9), datetime(2020,6,10), datetime(2020,6,11),
                        datetime(2020,6,12), datetime(2020,6,13), datetime(2020,6,14),
                        datetime(2020,6,15), datetime(2020,6,16), datetime(2020,6,17),
                        datetime(2020,6,18), datetime(2020,6,19), datetime(2020,6,20),
                        datetime(2020,6,21), datetime(2020,6,22), datetime(2020,6,23),
                        datetime(2020,6,24), datetime(2020,6,25), datetime(2020,6,26),
                        datetime(2020,6,27), datetime(2020,6,28), datetime(2020,6,29),
                        datetime(2020,6,30), datetime(2020,7,1), datetime(2020,7,2),
                        datetime(2020,7,3), datetime(2020,7,4), datetime(2020,7,5),
                        datetime(2020,7,6), datetime(2020,7,7), datetime(2020,7,8),
                        datetime(2020,7,9), datetime(2020,7,10), datetime(2020,7,11),
                        datetime(2020,7,12), datetime(2020,7,13), datetime(2020,7,14),
                        datetime(2020,7,15), datetime(2020,7,16), datetime(2020,7,17),
                        datetime(2020,7,18), datetime(2020,7,19), datetime(2020,7,20),
                        datetime(2020,7,21), datetime(2020,7,22), datetime(2020,7,23),
                        datetime(2020,7,24), datetime(2020,7,25), datetime(2020,7,26),
                        datetime(2020,7,27), datetime(2020,7,28), datetime(2020,7,29),
                        datetime(2020,7,30), datetime(2020,7,31), datetime(2020,8,1),
                        datetime(2020,8,2), datetime(2020,8,3), datetime(2020,8,4),
                        datetime(2020,8,5), datetime(2020,8,6), datetime(2020,8,7),
                        datetime(2020,8,8), datetime(2020,8,9), datetime(2020,8,10),
                        datetime(2020,8,11), datetime(2020,8,12), datetime(2020,8,13),
                        datetime(2020,8,14), datetime(2020,8,15), datetime(2020,8,16),
                        datetime(2020,8,17), datetime(2020,8,18), datetime(2020,8,19)
                ],
                [0] * 180,  # All values are 0
                [1] * 180  # All weights are 1
            ],  
            long_short='SELL',
            knock_in_payoff_type='PUT',
            knock_in_payoff_strike=66380.00*1.0,
            knock_in_payoff_gearing = 1.0,
            reference_price = 66380.00,
            expiry=datetime(2020, 8, 22),
            delivery=datetime(2020, 8, 22),
            settlement_days=1,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_snowball_auto_callable_note_pricer(
            instrument=inst,
            pricing_date=datetime(2020, 2, 21),
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_mc_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        #print('test_cm_snowball_auto_callable_note_pricer:', result.SerializeToString())
        
        self.assertEqual(result.SerializeToString(), expected)
'''
        
    
    def test_build_cm_yield_curve(self):
        expected = b'\n|\nx\n\x07\x08\xe4\x0f\x10\x02\x18\x15\x10\x02\x1a\x07\x08\xe4\x0f\x10\x02\x18\x1a\x1a\x07\x08\xe4\x0f\x10\x03\x18\x19\x1a\x07\x08\xe4\x0f\x10\x06\x18\x18\x1a\x07\x08\xe4\x0f\x10\t\x18\x17"\x055DAYS"\x0633DAYS"\x07124DAYS"\x07215DAYS*"\n d\x14\x7f\xb1\xdd\xdcK\xc0\x81\xff\xbd\x8e\xdf7"\xc0h\xa0\xac\\[x\n\xc0\'\xe4\n\xa5\xe8\xdb\x05\xc00\x018\x01\x10\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15'
        
        result = cm_yield_curve_builder(
            term_dates=[
                datetime(2020, 2, 26),
                datetime(2020, 3, 25),
                datetime(2020, 6, 24),
                datetime(2020, 9, 23)
            ],
            future_prices=[],
            call_price_matrix=[
                [45.800, 40.800, 35.800, 30.800, 25.800, 20.800, 15.860, 10.810, 6.090, 2.320, 0.530, 0.120, 0.050, 0.010, 0.010, 0.010],
                [45.990, 41.320, 36.410, 31.650, 26.230, 22.310, 17.660, 13.650, 10.190, 7.190, 4.980, 2.160, 1.100, 0.660, 0.460, 0.300],
                [49.900, 45.500, 40.930, 36.660, 32.610, 28.660, 25.260, 21.460, 18.540, 15.780, 13.250, 9.350, 6.590, 4.700, 3.300, 2.420],
                [53.280, 49.320, 45.240, 41.260, 37.360, 33.900, 30.450, 27.420, 24.330, 21.570, 19.300, 14.830, 12.980, 8.970, 7.020]
            ],
            put_price_matrix=[
                [0.020, 0.020, 0.020, 0.020, 0.040, 0.080, 0.150, 0.230, 0.650, 1.840, 5.000, 14.720, 24.510, 34.300, 44.370, 54.370],
                [0.270, 0.330, 0.400, 0.540, 0.810, 1.130, 1.720, 2.700, 4.000, 6.080, 8.750, 16.000, 24.960, 34.310, 44.370, 54.370],
                [2.010, 2.300, 2.810, 3.450, 4.330, 5.410, 6.680, 8.180, 10.040, 12.290, 14.710, 20.760, 27.730, 35.690, 44.570, 54.370],
                [3.650, 4.340, 5.160, 6.120, 7.240, 8.620, 10.150, 11.840, 13.810, 15.950, 18.410, 23.940, 30.380, 37.590, 45.670]
            ],
            strike_matrix=[
                [2.50, 2.55, 2.60, 2.65, 2.70, 2.75, 2.80, 2.85, 2.90, 2.95, 3.00, 3.10, 3.20, 3.30, 3.40, 3.50],
                [2.50, 2.55, 2.60, 2.65, 2.70, 2.75, 2.80, 2.85, 2.90, 2.95, 3.00, 3.10, 3.20, 3.30, 3.40, 3.50],
                [2.50, 2.55, 2.60, 2.65, 2.70, 2.75, 2.80, 2.85, 2.90, 2.95, 3.00, 3.10, 3.20, 3.30, 3.40, 3.50],
                [2.50, 2.55, 2.60, 2.65, 2.70, 2.75, 2.80, 2.85, 2.90, 2.95, 3.00, 3.10, 3.20, 3.30, 3.40]
            ],
            spot=self.underlying_price,
            discount_curve=self.ir_curve
        )
        
        self.assertEqual(result.SerializeToString(), expected)
     
    def test_pm_vol_surface_builder(self):
        expected = b'\n \x08\x01\x10\x03\x18\x01 \x01(\x010\x028\x01I\xf1h\xe3\x88\xb5\xf8\xe4\xbeQ\xf1h\xe3\x88\xb5\xf8\xe4>\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x1a\x96\x03\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\xc3\xecB\xd9k!\x02@!\xc9"\xc8\xa43y\x0e@*\x8b\x01\n\x88\x01\xc3\xecB\xd9k!\x02@\x00\x00\x00\x00\x00\x00\x04@ffffff\x04@\xcd\xcc\xcc\xcc\xcc\xcc\x04@333333\x05@\x9a\x99\x99\x99\x99\x99\x05@\x00\x00\x00\x00\x00\x00\x06@ffffff\x06@\xcd\xcc\xcc\xcc\xcc\xcc\x06@333333\x07@\x9a\x99\x99\x99\x99\x99\x07@\x00\x00\x00\x00\x00\x00\x08@\xcd\xcc\xcc\xcc\xcc\xcc\x08@\x9a\x99\x99\x99\x99\x99\t@ffffff\n@333333\x0b@\xc9"\xc8\xa43y\x0e@0\x039\xe0\xc0\x81\x03\x07\x0e\x8c?B\x8b\x01\n\x88\x01\x99(c`\xcb*\xe1?\x11Ii\xe7\xb9,\xe1?6\x85\x19\xea?\xa9\xde?Q\x06C\xd6a\x02\xdb?\x03\xac\x0f9\xcfb\xd7?)\xcb\xe6%1\x83\xd5?=\xe5\xde}\x1a\x82\xd3?Q\xfb\x1c4\x03\x1a\xd1?\x9c\xad\x972\x0fY\xcb?\xed\xd8\x96\xc4\xaa\xb0\xc7?\x82+\xc8\x80@\xe7\xc3?\x1a\xaa\xbbB\xabc\xc2?\x9e\xa7)0&\x19\xcd?&\xd7\xfd\xb1\xc1x\xd3?\xdd\x0b;\x97%\x9e\xd5?\x9e\x95Z\t\xa2\xd3\xda?m\x7f\x818\x04#\xe0?J*\n(\x00\x00\x00\x00\x00\x00\x00\x00i\x0f/\x7f\xd80\x8d?\x8e\x03\xfd\x9e\xcf\x86\x7f\xbflo\xec\xf1`Q\x80?\x02\\x\xfe\x18]\x94?R"\n \xe0\xc0\x81\x03\x07\x0e\x8c?qI[\x0b\xa9\xa6\x07@\xc3\xecB\xd9k!\x02@\xc9"\xc8\xa43y\x0e@X\x01\x1a\x96\x03\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\x9f\x8b\xa1\xa6\xcb\x13\xf9?!\xc2\x16d{\xfb\xae\x17@*\x8b\x01\n\x88\x01\x9f\x8b\xa1\xa6\xcb\x13\xf9?\x00\x00\x00\x00\x00\x00\x04@ffffff\x04@\xcd\xcc\xcc\xcc\xcc\xcc\x04@333333\x05@\x9a\x99\x99\x99\x99\x99\x05@\x00\x00\x00\x00\x00\x00\x06@ffffff\x06@\xcd\xcc\xcc\xcc\xcc\xcc\x06@333333\x07@\x9a\x99\x99\x99\x99\x99\x07@\x00\x00\x00\x00\x00\x00\x08@\xcd\xcc\xcc\xcc\xcc\xcc\x08@\x9a\x99\x99\x99\x99\x99\t@ffffff\n@333333\x0b@\xc2\x16d{\xfb\xae\x17@0\x039Sr\xb1/,%\xb7?B\x8b\x01\n\x88\x01\x06\xec#\xfa{(\xe0?\xa2W$\xc6\xb7\xf9\xd2?\x02\xdb\x8c\xbd\x14\xb4\xd1?rbr\xf1N]\xd0?mW\x86b\xc3\xa7\xce?\xb8k\x1c\xd3.A\xcd?\x9f|S:\x1cE\xcb?\xf9\xce\x82\xba/\xfc\xc9?\xdc\xc3\xd6\xbd,3\xc9?\x19]h?i\x04\xc8?\xc2(o\x86\xbd\xd6\xc7?&\x05\x08qtL\xc8?=\xc8\xed\xf41\xd7\xc8?%\xd0o\xb5T{\xcb?ign\x9b\xfe\xcc\xce?\xfa\tM\xb9\x8c@\xd1?\xcc&\xd4\n!\xe9\xe1?J*\n(\x00\x00\x00\x00\x00\x00\x00\x00\x17\xf3ak\xde\x99\xa3?\xb5*@\xc1\r:\xb3?\xd1@\xfb\xcc\xafz\x83?\xea<`\xd0\x0b\xe5\xb4?R"\n Sr\xb1/,%\xb7?\xc2\x16d{\xfb\xae\x07@\x9f\x8b\xa1\xa6\xcb\x13\xf9?\xc2\x16d{\xfb\xae\x17@X\x01\x1a\x96\x03\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\xa8\xa1\xf8\xdc\xa8\xe0\xf7?!\xa8\xa1\xf8\xdc\xa8\xe0\x17@*\x8b\x01\n\x88\x01\xa8\xa1\xf8\xdc\xa8\xe0\xf7?\x00\x00\x00\x00\x00\x00\x04@ffffff\x04@\xcd\xcc\xcc\xcc\xcc\xcc\x04@333333\x05@\x9a\x99\x99\x99\x99\x99\x05@\x00\x00\x00\x00\x00\x00\x06@ffffff\x06@\xcd\xcc\xcc\xcc\xcc\xcc\x06@333333\x07@\x9a\x99\x99\x99\x99\x99\x07@\x00\x00\x00\x00\x00\x00\x08@\xcd\xcc\xcc\xcc\xcc\xcc\x08@\x9a\x99\x99\x99\x99\x99\t@ffffff\n@333333\x0b@\xa8\xa1\xf8\xdc\xa8\xe0\x17@0\x039\xe1[Q<\x12\xbe\xd5?B\x8b\x01\n\x88\x01\xc6\xcd;\x86(P\xda?\x1a\x04\xebo\xe9q\xcf?\x16E\xb3\x0b\x07\xf9\xcd?\x1d\xf4\xb3I\xc6\x16\xcd?\xe6\xe5\x02\x87lH\xcc?\xff"\xd8\xb1\xde\xc5\xcb?alBR\xcaQ\xcb?\xec\x88\xcd\x16\xf8\xd5\xca?\xf5\xb3\x8d\xc7\xa1]\xca?3A\xaa\xca\xaf\x1e\xca?k\xb6\x1f\xb8K\x19\xca?6\x12\x87Iy\xfa\xc9?n\xb5\xd4\xe1\xad2\xca?\xaa\x8c\xcf\x17x\xc3\xca?3\xf6 \xe7\x04\x97\xcb?\xfd\xd6\xa2;\xfb?\xcc?\xbb\xa8\x0fV\x95\x98\xd8?J*\n(\x00\x00\x00\x00\x00\x00\x00\x00\xf0qS\x89\xfe6\xb3?\xa3\x93\x8c\xfa{\x9d\xb6\xbf\xcfTb\x87\x85p\x8b\xbf\xd2<\x03Gf\xf5\xc7?R"\n \xe1[Q<\x12\xbe\xd5?\xa8\xa1\xf8\xdc\xa8\xe0\x07@\xa8\xa1\xf8\xdc\xa8\xe0\xf7?\xa8\xa1\xf8\xdc\xa8\xe0\x17@X\x01\x1a\x96\x03\x08\x01\x12\x07\x08\xe4\x0f\x10\x02\x18\x15\x19\x15\xca\x94$\xb6\x10\xf8?!\x15\xca\x94$\xb6\x10\x18@*\x8b\x01\n\x88\x01\x15\xca\x94$\xb6\x10\xf8?\x00\x00\x00\x00\x00\x00\x04@ffffff\x04@\xcd\xcc\xcc\xcc\xcc\xcc\x04@333333\x05@\x9a\x99\x99\x99\x99\x99\x05@\x00\x00\x00\x00\x00\x00\x06@ffffff\x06@\xcd\xcc\xcc\xcc\xcc\xcc\x06@333333\x07@\x9a\x99\x99\x99\x99\x99\x07@\x00\x00\x00\x00\x00\x00\x08@\xcd\xcc\xcc\xcc\xcc\xcc\x08@\x9a\x99\x99\x99\x99\x99\t@ffffff\n@333333\x0b@\x15\xca\x94$\xb6\x10\x18@0\x039\x97-[\xb6l\xd9\xe2?B\x8b\x01\n\x88\x01\xb5\xfe\x91\xf8\x15\xa5\xd2?\x92\x9ao\xc1I\x8b\xcd?\x84\xa6R\xb6%\x06\xcd?\xfa\xa9qx\x95\x8e\xcc?6\x0eO\xe2) \xcc?\x90\x0e\xe7`h\xbc\xcb?#{\xc2\xf4\xb3\x87\xcb?g\xbe\xb7jZG\xcb?\xa7F@\xb7\xa9\xfd\xca?@P\xbf\xf7@\xd6\xca?\x01\xaa\xff\xf4V\xa3\xca?\xd4\xc2F\xc4\x89\xba\xca?\xd8z3\xd4\xffs\xca?\xfe\x01\xf7\'L\xe4\xcc?\xe9a\xe1p\x8a0\xcb?\xc2/\xf6]\n\xbc\xcb?o\xea\x84_1\xa7\xd0?J*\n(H{\xbd\x8eJ\xac\x99?\xc6\x058\x97X\xc0\x9d?\xe6\x17O\x83\x16\x0f\xd3\xbfo\xa8\x8e\xe1\x1f\x9b\xa0\xbf~(\x99\xc4\x16\xa8\x93?R"\n \x97-[\xb6l\xd9\xe2?\x15\xca\x94$\xb6\x10\x08@\x15\xca\x94$\xb6\x10\xf8?\x15\xca\x94$\xb6\x10\x18@X\x01"\x07\x08\xe4\x0f\x10\x02\x18\x1a"\x07\x08\xe4\x0f\x10\x03\x18\x19"\x07\x08\xe4\x0f\x10\x06\x18\x18"\x07\x08\xe4\x0f\x10\t\x18\x17*\t50ETF.SSE'
        result = self.vol_surf
        self.assertEqual(result.SerializeToString(), expected)

    def test_pm_european_option_pricer(self):
        expected = b'\n\xe4\x06\t\xcd.\x8b\xdf\\g\x07A\x1a\xcf\x06\n\x96\x01\n\x05DELTA\x12T\n\x06EQUITY\x12\x1d\n\t50ETF.SSE\x12\x10\n\n\n\x08\x88\x1d6\x82\x07\x13!A\x12\x00\x1a\x00\x12+\n\x12DIVIDEND_50ETF.SSE\x12\x15\n\n\n\x08\x9dD\xb0X\x07A)\xc1\x12\x05TOTAL\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x02\x93\x8d\x16^^&A\x12\x05TOTAL\x1a\x00\n\x9f\x01\n\x0eDELTA_EXPOSURE\x12T\n\x06EQUITY\x12\x1d\n\t50ETF.SSE\x12\x10\n\n\n\x08\xef\xec\xa9\x07q)\xd0@\x12\x00\x1a\x00\x12+\n\x12DIVIDEND_50ETF.SSE\x12\x15\n\n\n\x08n\x9fD\xc9&\xb0T\xc0\x12\x05TOTAL\x1a\x00\x127\n\rINTEREST_RATE\x12&\n\rCNY_SHIBOR_3M\x12\x15\n\n\n\x08\x1fZ\xeaO\nSR@\x12\x05TOTAL\x1a\x00\n0\n\x05GAMMA\x12\'\n\x06EQUITY\x12\x1d\n\t50ETF.SSE\x12\x10\n\n\n\x08\xef|\xac6\x88\'+A\x12\x00\x1a\x00\n9\n\x0eGAMMA_EXPOSURE\x12\'\n\x06EQUITY\x12\x1d\n\t50ETF.SSE\x12\x10\n\n\n\x08\x03\x16\xf5\x9dgT\x88@\x12\x00\x1a\x00\n$\n\x05THETA\x12\x1b\n\x05THETA\x12\x12\x12\x10\n\n\n\x08\xea\xd9\x05\xb5\xea\x95\x05A\x12\x00\x1a\x00\n:\n\x05VANNA\x121\n\x06EQUITY\x12\'\n\t50ETF.SSE\x12\x1a\n\n\n\x08\xa5EjZj\xb0\xe4\xc0\x12\x05TOTAL\x1a\x05TOTAL\nC\n\x0eVANNA_EXPOSURE\x121\n\x06EQUITY\x12\'\n\t50ETF.SSE\x12\x1a\n\n\n\x08#5e\xb8\x1e\x11)\xc0\x12\x05TOTAL\x1a\x05TOTAL\n9\n\x04VEGA\x121\n\x06EQUITY\x12\'\n\t50ETF.SSE\x12\x1a\n\n\n\x08\t\x9e\xd6\xff\xea\xf6(A\x12\x05TOTAL\x1a\x05TOTAL\nB\n\rVEGA_EXPOSURE\x121\n\x06EQUITY\x12\'\n\t50ETF.SSE\x12\x1a\n\n\n\x08\xba\x07\xcb\xff_\xf4\xbf@\x12\x05TOTAL\x1a\x05TOTAL\n:\n\x05VOLGA\x121\n\x06EQUITY\x12\'\n\t50ETF.SSE\x12\x1a\n\n\n\x08I\xcb\xf7\xc2\'\xda\xcc@\x12\x05TOTAL\x1a\x05TOTAL\nC\n\x0eVOLGA_EXPOSURE\x121\n\x06EQUITY\x12\'\n\t50ETF.SSE\x12\x1a\n\n\n\x08\xbc\xb76\n\xbd\xa2\xf7?\x12\x05TOTAL\x1a\x05TOTAL"\x00*\x03CNY2\x00\x10\x01"\xa9\x08\x08\x0b\x10\x0c\x1a\xa0\x08F\x14Q\x97\xa0Z\xa9@\xd6\xe66~\xa4\xe6\xc2@\x15V\x98EtF\xd7@]e\xbb\xca\x00j\xe8@d#\x1e\x9a\xd8g\xf6@(\xd8\xa0\xa7Cj\x02A\xd0\xa8\x07\xbd\xda\xa9\x0bA\x93T\xb6\xaf^R\x13A>.\xad*sx\x19Aee\xe2XX\t Al\x8c\xdb\xca\x10{#AX1\xed\x8dJw\xb1@3\xc0,p\x8f\xd5\xc7@\xa2B\xd4\xf0Wj\xdb@\xbc\xa1\x15\xa3UQ\xeb@\x0b\xd1<\xfc\t%\xf8@G\xaaRB:R\x03Ae\x8b\xd6\xd4\x89\x7f\x0cA\x99Pe\xba\x96\xaa\x13A\xf5\xa4\xbe\x1f\x88\xba\x19AN\xa68&\t  A\x8e\xa7\xcf\xfa{\x89#A\xc5M]lN,\xb7@\xfeF<\xdf\xbeM\xcd@K\nz\xbf\xc9\xc6\xdf@a5\xc3\x00\x1bG\xee@\xe9\xa3\'\xf9s\xe3\xf9@6\xfd\x01yS:\x04A2N\xf2\xac\x9cW\rAy\xdf\x8c\x95\xc2\x05\x14A\xe0\xabi.\x08\x01\x1aA\xb2\x04V\xcf?9 Ag\xd5\xd7\x03N\x9a#A\'\x03\xca\xa7\xea\xcc\xbd@\xd2\x96H M\xa3\xd1@\x18\xd8\x13:\xe2*\xe2@\xd8\x04\x9e\xef\xaf\xa4\xf0@$r\x95\xb7\xe4\xa2\xfb@8B\xd8\xf3\x87"\x05A\x1c"\x15(\xbc1\x0eA\xa0\xd7C\xa0\x85c\x14A\xf35\xc7\x1c\x87K\x1aAY\xa0\x10\'\xd5T Ac\xb6JK|\xad#A\xd9\xa7;%\t\xab\xc2@\xa2\xc7\xfa\xca\xaf\xdb\xd4@\xf5\xf0\xba\xf2\xf8\x88\xe4@\xa5\xefR\x19B+\xf2@\x1e\x85\x06W3c\xfd@\xfcMg\x9d\xd1\n\x06A<\xf7\xeb8\xa0\r\x0fAl\x86\xab\x92\x90\xc3\x14A\x16\xab5`\xa2\x99\x1aA\xaa\xd4_\xe6\xa0r A%?m\xf9\xf4\xc2#A\xc6s\x81\xbf\x05\xe1\xc6@\xbc\xc9\xad\x9d\xb8K\xd8@}\x93%\x8dM\xfb\xe6@\t\x914\xc7\x94\xb6\xf3@\x05\xb3w\xf7=$\xff@u<\xc7Z+\xf3\x06A\x94\xa4\xb9\xca\x0c\xeb\x0fA\xde\xdf\xcdc\x9f%\x15Ab\xcf^\xfd\x00\xeb\x1aA@\x9b\xe5+{\x92 A\xac\x07^O\xa1\xda#A\x89\xfb\xa5V\x9c\x84\xcb@\x17zFpC\xef\xdb@D:\xfb\xa5\xcb\x7f\xe9@%\xed\xe3\x81\x13F\xf5@\xf3\xaa\xfe\x1f\xf4r\x00A\x1a\x03\x1c\xd6\x90\xdb\x07At\x1d\x00\xb1\xe7d\x10A\xbb\x1b\xe6\x81w\x89\x15A\xd6\x89\xa4\x05S?\x1bA\x82\x87|q=\xb4 A\xe2\x04?}g\xf4#A^nB\xb9\xaeH\xd0@{z\x9c\x18e\xc2\xdf@\xcb<x\xaa\x9d\x14\xec@\xec\xab]\xc0?\xd9\xf6@\x92\x93O \rT\x01A^\xde=V\xfe\xc3\x08A\xe6\x13\x03\xa3\xde\xd4\x10A[\xc4GT\xe6\xee\x15A\xd9\xf3)\xe4P\x96\x1bA\x86\x8e\x93\x1f\xc3\xd7 A\x92\xfb\xc3\x07,\x10$A\xf6E5<<\x01\xd3@\xf3\xa8\xa0a\xb9\xe0\xe1@\xf7\xa2e\'%\xb8\xee@}"~\x10\xado\xf8@\xa0\xabc\xcb_5\x02A\xect\xe7\x9fp\xac\tA\x88X\x8c\x08YE\x11A\x0e\xe0\xa6\xfc\xbfU\x16A\xf3.\xc5\x98\xba\xef\x1bA\xe2\x12h\xdc\xe9\xfc A\xa0\x8af\xd0\xd2-$A\xbe\xe9\x95\nv\xe9\xd5@\x154^O\x82\xf4\xe3@j\xb49\xecy\xb4\xf0@\xfa\xf3\xed\x01\xfe\x08\xfa@\xcc,ua\xe3\x16\x03A,C\xe4\xdd\xe4\x94\nA\xe8\xb9RGG\xb6\x11A\x1c\xbd\xd0M\xde\xbd\x16Az\xaa\x82\xf2VK\x1cA=\xb7\x1d\xad\x91#!AeA7\xd3?M$A\xdd\xd4g\x1e\xd5\xfe\xd8@\x17 \xc9\xbd\xfa\x1a\xe6@X\x94\xa1\xc0\xe2\x12\xf2@\x80;p\xa9\xe1\xa4\xfb@\x10\xe4\x82Q\x90\xf8\x03A\x7f\xf2u\x8eX}\x0bA\x19lj\xea\x9b\'\x12AL\x1a\xeb\xee\x1f\'\x17A!v|\xd3\xf2\xa8\x1cAejp\xf8\x9cK!A\xd1D\x0b\xabWn$AY\x96\x85!\xd9>\xdc@\x93\x8biB\xb0R\xe8@\xfbk]D\xbdv\xf3@\xc8$7\x9c\x11C\xfd@\x8e7\x81\x04`\xda\x04A\x98\xe2\xa7t\xc9e\x0cA\xac\xcd\x02FK\x99\x12A\x0b{\x8d\xa3g\x91\x17AL\x86\xed\x82`\x08\x1dAdU\x10v\xf0t!Ah\x08\xf3\xe9\xff\x90$A \x01*Z\nX\x03\t\x8a\x1fc\xee\x02@\xaa\xbc\x1d\xe1\xb4\xe0\x03@Qp\xb1\xa2\x06\xd3\x04@\xf8#EdX\xc5\x05@\x9f\xd7\xd8%\xaa\xb7\x06@F\x8bl\xe7\xfb\xa9\x07@\xed>\x00\xa9M\x9c\x08@\x94\xf2\x93j\x9f\x8e\t@;\xa6\',\xf1\x80\n@\xe2Y\xbb\xedBs\x0b@\x89\rO\xaf\x94e\x0c@2b\n`\x9a\x99\x99\x99\x99\x99\xa9\xbf\xf2\x94 O\t\xf2\xa4\xbfJ\x90\xa7\x04yJ\xa0\xbfD\x17]t\xd1E\x97\xbf\xe9\x1b\xd6\xbea\xed\x8b\xbf\x94\x12\xe4)A\x9er\xbf\xaa\x12\xe4)A\x9er?\xf4\x1b\xd6\xbea\xed\x8b?J\x17]t\xd1E\x97?M\x90\xa7\x04yJ\xa0?\xf5\x94 O\t\xf2\xa4?\x9d\x99\x99\x99\x99\x99\xa9?'

        inst = create_european_option(
            payoff_type='CALL',
            expiry=datetime(2020, 8, 19),
            delivery=datetime(2020, 8, 20),
            strike=66380.00,
            nominal=1000000.0,
            payoff_ccy='CNY',
            underlying_type='FUTURE_UNDERLYING_TYPE',
            underlying_ccy='CNY',
            underlying=self.underlying
        )

        result = cm_european_option_pricer(
            instrument=inst,
            pricing_date=self.as_of_date,
            mkt_data_set=self.mkt_data_set,
            pricing_settings=self.bsm_analytical_pricing_settings,
            risk_settings=self.risk_settings,
            scn_settings=self.scenario_analysis_settings
        )
        self.assertEqual(result.SerializeToString(), expected)
    
    
'''
if __name__ == "__main__":
    suite = unittest.TestLoader().loadTestsFromTestCase(TestCmAnalytics)
    unittest.TextTestRunner(verbosity=2).run(suite)