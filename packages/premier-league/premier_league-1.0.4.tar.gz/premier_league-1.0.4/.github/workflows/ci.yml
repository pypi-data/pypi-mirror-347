name: Premier League Library CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install lxml system dependencies
      run: sudo apt-get update && sudo apt-get install -y libxml2-dev libxslt1-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --use-pep517 -e ".[all]"
        pip install -r requirements-test.txt
        pip install pylint

    - name: Lint with pylint
      run: |
        PYTHONPATH=./premier_league pylint premier_league/ tests/ --disable=all --enable=E,F

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12' ]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install lxml system dependencies
      run: sudo apt-get update && sudo apt-get install -y libxml2-dev libxslt1-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --use-pep517 -e ".[all]"
        pip install -r requirements-test.txt
        pip install pytest-html

    - name: Test with pytest and generate HTML report
      run: |
        mkdir -p test-reports
        pytest tests/ -v --html=test-reports/report.html

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: |
          .pytest_cache
          test-reports/
        retention-days: 7
