Metadata-Version: 2.4
Name: tno.quantum.optimization.qubo.preprocessors
Version: 1.0.0
Summary: QUBO preprocessors
Author-email: TNO Quantum Code Lab <tnoquantum@tno.nl>
Maintainer-email: TNO Quantum Code Lab <tnoquantum@tno.nl>
License: Apache License, Version 2.0
Project-URL: Homepage, https://github.com/TNO-Quantum/
Project-URL: Documentation, https://github.com/TNO-Quantum/
Project-URL: Source, https://github.com/TNO-Quantum/optimization.qubo.preprocessors
Keywords: TNO,Quantum,Optimization,QUBO,Preprocessing
Platform: any
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: Typing :: Typed
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: tno.quantum.optimization.qubo.components~=1.0
Provides-Extra: tests
Requires-Dist: pytest>=8.1.1; extra == "tests"
Requires-Dist: pytest-cov>=4.1.0; extra == "tests"
Requires-Dist: tomlkit; extra == "tests"
Dynamic: license-file

# TNO Quantum: Optimization - QUBO - Preprocessors

TNO Quantum provides generic software components aimed at facilitating the development
of quantum applications.

This package contains implementations of QUBO preprocessors.

## Documentation

Documentation of the `tno.quantum.optimization.qubo.preprocessors` package can be found [here](https://tno-quantum.github.io/documentation/).


## Install

Easily install the `tno.quantum.optimization.qubo.preprocessors` package using pip:

```console
$ python -m pip install tno.quantum.optimization.qubo.preprocessors
```

## Usage

The following example shows how to list the available preprocessor and how to instantiate them.

```python
from tno.quantum.optimization.qubo.components import PreprocessorConfig
supported_preprocessors = PreprocessorConfig.supported_items()
preprocessor = PreprocessorConfig(name='q_pro_plus_preprocessor').get_instance()
```

Alternatively, a preprocessor can also be instantiated directly.

```python
from tno.quantum.optimization.qubo.preprocessors import QProPlusPreprocessor
preprocessor = QProPlusPreprocessor(max_iter=10)
```

## (End)use limitations
The content of this software may solely be used for applications that comply with international export control laws.
