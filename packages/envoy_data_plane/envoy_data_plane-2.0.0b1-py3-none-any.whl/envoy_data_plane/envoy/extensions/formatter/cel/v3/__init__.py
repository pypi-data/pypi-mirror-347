# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/formatter/cel/v3/cel.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("Cel",)

from dataclasses import dataclass

import betterproto2

from ......message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False)
class Cel(betterproto2.Message):
    """
    [#protodoc-title: Formatter extension for printing CEL expressions]
    [#extension: envoy.formatter.cel]

    CEL formatter extension implements CEL command operator that evaluates configured
    symbolic Common Expression Language expressions to generate an access log.

    See :ref:`here <config_access_log>` for more information on access log configuration.

    %CEL(EXPRESSION):Z%
    Expressions are based on the set of Envoy :ref:`attributes <arch_overview_attributes>`.
    Expression errors are considered `-`. Z is an optional parameter denoting string
    truncation up to Z characters long.

    Examples:

    * ``%CEL(response.code)%``
    * ``%CEL(connection.mtls)%``
    * ``%CEL(request.headers['x-envoy-original-path']):10%``
    * ``%CEL(request.headers['x-log-mtls'] || request.url_path.contains('v1beta3'))%``

    Configuration for the CEL formatter.

    .. warning::
      This extension is treated as built-in extension and will be enabled by default now.
      It is unnecessary to configure this extension.
    """

    pass


default_message_pool.register_message("envoy.extensions.formatter.cel.v3", "Cel", Cel)
