# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: envoy/extensions/filters/listener/tls_inspector/v3/tls_inspector.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = ("TlsInspector",)

from dataclasses import dataclass

import betterproto2

from .......message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False)
class TlsInspector(betterproto2.Message):
    """
    [#protodoc-title: TLS Inspector Filter]
    Allows detecting whether the transport appears to be TLS or plaintext.
    [#extension: envoy.filters.listener.tls_inspector]
    """

    enable_ja3_fingerprinting: "bool | None" = betterproto2.field(
        1,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.BoolValue,
        optional=True,
    )
    """
    Populate ``JA3`` fingerprint hash using data from the TLS Client Hello packet. Default is false.
    """

    initial_read_buffer_size: "int | None" = betterproto2.field(
        2,
        betterproto2.TYPE_MESSAGE,
        unwrap=lambda: ______google__protobuf__.UInt32Value,
        optional=True,
    )
    """
    The size in bytes of the initial buffer requested by the tls_inspector.
    If the filter needs to read additional bytes from the socket, the
    filter will double the buffer up to it's default maximum of 64KiB.
    If this size is not defined, defaults to maximum 64KiB that the
    tls inspector will consume.
    """


default_message_pool.register_message(
    "envoy.extensions.filters.listener.tls_inspector.v3", "TlsInspector", TlsInspector
)


from .......google import protobuf as ______google__protobuf__
