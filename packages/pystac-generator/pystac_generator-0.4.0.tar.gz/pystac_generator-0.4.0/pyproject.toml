[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
authors = [
    { name = "Joseph Sclauzero", email = "joseph.sclauzero@adelaide.edu.au" },
]
requires-python = ">=3.11"
dependencies = [
    "pystac>=1.10.1",
    "jsonschema>=4.23.0",
    "rasterio>=1.4.1",
    "geopandas>=1.0.1",
    "httpx>=0.27.2",
    "stac-pydantic>=3.1.2",
    "fiona>=1.10.1",
    "timezonefinder>=6.5.5",
    "click>=8.1.8",
    "rich-argparse>=1.7.0",
    "pyyaml>=6.0.2",
]
name = "pystac-generator"
dynamic = []
description = "A python package and CLI tool for generating STAC catalog from spatial data files"
readme = "README.md"
keywords = [
    "stac",
    "generator",
    "stac-generator",
]
version = "0.4.0"

[project.license]
text = "MIT"

[project.urls]
repository = "https://github.com/JosephUoA/stac-generator"

[project.scripts]
stac_generator = "stac_generator.__main__:run_cli"

[tool.coverage.run]
source = [
    "stac_generator",
]
omit = [
    "stac_generator/__main__.py",
    "stac_generator/__version__.py",
]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "@(abc\\.)?abstractmethod",
    "def __getattr__",
    "if TYPE_CHECKING:",
    "pragma: no cover",
]

[tool.ruff]
line-length = 100
src = [
    "stac_generator",
]
target-version = "py311"

[tool.ruff.lint]
select = [
    "A",
    "B",
    "BLE",
    "C4",
    "C90",
    "D",
    "DJ",
    "DTZ",
    "E",
    "ERA",
    "EXE",
    "F",
    "G",
    "I",
    "ICN",
    "ISC",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "SIM",
    "T10",
    "TCH",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "A003",
    "B010",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D202",
    "D205",
    "D415",
    "E501",
    "PLW2901",
    "RUF012",
    "ISC001",
    "A002",
    "ERA001",
    "G004",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.isort]
known-first-party = [
    "stac_generator",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.*" = [
    "A",
    "ARG",
    "B",
    "BLE",
    "C901",
    "D",
    "DTZ",
    "EM",
    "FBT",
    "G",
    "N",
    "PGH",
    "PIE",
    "PLR",
    "PLW",
    "PTH",
    "RSE",
    "S",
    "S101",
    "SIM",
    "TCH",
    "TRY",
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 90

[tool.mypy]
packages = [
    "stac_generator",
]
python_version = "3.11"
disallow_any_generics = false
disallow_untyped_decorators = true
disallow_untyped_calls = true
enable_error_code = "ignore-without-code"
implicit_reexport = false
show_error_codes = true
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = "rasterio.*,requests.*,shapely.*,geopandas.*,fiona.*,yaml.*,pyogrio.*"
ignore_missing_imports = true

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "stac_generator/__version__.py"

[tool.pdm.build]
excludes = [
    "./**/.git",
]

[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-httpx>=0.33.0",
]
analysis = [
    "mypy>=1.11.2",
    "ruff>=0.6.8",
    "pre-commit>=3.8.0",
]
dev = [
    "jupyter>=1.1.1",
    "matplotlib>=3.9.2",
]
cli = [
    "rich-argparse>=1.5.2",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[dependency-groups]
type-stubs = [
    "pandas-stubs>=2.2.3.250308",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.39",
    "mkdocstrings-python>=1.11.1",
    "markdown-exec>=1.9.3",
    "mkdocs-version-annotations>=1.0.0",
    "mkdocs-autorefs>=1.2.0",
    "mkdocs-jupyter>=0.25.0",
    "mkdocs-table-reader-plugin>=3.1.0",
]
