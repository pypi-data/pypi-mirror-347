# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'AutoCertificateProviderExternalAccountBinding',
    'GetAutoCertificateProviderExternalAccountBindingResult',
]

@pulumi.output_type
class AutoCertificateProviderExternalAccountBinding(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "keyId":
            suggest = "key_id"
        elif key == "keySecret":
            suggest = "key_secret"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in AutoCertificateProviderExternalAccountBinding. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        AutoCertificateProviderExternalAccountBinding.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        AutoCertificateProviderExternalAccountBinding.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 key_id: str,
                 key_secret: str):
        """
        :param str key_id: [string] The key ID of the external account binding.
        :param str key_secret: [string] The key secret of the external account binding
        """
        pulumi.set(__self__, "key_id", key_id)
        pulumi.set(__self__, "key_secret", key_secret)

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> str:
        """
        [string] The key ID of the external account binding.
        """
        return pulumi.get(self, "key_id")

    @property
    @pulumi.getter(name="keySecret")
    def key_secret(self) -> str:
        """
        [string] The key secret of the external account binding
        """
        return pulumi.get(self, "key_secret")


@pulumi.output_type
class GetAutoCertificateProviderExternalAccountBindingResult(dict):
    def __init__(__self__, *,
                 key_id: str):
        """
        :param str key_id: [string] The key ID of the external account binding.
        """
        pulumi.set(__self__, "key_id", key_id)

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> str:
        """
        [string] The key ID of the external account binding.
        """
        return pulumi.get(self, "key_id")


