# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/identibench',
                'doc_host': 'https://daniel-om-weber.github.io',
                'git_url': 'https://github.com/daniel-om-weber/identibench',
                'lib_path': 'identibench'},
  'syms': { 'identibench.benchmark': { 'identibench.benchmark.BenchmarkSpecBase': ( 'benchmark.html#benchmarkspecbase',
                                                                                    'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.__init__': ( 'benchmark.html#benchmarkspecbase.__init__',
                                                                                             'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.data_root': ( 'benchmark.html#benchmarkspecbase.data_root',
                                                                                              'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.dataset_path': ( 'benchmark.html#benchmarkspecbase.dataset_path',
                                                                                                 'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.ensure_dataset_exists': ( 'benchmark.html#benchmarkspecbase.ensure_dataset_exists',
                                                                                                          'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.test_files': ( 'benchmark.html#benchmarkspecbase.test_files',
                                                                                               'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.test_path': ( 'benchmark.html#benchmarkspecbase.test_path',
                                                                                              'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.train_files': ( 'benchmark.html#benchmarkspecbase.train_files',
                                                                                                'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.train_path': ( 'benchmark.html#benchmarkspecbase.train_path',
                                                                                               'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.train_valid_files': ( 'benchmark.html#benchmarkspecbase.train_valid_files',
                                                                                                      'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.train_valid_path': ( 'benchmark.html#benchmarkspecbase.train_valid_path',
                                                                                                     'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.valid_files': ( 'benchmark.html#benchmarkspecbase.valid_files',
                                                                                                'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecBase.valid_path': ( 'benchmark.html#benchmarkspecbase.valid_path',
                                                                                               'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecPrediction': ( 'benchmark.html#benchmarkspecprediction',
                                                                                          'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecPrediction.__init__': ( 'benchmark.html#benchmarkspecprediction.__init__',
                                                                                                   'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecSimulation': ( 'benchmark.html#benchmarkspecsimulation',
                                                                                          'identibench/benchmark.py'),
                                       'identibench.benchmark.BenchmarkSpecSimulation.__init__': ( 'benchmark.html#benchmarkspecsimulation.__init__',
                                                                                                   'identibench/benchmark.py'),
                                       'identibench.benchmark.TrainingContext': ( 'benchmark.html#trainingcontext',
                                                                                  'identibench/benchmark.py'),
                                       'identibench.benchmark.TrainingContext.__init__': ( 'benchmark.html#trainingcontext.__init__',
                                                                                           'identibench/benchmark.py'),
                                       'identibench.benchmark.TrainingContext.get_train_sequences': ( 'benchmark.html#trainingcontext.get_train_sequences',
                                                                                                      'identibench/benchmark.py'),
                                       'identibench.benchmark.TrainingContext.get_train_valid_sequences': ( 'benchmark.html#trainingcontext.get_train_valid_sequences',
                                                                                                            'identibench/benchmark.py'),
                                       'identibench.benchmark.TrainingContext.get_valid_sequences': ( 'benchmark.html#trainingcontext.get_valid_sequences',
                                                                                                      'identibench/benchmark.py'),
                                       'identibench.benchmark._dummy_build_model': ( 'benchmark.html#_dummy_build_model',
                                                                                     'identibench/benchmark.py'),
                                       'identibench.benchmark._test_prediction': ( 'benchmark.html#_test_prediction',
                                                                                   'identibench/benchmark.py'),
                                       'identibench.benchmark._test_simulation': ( 'benchmark.html#_test_simulation',
                                                                                   'identibench/benchmark.py'),
                                       'identibench.benchmark.aggregate_benchmark_results': ( 'benchmark.html#aggregate_benchmark_results',
                                                                                              'identibench/benchmark.py'),
                                       'identibench.benchmark.aggregate_metric_score': ( 'benchmark.html#aggregate_metric_score',
                                                                                         'identibench/benchmark.py'),
                                       'identibench.benchmark.benchmark_results_to_dataframe': ( 'benchmark.html#benchmark_results_to_dataframe',
                                                                                                 'identibench/benchmark.py'),
                                       'identibench.benchmark.run_benchmark': ('benchmark.html#run_benchmark', 'identibench/benchmark.py'),
                                       'identibench.benchmark.run_benchmarks': ( 'benchmark.html#run_benchmarks',
                                                                                 'identibench/benchmark.py')},
            'identibench.datasets.broad': { 'identibench.datasets.broad.dl_broad': ( 'datasets/broad.html#dl_broad',
                                                                                     'identibench/datasets/broad.py')},
            'identibench.datasets.industrial_robot': { 'identibench.datasets.industrial_robot.dl_robot_forward': ( 'datasets/industrial_robot.html#dl_robot_forward',
                                                                                                                   'identibench/datasets/industrial_robot.py'),
                                                       'identibench.datasets.industrial_robot.dl_robot_inverse': ( 'datasets/industrial_robot.html#dl_robot_inverse',
                                                                                                                   'identibench/datasets/industrial_robot.py'),
                                                       'identibench.datasets.industrial_robot.robot_mat2hdf': ( 'datasets/industrial_robot.html#robot_mat2hdf',
                                                                                                                'identibench/datasets/industrial_robot.py')},
            'identibench.datasets.quad_pelican': { 'identibench.datasets.quad_pelican.dl_quad_pelican': ( 'datasets/quad_pelican.html#dl_quad_pelican',
                                                                                                          'identibench/datasets/quad_pelican.py'),
                                                   'identibench.datasets.quad_pelican.get_parent_dir': ( 'datasets/quad_pelican.html#get_parent_dir',
                                                                                                         'identibench/datasets/quad_pelican.py')},
            'identibench.datasets.quad_pi': { 'identibench.datasets.quad_pi.appendHistory': ( 'datasets/quadrotor_pi.html#appendhistory',
                                                                                              'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.applyButterLowpassFilter': ( 'datasets/quadrotor_pi.html#applybutterlowpassfilter',
                                                                                                         'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.applySavitzkyGolayFilter': ( 'datasets/quadrotor_pi.html#applysavitzkygolayfilter',
                                                                                                         'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.butterLowpassFilter': ( 'datasets/quadrotor_pi.html#butterlowpassfilter',
                                                                                                    'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.computeSpline': ( 'datasets/quadrotor_pi.html#computespline',
                                                                                              'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.differentiate': ( 'datasets/quadrotor_pi.html#differentiate',
                                                                                              'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.differentiateFivePointStencil': ( 'datasets/quadrotor_pi.html#differentiatefivepointstencil',
                                                                                                              'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.dl_quad_pi': ( 'datasets/quadrotor_pi.html#dl_quad_pi',
                                                                                           'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.dropNoise': ( 'datasets/quadrotor_pi.html#dropnoise',
                                                                                          'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.extract_hdf_from_bag': ( 'datasets/quadrotor_pi.html#extract_hdf_from_bag',
                                                                                                     'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.get_parent_dir': ( 'datasets/quadrotor_pi.html#get_parent_dir',
                                                                                               'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.nominalModel': ( 'datasets/quadrotor_pi.html#nominalmodel',
                                                                                             'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.parseBag': ( 'datasets/quadrotor_pi.html#parsebag',
                                                                                         'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.processBag': ( 'datasets/quadrotor_pi.html#processbag',
                                                                                           'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.savitzkyGolayFilter': ( 'datasets/quadrotor_pi.html#savitzkygolayfilter',
                                                                                                    'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.shift': ( 'datasets/quadrotor_pi.html#shift',
                                                                                      'identibench/datasets/quad_pi.py'),
                                              'identibench.datasets.quad_pi.shiftFilteredSpline': ( 'datasets/quadrotor_pi.html#shiftfilteredspline',
                                                                                                    'identibench/datasets/quad_pi.py')},
            'identibench.datasets.ship': { 'identibench.datasets.ship.dl_ship': ( 'datasets/ship.html#dl_ship',
                                                                                  'identibench/datasets/ship.py')},
            'identibench.datasets.workshop': { 'identibench.datasets.workshop.dl_cascaded_tanks': ( 'datasets/workshop.html#dl_cascaded_tanks',
                                                                                                    'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.dl_ced': ( 'datasets/workshop.html#dl_ced',
                                                                                         'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.dl_emps': ( 'datasets/workshop.html#dl_emps',
                                                                                          'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.dl_noisy_wh': ( 'datasets/workshop.html#dl_noisy_wh',
                                                                                              'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.dl_silverbox': ( 'datasets/workshop.html#dl_silverbox',
                                                                                               'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.dl_wiener_hammerstein': ( 'datasets/workshop.html#dl_wiener_hammerstein',
                                                                                                        'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.evaluate_ced': ( 'datasets/workshop.html#evaluate_ced',
                                                                                               'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.evaluate_silverbox': ( 'datasets/workshop.html#evaluate_silverbox',
                                                                                                     'identibench/datasets/workshop.py'),
                                               'identibench.datasets.workshop.rmse_mV': ( 'datasets/workshop.html#rmse_mv',
                                                                                          'identibench/datasets/workshop.py')},
            'identibench.metrics': { 'identibench.metrics.fit_index': ('metrics.html#fit_index', 'identibench/metrics.py'),
                                     'identibench.metrics.mae': ('metrics.html#mae', 'identibench/metrics.py'),
                                     'identibench.metrics.nrmse': ('metrics.html#nrmse', 'identibench/metrics.py'),
                                     'identibench.metrics.r_squared': ('metrics.html#r_squared', 'identibench/metrics.py'),
                                     'identibench.metrics.rmse': ('metrics.html#rmse', 'identibench/metrics.py')},
            'identibench.utils': { 'identibench.utils._dummy_dataset_loader': ('utils.html#_dummy_dataset_loader', 'identibench/utils.py'),
                                   'identibench.utils._load_sequences_from_files': ( 'utils.html#_load_sequences_from_files',
                                                                                     'identibench/utils.py'),
                                   'identibench.utils.dataset_to_hdf5': ('utils.html#dataset_to_hdf5', 'identibench/utils.py'),
                                   'identibench.utils.download': ('utils.html#download', 'identibench/utils.py'),
                                   'identibench.utils.get_default_data_root': ('utils.html#get_default_data_root', 'identibench/utils.py'),
                                   'identibench.utils.hdf_files_from_path': ('utils.html#hdf_files_from_path', 'identibench/utils.py'),
                                   'identibench.utils.iodata_to_hdf5': ('utils.html#iodata_to_hdf5', 'identibench/utils.py'),
                                   'identibench.utils.unrar_download': ('utils.html#unrar_download', 'identibench/utils.py'),
                                   'identibench.utils.unzip_download': ('utils.html#unzip_download', 'identibench/utils.py'),
                                   'identibench.utils.write_array': ('utils.html#write_array', 'identibench/utils.py'),
                                   'identibench.utils.write_dataset': ('utils.html#write_dataset', 'identibench/utils.py')}}}
