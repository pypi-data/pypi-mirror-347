# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetNdbDbserversResult',
    'AwaitableGetNdbDbserversResult',
    'get_ndb_dbservers',
    'get_ndb_dbservers_output',
]

@pulumi.output_type
class GetNdbDbserversResult:
    """
    A collection of values returned by getNdbDbservers.
    """
    def __init__(__self__, dbservers=None, id=None):
        if dbservers and not isinstance(dbservers, list):
            raise TypeError("Expected argument 'dbservers' to be a list")
        pulumi.set(__self__, "dbservers", dbservers)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def dbservers(self) -> Sequence['outputs.GetNdbDbserversDbserverResult']:
        return pulumi.get(self, "dbservers")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetNdbDbserversResult(GetNdbDbserversResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNdbDbserversResult(
            dbservers=self.dbservers,
            id=self.id)


def get_ndb_dbservers(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNdbDbserversResult:
    """
    List of all Database Server VM in Nutanix Database Service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nutanix as nutanix

    dbservers = nutanix.get_ndb_dbservers()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('nutanix:index/getNdbDbservers:getNdbDbservers', __args__, opts=opts, typ=GetNdbDbserversResult).value

    return AwaitableGetNdbDbserversResult(
        dbservers=pulumi.get(__ret__, 'dbservers'),
        id=pulumi.get(__ret__, 'id'))
def get_ndb_dbservers_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNdbDbserversResult]:
    """
    List of all Database Server VM in Nutanix Database Service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_nutanix as nutanix

    dbservers = nutanix.get_ndb_dbservers()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('nutanix:index/getNdbDbservers:getNdbDbservers', __args__, opts=opts, typ=GetNdbDbserversResult)
    return __ret__.apply(lambda __response__: GetNdbDbserversResult(
        dbservers=pulumi.get(__response__, 'dbservers'),
        id=pulumi.get(__response__, 'id')))
