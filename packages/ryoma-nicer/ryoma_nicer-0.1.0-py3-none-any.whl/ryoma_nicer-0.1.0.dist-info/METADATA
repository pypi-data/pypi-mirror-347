Metadata-Version: 2.4
Name: ryoma-nicer
Version: 0.1.0
Summary: a clone from the root project for Ryoma AI Platform â€“ made compatible with Pydantic v2
License: Apache License
        Version 2.0, January 2004
        http://www.apache.org/licenses/
        
        TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
        1. Definitions.
        
            "License" shall mean the terms and conditions for use, reproduction, and
            distribution as defined by Sections 1 through 9 of this document.
        
            "Licensor" shall mean the copyright owner or entity authorized by the
            copyright owner that is granting the License.
        
            "Legal Entity" shall mean the union of the acting entity and all other
            entities that control, are controlled by, or are under common control with
            that entity. For the purposes of this definition, "control" means (i) the
            power, direct or indirect, to cause the direction or management of such
            entity, whether by contract or otherwise, or (ii) ownership of
            fifty percent (50%) or more of the outstanding shares, or (iii) beneficial
            ownership of such entity.
        
            "You" (or "Your") shall mean an individual or Legal Entity exercising
            permissions granted by this License.
        
            "Source" form shall mean the preferred form for making modifications,
            including but not limited to software source code, documentation source,
            and configuration files.
        
            "Object" form shall mean any form resulting from mechanical transformation
            or translation of a Source form, including but not limited to compiled
            object code, generated documentation, and conversions to
            other media types.
        
            "Work" shall mean the work of authorship, whether in Source or Object
            form, made available under the License, as indicated by a copyright notice
            that is included in or attached to the work (an example is provided in the
            Appendix below).
        
            "Derivative Works" shall mean any work, whether in Source or Object form,
            that is based on (or derived from) the Work and for which the editorial
            revisions, annotations, elaborations, or other modifications represent,
            as a whole, an original work of authorship. For the purposes of this
            License, Derivative Works shall not include works that remain separable
            from, or merely link (or bind by name) to the interfaces of, the Work and
            Derivative Works thereof.
        
            "Contribution" shall mean any work of authorship, including the original
            version of the Work and any modifications or additions to that Work or
            Derivative Works thereof, that is intentionally submitted to Licensor for
            inclusion in the Work by the copyright owner or by an individual or
            Legal Entity authorized to submit on behalf of the copyright owner.
            For the purposes of this definition, "submitted" means any form of
            electronic, verbal, or written communication sent to the Licensor or its
            representatives, including but not limited to communication on electronic
            mailing lists, source code control systems, and issue tracking systems
            that are managed by, or on behalf of, the Licensor for the purpose of
            discussing and improving the Work, but excluding communication that is
            conspicuously marked or otherwise designated in writing by the copyright
            owner as "Not a Contribution."
        
            "Contributor" shall mean Licensor and any individual or Legal Entity on
            behalf of whom a Contribution has been received by Licensor and
            subsequently incorporated within the Work.
        
        2. Grant of Copyright License.
        
            Subject to the terms and conditions of this License, each Contributor
            hereby grants to You a perpetual, worldwide, non-exclusive, no-charge,
            royalty-free, irrevocable copyright license to reproduce, prepare
            Derivative Works of, publicly display, publicly perform, sublicense,
            and distribute the Work and such Derivative Works in
            Source or Object form.
        
        3. Grant of Patent License.
        
            Subject to the terms and conditions of this License, each Contributor
            hereby grants to You a perpetual, worldwide, non-exclusive, no-charge,
            royalty-free, irrevocable (except as stated in this section) patent
            license to make, have made, use, offer to sell, sell, import, and
            otherwise transfer the Work, where such license applies only to those
            patent claims licensable by such Contributor that are necessarily
            infringed by their Contribution(s) alone or by combination of their
            Contribution(s) with the Work to which such Contribution(s) was submitted.
            If You institute patent litigation against any entity (including a
            cross-claim or counterclaim in a lawsuit) alleging that the Work or a
            Contribution incorporated within the Work constitutes direct or
            contributory patent infringement, then any patent licenses granted to
            You under this License for that Work shall terminate as of the date such
            litigation is filed.
        
        4. Redistribution.
        
            You may reproduce and distribute copies of the Work or Derivative Works
            thereof in any medium, with or without modifications, and in Source or
            Object form, provided that You meet the following conditions:
        
            1. You must give any other recipients of the Work or Derivative Works a
            copy of this License; and
        
            2. You must cause any modified files to carry prominent notices stating
            that You changed the files; and
        
            3. You must retain, in the Source form of any Derivative Works that You
            distribute, all copyright, patent, trademark, and attribution notices from
            the Source form of the Work, excluding those notices that do not pertain
            to any part of the Derivative Works; and
        
            4. If the Work includes a "NOTICE" text file as part of its distribution,
            then any Derivative Works that You distribute must include a readable copy
            of the attribution notices contained within such NOTICE file, excluding
            those notices that do not pertain to any part of the Derivative Works,
            in at least one of the following places: within a NOTICE text file
            distributed as part of the Derivative Works; within the Source form or
            documentation, if provided along with the Derivative Works; or, within a
            display generated by the Derivative Works, if and wherever such
            third-party notices normally appear. The contents of the NOTICE file are
            for informational purposes only and do not modify the License.
            You may add Your own attribution notices within Derivative Works that You
            distribute, alongside or as an addendum to the NOTICE text from the Work,
            provided that such additional attribution notices cannot be construed
            as modifying the License.
        
            You may add Your own copyright statement to Your modifications and may
            provide additional or different license terms and conditions for use,
            reproduction, or distribution of Your modifications, or for any such
            Derivative Works as a whole, provided Your use, reproduction, and
            distribution of the Work otherwise complies with the conditions
            stated in this License.
        
        5. Submission of Contributions.
        
            Unless You explicitly state otherwise, any Contribution intentionally
            submitted for inclusion in the Work by You to the Licensor shall be under
            the terms and conditions of this License, without any additional
            terms or conditions. Notwithstanding the above, nothing herein shall
            supersede or modify the terms of any separate license agreement you may
            have executed with Licensor regarding such Contributions.
        
        6. Trademarks.
        
            This License does not grant permission to use the trade names, trademarks,
            service marks, or product names of the Licensor, except as required for
            reasonable and customary use in describing the origin of the Work and
            reproducing the content of the NOTICE file.
        
        7. Disclaimer of Warranty.
        
            Unless required by applicable law or agreed to in writing, Licensor
            provides the Work (and each Contributor provides its Contributions)
            on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
            either express or implied, including, without limitation, any warranties
            or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS
            FOR A PARTICULAR PURPOSE. You are solely responsible for determining the
            appropriateness of using or redistributing the Work and assume any risks
            associated with Your exercise of permissions under this License.
        
        8. Limitation of Liability.
        
            In no event and under no legal theory, whether in tort
            (including negligence), contract, or otherwise, unless required by
            applicable law (such as deliberate and grossly negligent acts) or agreed
            to in writing, shall any Contributor be liable to You for damages,
            including any direct, indirect, special, incidental, or consequential
            damages of any character arising as a result of this License or out of
            the use or inability to use the Work (including but not limited to damages
            for loss of goodwill, work stoppage, computer failure or malfunction,
            or any and all other commercial damages or losses), even if such
            Contributor has been advised of the possibility of such damages.
        
        9. Accepting Warranty or Additional Liability.
        
            While redistributing the Work or Derivative Works thereof, You may choose
            to offer, and charge a fee for, acceptance of support, warranty,
            indemnity, or other liability obligations and/or rights consistent with
            this License. However, in accepting such obligations, You may act only
            on Your own behalf and on Your sole responsibility, not on behalf of any
            other Contributor, and only if You agree to indemnify, defend, and hold
            each Contributor harmless for any liability incurred by, or claims
            asserted against, such Contributor by reason of your accepting any such
            warranty or additional liability.
        
        END OF TERMS AND CONDITIONS
        
        APPENDIX: How to apply the Apache License to your work
        
            To apply the Apache License to your work, attach the following boilerplate
            notice, with the fields enclosed by brackets "[]" replaced with your own
            identifying information. (Don't include the brackets!) The text should be
            enclosed in the appropriate comment syntax for the file format. We also
            recommend that a file or class name and description of purpose be included
            on the same "printed page" as the copyright notice for easier
            identification within third-party archives.
        
                Copyright 2024 ryoma
        
                Licensed under the Apache License, Version 2.0 (the "License");
                you may not use this file except in compliance with the License.
                You may obtain a copy of the License at
        
                http://www.apache.org/licenses/LICENSE-2.0
        
                Unless required by applicable law or agreed to in writing, software
                distributed under the License is distributed on an "AS IS" BASIS,
                WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
                or implied. See the License for the specific language governing
                permissions and limitations under the License.
License-File: LICENSE
Requires-Python: >=3.10
Requires-Dist: black>=23.3.0
Requires-Dist: click>=8.0.0
Requires-Dist: coverage-badge>=1.1.2
Requires-Dist: flake8>=3.9.2
Requires-Dist: isort>=5.9.3
Requires-Dist: mypy>=0.910
Requires-Dist: openai-responses>=0.10.0
Requires-Dist: pip>=21.3.1
Requires-Dist: pydantic<3.0.0,>=2.0.0
Requires-Dist: pytest-cov>=5.0.0
Requires-Dist: pytest>=6.2.5
Requires-Dist: pyupgrade>=2.26.0
Requires-Dist: setuptools>=58.0.4
Description-Content-Type: text/markdown

# Ryoma
AI Powered Data Agent framework, a comprehensive solution for data analysis, engineering, and visualization. This version is compatible with pydandic v2. 


[![Build status](https://github.com/project-ryoma/ryoma/workflows/build/badge.svg)](https://github.com/project-ryoma/ryoma/actions/workflows/build.yml?query=workflow%3Abuild)
[![Python Version](https://img.shields.io/pypi/pyversions/ryoma.svg)](https://pypi.org/project/ryoma/)
[![Dependencies Status](https://img.shields.io/badge/dependencies-up%20to%20date-brightgreen.svg)](https://github.com/project-ryoma/ryoma/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Aapp%2Fdependabot)

[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Security: bandit](https://img.shields.io/badge/security-bandit-green.svg)](https://github.com/PyCQA/bandit)
[![Pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white)](https://github.com/project-ryoma/ryoma/blob/main/.pre-commit-config.yaml)
[![License](https://img.shields.io/github/license/project-ryoma/ryoma)](https://github.com/project-ryoma/ryoma/blob/main/LICENSE)
[![Coverage Report](assets/images/coverage.svg)](https://github.com/project-ryoma/ryoma/blob/main/assets/images/coverage.svg)


## Tech Stack

Our platform leverages a combination of cutting-edge technologies and frameworks:

- **[Langchain](https://www.langchain.com/)**: Facilitates the seamless integration of language models into application workflows, significantly enhancing AI interaction capabilities.
- **[Reflex](https://reflex.dev/)**: An open-source framework for quickly building beautiful, interactive web applications in pure Python
- **[Apache Arrow](https://arrow.apache.org/)**: A cross-language development platform for in-memory data that specifies a standardized language-independent columnar memory format for flat and hierarchical data, organized for efficient analytic operations on modern hardware like CPUs and GPUs.
- **[Jupyter Ai Magics](https://github.com/jupyterlab/jupyter-ai)**: A JupyterLab extension that provides a set of magics for working with AI models.
- **[Amundsen](https://www.amundsen.io/)**: A data discovery and metadata platform that helps users discover, understand, and trust the data they use.
- **[Ibis](https://ibis-project.org/)**: A Python data analysis framework that provides a pandas-like API for analytics on large datasets.
- **[Feast](https://feast.dev/)**: An operational feature store for managing and serving machine learning features to models in production.

## Installation
Simply install the package using pip:

```shell
pip install ryoma_ai
```
Or with extra dependencies:

```shell
pip install ryoma_ai[snowflake]
```

## Basic Example
Below is an example of using SqlAgent to connect to a postgres database and ask a question.
You can read more details in the [documentation](https://project-ryoma.github.io/ryoma/).

```python
from ryoma_ai.agent.sql import SqlAgent
from ryoma_ai.datasource.postgres import PostgresDataSource

# Connect to a postgres catalog
datasource = PostgresDataSource("postgresql://user:password@localhost:5432/dbname")

# Create a SQL agent
sql_agent = SqlAgent("gpt-3.5-turbo").add_datasource(datasource)

# ask question to the agent
sql_agent.stream("I want to get the top 5 customers which making the most purchases", display=True)
```

The Sql agent will try to run the tool as shown below:
```text
================================ Human Message =================================

I want to get the top 5 customers which making the most purchases
================================== Ai Message ==================================
Tool Calls:
  sql_database_query (call_mWCPB3GQGOTLYsvp21DGlpOb)
 Call ID: call_mWCPB3GQGOTLYsvp21DGlpOb
  Args:
    query: SELECT C.C_NAME, SUM(L.L_EXTENDEDPRICE) AS TOTAL_PURCHASES FROM CUSTOMER C JOIN ORDERS O ON C.C_CUSTKEY = O.O_CUSTKEY JOIN LINEITEM L ON O.O_ORDERKEY = L.L_ORDERKEY GROUP BY C.C_NAME ORDER BY TOTAL_PURCHASES DESC LIMIT 5
    result_format: pandas
```
Continue to run the tool with the following code:
```python
sql_agent.stream(tool_mode=ToolMode.ONCE)
```
Output will look like after running the tool:
```text
================================== Ai Message ==================================

The top 5 customers who have made the most purchases are as follows:

1. Customer#000143500 - Total Purchases: $7,154,828.98
2. Customer#000095257 - Total Purchases: $6,645,071.02
3. Customer#000087115 - Total Purchases: $6,528,332.52
4. Customer#000134380 - Total Purchases: $6,405,556.97
5. Customer#000103834 - Total Purchases: $6,397,480.12
```

## Use Ryoma Lab
Ryoma lab is an application that allows you to interact with your data and AI models in UI.
The ryoma lab is built with [Reflex](https://reflex.dev/).

1. Create Ryoma lab configuration file `rxconfig.py` in your project:
```python
import logging

import reflex as rx
from reflex.constants import LogLevel

config = rx.Config(
    app_name="ryoma_lab",
    loglevel=LogLevel.INFO,
)

# Setup basic configuration for logging
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
```

2. You can start the ryoma lab by running the following command:
```shell
ryoma_lab run
```
the ryoma lab will be available at `http://localhost:3000`.
![ui.png](assets%2Fui.png)

## Supported Models
Model provider are supported by jupyter ai magics. Ensure the corresponding environment variables are set before using the Ryoma agent.

| Provider            | Provider ID          | Environment variable(s)    | Python package(s)               |
|---------------------|----------------------|----------------------------|---------------------------------|
| AI21                | `ai21`               | `AI21_API_KEY`             | `ai21`                          |
| Anthropic           | `anthropic`          | `ANTHROPIC_API_KEY`        | `langchain-anthropic`           |
| Anthropic (playground)    | `anthropic-playground`     | `ANTHROPIC_API_KEY`        | `langchain-anthropic`           |
| Bedrock             | `bedrock`            | N/A                        | `boto3`                         |
| Bedrock (playground)      | `bedrock-playground`       | N/A                        | `boto3`                         |
| Cohere              | `cohere`             | `COHERE_API_KEY`           | `cohere`                        |
| ERNIE-Bot           | `qianfan`            | `QIANFAN_AK`, `QIANFAN_SK` | `qianfan`                       |
| Gemini              | `gemini`             | `GOOGLE_API_KEY`           | `langchain-google-genai`        |
| GPT4All             | `gpt4all`            | N/A                        | `gpt4all`                       |
| Hugging Face Hub    | `huggingface_hub`    | `HUGGINGFACEHUB_API_TOKEN` | `huggingface_hub`, `ipywidgets`, `pillow` |
| NVIDIA              | `nvidia-playground`        | `NVIDIA_API_KEY`           | `langchain_nvidia_ai_endpoints` |
| OpenAI              | `openai`             | `OPENAI_API_KEY`           | `langchain-openai`              |
| OpenAI (playground)       | `openai-playground`        | `OPENAI_API_KEY`           | `langchain-openai`              |
| SageMaker           | `sagemaker-endpoint` | N/A                        | `boto3`                         |

## Supported Data Sources
- [x] Snowflake
- [x] Sqlite
- [x] BigQuery
- [x] Postgres
- [x] MySQL
- [x] File (CSV, Excel, Parquet, etc.)
- [ ] Redshift
- [ ] DynamoDB

## Supported Engines
- [x] Apache Spark
- [x] Apache Flink
- [ ] Presto

## ðŸ›¡ License

[![License](https://img.shields.io/github/license/project-ryoma/ryoma)](https://github.com/project-ryoma/ryoma/blob/main/LICENSE)

This project is licensed under the terms of the `Apache Software License 2.0` license. See [LICENSE](https://github.com/ryoma/ryoma/blob/master/LICENSE) for more details.
