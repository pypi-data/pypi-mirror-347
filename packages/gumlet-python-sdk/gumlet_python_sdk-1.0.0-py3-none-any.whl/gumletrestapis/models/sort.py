# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Sort(object):

    """Implementation of the 'Sort' model.

    Sort the response data according to key or value

    Attributes:
        by (ByEnum): The model property of type ByEnum.
        order (OrderEnum): The model property of type OrderEnum.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "by": 'by',
        "order": 'order'
    }

    def __init__(self,
                 by='key',
                 order='asc'):
        """Constructor for the Sort class"""

        # Initialize members of the class
        self.by = by 
        self.order = order 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        by = dictionary.get("by") if dictionary.get("by") else 'key'
        order = dictionary.get("order") if dictionary.get("order") else 'asc'
        # Return an object of this model
        return cls(by,
                   order)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'by={self.by!r}, '
                f'order={self.order!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'by={self.by!s}, '
                f'order={self.order!s})')
