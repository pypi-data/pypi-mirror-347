# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from gumletrestapis.api_helper import APIHelper


class PreviewThumbnails(object):

    """Implementation of the 'PreviewThumbnails' model.

    Attributes:
        max_tiles (int): The model property of type int.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "max_tiles": 'max_tiles'
    }

    _optionals = [
        'max_tiles',
    ]

    def __init__(self,
                 max_tiles=0):
        """Constructor for the PreviewThumbnails class"""

        # Initialize members of the class
        self.max_tiles = max_tiles 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        max_tiles = dictionary.get("max_tiles") if dictionary.get("max_tiles") else 0
        # Return an object of this model
        return cls(max_tiles)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'max_tiles={(self.max_tiles if hasattr(self, "max_tiles") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'max_tiles={(self.max_tiles if hasattr(self, "max_tiles") else None)!s})')
