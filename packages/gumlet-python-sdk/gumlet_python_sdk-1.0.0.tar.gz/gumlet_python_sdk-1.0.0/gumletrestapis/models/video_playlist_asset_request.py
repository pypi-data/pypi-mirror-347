# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from gumletrestapis.models.asset_list import AssetList


class VideoPlaylistAssetRequest(object):

    """Implementation of the 'Video Playlist Asset Request' model.

    Attributes:
        asset_list (List[AssetList]): The model property of type
            List[AssetList].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "asset_list": 'asset_list'
    }

    def __init__(self,
                 asset_list=None):
        """Constructor for the VideoPlaylistAssetRequest class"""

        # Initialize members of the class
        self.asset_list = asset_list 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        asset_list = None
        if dictionary.get('asset_list') is not None:
            asset_list = [AssetList.from_dictionary(x) for x in dictionary.get('asset_list')]
        # Return an object of this model
        return cls(asset_list)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'asset_list={self.asset_list!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'asset_list={self.asset_list!s})')
