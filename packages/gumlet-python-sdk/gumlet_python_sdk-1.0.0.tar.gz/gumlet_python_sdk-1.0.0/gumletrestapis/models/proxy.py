# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Proxy(object):

    """Implementation of the 'Proxy' model.

    This is a required field if collection type is proxy.

    Attributes:
        whitelisted_domains (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "whitelisted_domains": 'whitelisted_domains'
    }

    def __init__(self,
                 whitelisted_domains=None):
        """Constructor for the Proxy class"""

        # Initialize members of the class
        self.whitelisted_domains = whitelisted_domains 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        whitelisted_domains = dictionary.get("whitelisted_domains") if dictionary.get("whitelisted_domains") else None
        # Return an object of this model
        return cls(whitelisted_domains)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'whitelisted_domains={self.whitelisted_domains!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'whitelisted_domains={self.whitelisted_domains!s})')
