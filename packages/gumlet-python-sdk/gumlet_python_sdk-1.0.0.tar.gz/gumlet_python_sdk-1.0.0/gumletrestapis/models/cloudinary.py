# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Cloudinary(object):

    """Implementation of the 'Cloudinary' model.

    This is a required field if collection type is cloudinary.

    Attributes:
        host_name (str): The model property of type str.
        cloud_name (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "host_name": 'host_name',
        "cloud_name": 'cloud_name'
    }

    def __init__(self,
                 host_name=None,
                 cloud_name=None):
        """Constructor for the Cloudinary class"""

        # Initialize members of the class
        self.host_name = host_name 
        self.cloud_name = cloud_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        host_name = dictionary.get("host_name") if dictionary.get("host_name") else None
        cloud_name = dictionary.get("cloud_name") if dictionary.get("cloud_name") else None
        # Return an object of this model
        return cls(host_name,
                   cloud_name)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'host_name={self.host_name!r}, '
                f'cloud_name={self.cloud_name!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'host_name={self.host_name!s}, '
                f'cloud_name={self.cloud_name!s})')
