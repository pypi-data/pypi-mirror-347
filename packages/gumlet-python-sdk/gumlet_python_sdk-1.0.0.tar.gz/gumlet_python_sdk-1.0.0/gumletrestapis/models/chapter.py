# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from gumletrestapis.api_helper import APIHelper


class Chapter(object):

    """Implementation of the 'Chapter' model.

    Attributes:
        end_time (int): The model property of type int.
        label (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "end_time": 'endTime',
        "label": 'label'
    }

    _optionals = [
        'end_time',
        'label',
    ]

    def __init__(self,
                 end_time=0,
                 label=APIHelper.SKIP):
        """Constructor for the Chapter class"""

        # Initialize members of the class
        self.end_time = end_time 
        if label is not APIHelper.SKIP:
            self.label = label 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        end_time = dictionary.get("endTime") if dictionary.get("endTime") else 0
        label = dictionary.get("label") if dictionary.get("label") else APIHelper.SKIP
        # Return an object of this model
        return cls(end_time,
                   label)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'end_time={(self.end_time if hasattr(self, "end_time") else None)!r}, '
                f'label={(self.label if hasattr(self, "label") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'end_time={(self.end_time if hasattr(self, "end_time") else None)!s}, '
                f'label={(self.label if hasattr(self, "label") else None)!s})')
