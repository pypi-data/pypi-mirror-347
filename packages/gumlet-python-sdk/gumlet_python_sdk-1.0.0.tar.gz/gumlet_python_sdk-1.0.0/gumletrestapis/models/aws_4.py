# -*- coding: utf-8 -*-

"""
gumletrestapis

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from gumletrestapis.api_helper import APIHelper


class Aws4(object):

    """Implementation of the 'Aws4' model.

    This is a required field if source type is aws.

    Attributes:
        bucket_name (str): The model property of type str.
        bucket_region (str): The model property of type str.
        access_key (str): The model property of type str.
        secret (str): The model property of type str.
        base_path (str): The model property of type str.
        endpoint (str): The model property of type str.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "bucket_name": 'bucket_name',
        "bucket_region": 'bucket_region',
        "access_key": 'access_key',
        "secret": 'secret',
        "base_path": 'base_path',
        "endpoint": 'endpoint'
    }

    _optionals = [
        'base_path',
        'endpoint',
    ]

    def __init__(self,
                 bucket_name=None,
                 bucket_region=None,
                 access_key=None,
                 secret=None,
                 base_path=APIHelper.SKIP,
                 endpoint=APIHelper.SKIP):
        """Constructor for the Aws4 class"""

        # Initialize members of the class
        self.bucket_name = bucket_name 
        self.bucket_region = bucket_region 
        self.access_key = access_key 
        self.secret = secret 
        if base_path is not APIHelper.SKIP:
            self.base_path = base_path 
        if endpoint is not APIHelper.SKIP:
            self.endpoint = endpoint 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        bucket_name = dictionary.get("bucket_name") if dictionary.get("bucket_name") else None
        bucket_region = dictionary.get("bucket_region") if dictionary.get("bucket_region") else None
        access_key = dictionary.get("access_key") if dictionary.get("access_key") else None
        secret = dictionary.get("secret") if dictionary.get("secret") else None
        base_path = dictionary.get("base_path") if dictionary.get("base_path") else APIHelper.SKIP
        endpoint = dictionary.get("endpoint") if dictionary.get("endpoint") else APIHelper.SKIP
        # Return an object of this model
        return cls(bucket_name,
                   bucket_region,
                   access_key,
                   secret,
                   base_path,
                   endpoint)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'bucket_name={self.bucket_name!r}, '
                f'bucket_region={self.bucket_region!r}, '
                f'access_key={self.access_key!r}, '
                f'secret={self.secret!r}, '
                f'base_path={(self.base_path if hasattr(self, "base_path") else None)!r}, '
                f'endpoint={(self.endpoint if hasattr(self, "endpoint") else None)!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'bucket_name={self.bucket_name!s}, '
                f'bucket_region={self.bucket_region!s}, '
                f'access_key={self.access_key!s}, '
                f'secret={self.secret!s}, '
                f'base_path={(self.base_path if hasattr(self, "base_path") else None)!s}, '
                f'endpoint={(self.endpoint if hasattr(self, "endpoint") else None)!s})')
