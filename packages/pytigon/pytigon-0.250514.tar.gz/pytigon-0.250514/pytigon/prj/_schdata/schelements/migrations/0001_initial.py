# Generated by Django 5.1.3 on 2025-05-14 16:54

import datetime
import django.db.models.deletion
import django.utils.timezone
import pytigon_lib.schdjangoext.fields
import pytigon_lib.schtools.schjson
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="DocReg",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "app",
                    models.CharField(
                        db_index=True, max_length=16, verbose_name="Application"
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=32, verbose_name="Name"),
                ),
                (
                    "group",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=64,
                        null=True,
                        verbose_name="Group",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=64, verbose_name="Description"),
                ),
                (
                    "head_form",
                    models.TextField(
                        blank=True, editable=False, null=True, verbose_name="Head form"
                    ),
                ),
                (
                    "head_template",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Head template",
                    ),
                ),
                (
                    "item_form",
                    models.TextField(
                        blank=True, editable=False, null=True, verbose_name="Item form"
                    ),
                ),
                (
                    "item_template",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Item template",
                    ),
                ),
                (
                    "save_head_fun",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Save head function",
                    ),
                ),
                (
                    "save_item_fun",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Save item function",
                    ),
                ),
                (
                    "access_fun",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Access function",
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time of the last update"
                    ),
                ),
            ],
            options={
                "verbose_name": "Document register",
                "verbose_name_plural": "Document registers",
                "ordering": ["id"],
                "permissions": [("admin_docreg", "Can administer document registers")],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jsondata",
                    models.JSONField(
                        blank=True,
                        decoder=pytigon_lib.schtools.schjson.ComplexDecoder,
                        editable=False,
                        encoder=pytigon_lib.schtools.schjson.ComplexEncoder,
                        null=True,
                        verbose_name="Json data",
                    ),
                ),
                (
                    "type1",
                    models.CharField(
                        blank=True,
                        choices=[("S", "Synthetic"), ("A", "Analytical")],
                        editable=False,
                        max_length=1,
                        null=True,
                        verbose_name="Type 1",
                    ),
                ),
                (
                    "type2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("B", "Balance"),
                            ("O", "Off-balance"),
                            ("N", "Non-financial"),
                            ("V", "Inventory"),
                            ("I", "Inventory income"),
                            ("D", "Disposal"),
                        ],
                        db_index=True,
                        max_length=1,
                        null=True,
                        verbose_name="Type 2",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=32, verbose_name="Name"),
                ),
                (
                    "description",
                    models.CharField(max_length=256, verbose_name="Description"),
                ),
                (
                    "correctness_rule",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Correctness rule",
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        db_index=True, default=True, null=True, verbose_name="Enabled"
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.account",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Account",
                "ordering": ["name"],
                "permissions": [("admin_account", "Can administer accounts")],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="AccountState",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=10,
                        null=True,
                        verbose_name="Period",
                    ),
                ),
                (
                    "subcode",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=16,
                        null=True,
                        verbose_name="Subcode",
                    ),
                ),
                (
                    "debit",
                    models.DecimalField(
                        decimal_places=2, max_digits=16, verbose_name="Debit"
                    ),
                ),
                (
                    "credit",
                    models.DecimalField(
                        decimal_places=2, max_digits=16, verbose_name="Credit"
                    ),
                ),
                (
                    "zero_balance",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=True,
                        null=True,
                        verbose_name="Balance is zero",
                    ),
                ),
                (
                    "aggregate",
                    models.BooleanField(
                        default=False, null=True, verbose_name="Aggregate"
                    ),
                ),
                (
                    "date_c",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Creation date"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.account",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "State of account",
                "verbose_name_plural": "States of account",
                "ordering": [
                    "parent__name",
                    "subcode",
                    "period",
                    "target__name",
                    "element__name",
                ],
                "permissions": [
                    ("admin_accountstatus", "Can administer account statuses")
                ],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="DocHead",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jsondata",
                    models.JSONField(
                        blank=True,
                        decoder=pytigon_lib.schtools.schjson.ComplexDecoder,
                        editable=False,
                        encoder=pytigon_lib.schtools.schjson.ComplexEncoder,
                        null=True,
                        verbose_name="Json data",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=64,
                        null=True,
                        verbose_name="Document number",
                    ),
                ),
                (
                    "date_c",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Creation date",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True,
                        db_index=True,
                        default=datetime.date.today,
                        null=True,
                        verbose_name="Date",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "comments",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="Comments"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="draft",
                        editable=False,
                        max_length=16,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=255,
                        null=True,
                        verbose_name="Operator",
                    ),
                ),
                (
                    "param1",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=16,
                        null=True,
                        verbose_name="Parameter 1",
                    ),
                ),
                (
                    "param2",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=16,
                        null=True,
                        verbose_name="Parameter 2",
                    ),
                ),
                (
                    "param3",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=16,
                        null=True,
                        verbose_name="Parameter 3",
                    ),
                ),
                (
                    "corrected",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="Corrected"
                    ),
                ),
                (
                    "corrected_dochead",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="correction",
                        to="schelements.dochead",
                        verbose_name="Corrected dochead",
                    ),
                ),
                (
                    "parents",
                    models.ManyToManyField(
                        db_index=True,
                        editable=False,
                        to="schelements.dochead",
                        verbose_name="Parents",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document header",
                "verbose_name_plural": "Document headers",
                "ordering": ["id"],
                "permissions": [("admin_dochead", "Can administer document headers")],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="DocHeadStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jsondata",
                    models.JSONField(
                        blank=True,
                        decoder=pytigon_lib.schtools.schjson.ComplexDecoder,
                        editable=False,
                        encoder=pytigon_lib.schtools.schjson.ComplexEncoder,
                        null=True,
                        verbose_name="Json data",
                    ),
                ),
                ("date", models.DateTimeField(db_index=True, verbose_name="Date")),
                ("name", models.CharField(max_length=16, verbose_name="Name")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=64,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Operator"
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.dochead",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document head status",
                "verbose_name_plural": "Documents head status",
                "ordering": ["id"],
                "permissions": [
                    ("admin_docheadstatus", "Can administer document header statuses")
                ],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="DocItem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jsondata",
                    models.JSONField(
                        blank=True,
                        decoder=pytigon_lib.schtools.schjson.ComplexDecoder,
                        editable=False,
                        encoder=pytigon_lib.schtools.schjson.ComplexEncoder,
                        null=True,
                        verbose_name="Json data",
                    ),
                ),
                (
                    "order",
                    models.IntegerField(
                        default=1, editable=False, verbose_name="Order"
                    ),
                ),
                (
                    "qty",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=16,
                        null=True,
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "level",
                    models.IntegerField(
                        default=0, editable=False, verbose_name="Level"
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="Active item"
                    ),
                ),
                (
                    "param1",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        max_length=16,
                        null=True,
                        verbose_name="Parameter 1",
                    ),
                ),
                (
                    "param2",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        max_length=16,
                        null=True,
                        verbose_name="Parameter 2",
                    ),
                ),
                (
                    "param3",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        max_length=16,
                        null=True,
                        verbose_name="Parameter 3",
                    ),
                ),
                (
                    "corrected",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        editable=False,
                        verbose_name="Corrected",
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.dochead",
                        verbose_name="Parent",
                    ),
                ),
                (
                    "parent_item",
                    pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.docitem",
                        verbose_name="Parent item",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document item",
                "verbose_name_plural": "Document items",
                "ordering": ["id"],
                "permissions": [("admin_docitem", "Can administer document items")],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="AccountOperation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(default=datetime.date.today, verbose_name="Date"),
                ),
                (
                    "date_c",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Creation date",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "payment",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=64,
                        null=True,
                        verbose_name="Name of payment",
                    ),
                ),
                ("sign", models.IntegerField(verbose_name="Sign - debit or credit")),
                (
                    "qty",
                    models.DecimalField(
                        decimal_places=2, max_digits=16, verbose_name="Quantity"
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        editable=False,
                        null=True,
                        verbose_name="Enabled",
                    ),
                ),
                (
                    "account_state",
                    pytigon_lib.schdjangoext.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="accountoper_set",
                        to="schelements.accountstate",
                        verbose_name="Account state",
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.docitem",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account operation",
                "verbose_name_plural": "Account operations",
                "ordering": ["id"],
                "permissions": [
                    ("admin_accountoperation", "Can administer account operations")
                ],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="DocRegStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.IntegerField(verbose_name="Order")),
                ("name", models.CharField(max_length=16, verbose_name="Name")),
                (
                    "description",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Description"
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="Icon"
                    ),
                ),
                (
                    "accept_proc",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Accept status procedure",
                    ),
                ),
                (
                    "undo_proc",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Undo status procedure",
                    ),
                ),
                (
                    "can_set_proc",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Check if status can be set",
                    ),
                ),
                (
                    "can_undo_proc",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Check if status can be removed",
                    ),
                ),
                (
                    "accept_form",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Form for accept",
                    ),
                ),
                (
                    "undo_form",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Form for undo",
                    ),
                ),
                (
                    "for_accept_template",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Template for accept",
                    ),
                ),
                (
                    "for_undo_template",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Template for undo",
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.docreg",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Document status",
                "verbose_name_plural": "Document status",
                "ordering": ["id"],
                "permissions": [
                    ("admin_docregstatus", "Can administer document register statuses")
                ],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.CreateModel(
            name="DocType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=16, verbose_name="Name"),
                ),
                (
                    "description",
                    models.CharField(max_length=64, verbose_name="Description"),
                ),
                (
                    "correction",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        null=True,
                        verbose_name="Correction",
                    ),
                ),
                (
                    "head_form",
                    models.TextField(
                        blank=True, editable=False, null=True, verbose_name="Head form"
                    ),
                ),
                (
                    "head_template",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Head template",
                    ),
                ),
                (
                    "item_form",
                    models.TextField(
                        blank=True, editable=False, null=True, verbose_name="Item form"
                    ),
                ),
                (
                    "item_template",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Item template",
                    ),
                ),
                (
                    "save_head_fun",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Save head function",
                    ),
                ),
                (
                    "save_item_fun",
                    models.TextField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Save item function",
                    ),
                ),
                (
                    "doctype_status",
                    models.CharField(
                        blank=True,
                        choices=[("0", "Disabled"), ("1", "Activ")],
                        db_index=True,
                        max_length=1,
                        null=True,
                        verbose_name="Status of document type",
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Time of the last update"
                    ),
                ),
                (
                    "correction_name",
                    models.CharField(
                        blank=True,
                        max_length=16,
                        null=True,
                        verbose_name="Correction name",
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.docreg",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Type of document",
                "verbose_name_plural": "Types of documents",
                "ordering": ["id"],
                "permissions": [("admin_doctype", "Can administer document types")],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.AddField(
            model_name="dochead",
            name="doc_type_parent",
            field=pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                to="schelements.doctype",
                verbose_name="Document type parent",
            ),
        ),
        migrations.CreateModel(
            name="Element",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "jsondata",
                    models.JSONField(
                        blank=True,
                        decoder=pytigon_lib.schtools.schjson.ComplexDecoder,
                        editable=False,
                        encoder=pytigon_lib.schtools.schjson.ComplexEncoder,
                        null=True,
                        verbose_name="Json data",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("O-GRP", "Owner/Group"),
                            ("O-COM", "Owner/Company"),
                            ("O-DIV", "Owner/Division"),
                            ("O-DEP", "Owner/Department"),
                            ("O-POS", "Owner/Position"),
                            ("O-EMP", "Owner/Employee"),
                            ("O-LOC", "Owner/Location"),
                            ("O-PER", "Owner/Person"),
                            ("O-CUS", "Owner/Customer"),
                            ("O-SUP", "Owner/Supplier"),
                            ("O-DEV", "Owner/Device"),
                            ("O-OTH", "Owner/Other"),
                            ("O-ALI", "Owner/Alias"),
                            ("I-GRP", "Item/Group"),
                            ("I-SRV", "Item/Service"),
                            ("I-INT", "Item/Intellectual value"),
                            ("I-CUR", "Item/Currency"),
                            ("I-MAT", "Item/Material"),
                            ("I-RAW", "Item/Raw material"),
                            ("I-PRD", "Item/Product"),
                            ("I-IPR", "Item/Intermediate product"),
                            ("I-MER", "Item/Merchandise"),
                            ("I-DEV", "Item/Device"),
                            ("I-PMA", "Item/Production machine"),
                            ("I-VEH", "Item/Vehicle"),
                            ("I-OTH", "Item/Other"),
                            ("I-ALI", "Item/Alias"),
                            ("C-SYS", "Config/System"),
                            ("C-UNT", "Config/Unit of measure"),
                            ("C-DIC", "Config/Dictionary"),
                            ("C-OTH", "Config/Other"),
                            ("C-ALI", "Config/Alias"),
                            ("C-FLD", "Config/Folder"),
                            ("C-GRP", "Config/Group"),
                        ],
                        max_length=8,
                        verbose_name="Element type",
                    ),
                ),
                (
                    "subtype",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=16,
                        null=True,
                        verbose_name="Element subtype",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=16,
                        null=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=1024,
                        null=True,
                        verbose_name="Path",
                    ),
                ),
                ("name", models.CharField(max_length=64, verbose_name="Name")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "can_have_children",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        editable=False,
                        null=True,
                        verbose_name="Can have children",
                    ),
                ),
                (
                    "has_children",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        editable=False,
                        null=True,
                        verbose_name="Element has children",
                    ),
                ),
                (
                    "can_add_permission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_set_perm_add",
                        to="auth.permission",
                    ),
                ),
                (
                    "can_change_permission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_set_perm_change",
                        to="auth.permission",
                    ),
                ),
                (
                    "can_delete_permission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_set_perm_delete",
                        to="auth.permission",
                    ),
                ),
                (
                    "can_view_permission",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permission_set_perm_view",
                        to="auth.permission",
                    ),
                ),
                (
                    "first_ancestor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="first_ancestors",
                        to="schelements.element",
                        verbose_name="First ancestor",
                    ),
                ),
                (
                    "grand_parent1",
                    pytigon_lib.schdjangoext.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grandparent1",
                        to="schelements.element",
                        verbose_name="Grand parent 1",
                    ),
                ),
                (
                    "grand_parent2",
                    pytigon_lib.schdjangoext.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grandparent2",
                        to="schelements.element",
                        verbose_name="Grand parent 2",
                    ),
                ),
                (
                    "grand_parent3",
                    pytigon_lib.schdjangoext.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grandparent3",
                        to="schelements.element",
                        verbose_name="Grand parent 3",
                    ),
                ),
                (
                    "grand_parent4",
                    pytigon_lib.schdjangoext.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grandparent4",
                        to="schelements.element",
                        verbose_name="Grand parent 4",
                    ),
                ),
                (
                    "parent",
                    pytigon_lib.schdjangoext.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="schelements.element",
                        verbose_name="Parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Element",
                "verbose_name_plural": "Elements",
                "ordering": ["id"],
                "permissions": [("admin_element", "Can administer elements")],
                "default_permissions": (
                    "add",
                    "change",
                    "delete",
                    "view",
                    "list",
                    "administer",
                ),
            },
        ),
        migrations.AddField(
            model_name="docitem",
            name="item",
            field=pytigon_lib.schdjangoext.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="schelements.element",
                verbose_name="Item",
            ),
        ),
        migrations.AddField(
            model_name="docitem",
            name="owner",
            field=pytigon_lib.schdjangoext.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owners",
                to="schelements.element",
                verbose_name="Owner",
            ),
        ),
        migrations.AddField(
            model_name="dochead",
            name="parent_element",
            field=pytigon_lib.schdjangoext.fields.HiddenForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="schelements.element",
                verbose_name="Parent element",
            ),
        ),
        migrations.AddField(
            model_name="accountstate",
            name="classifier1value",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="account_c1_set",
                to="schelements.element",
                verbose_name="Classifier 1 value",
            ),
        ),
        migrations.AddField(
            model_name="accountstate",
            name="classifier2value",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="account_c2_set",
                to="schelements.element",
                verbose_name="Classifier 2 value",
            ),
        ),
        migrations.AddField(
            model_name="accountstate",
            name="classifier3value",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="account_c3_set",
                to="schelements.element",
                verbose_name="Classifier 3 value",
            ),
        ),
        migrations.AddField(
            model_name="accountstate",
            name="element",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="schelements.element",
                verbose_name="Element",
            ),
        ),
        migrations.AddField(
            model_name="accountstate",
            name="target",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="state_targets",
                to="schelements.element",
                verbose_name="Target",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="root_classifier1",
            field=pytigon_lib.schdjangoext.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="baseaccount_rc1_set",
                to="schelements.element",
                verbose_name="Root classifier 1",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="root_classifier2",
            field=pytigon_lib.schdjangoext.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="baseaccount_rc2_set",
                to="schelements.element",
                verbose_name="Root classifier 2",
            ),
        ),
        migrations.AddField(
            model_name="account",
            name="root_classifier3",
            field=pytigon_lib.schdjangoext.fields.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="baseaccount_rc3_set",
                to="schelements.element",
                verbose_name="Root classifier 3",
            ),
        ),
    ]
