[project]
name = "metapensiero.sqlalchemy.proxy"
description = "Expose SQLAlchemy's queries and their metadata to a webservice"
version = "6.0"
authors = [
    { name = "Lele Gaifax", email = "lele@metapensiero.it" },
]
readme = "README.rst"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Database",
]
requires-python = ">=3.9"
dependencies = [
    "sqlalchemy",
    "typing-extensions",
]

[project.license]
text = "GPL-3.0-or-later"

[project.urls]
Changelog = "https://gitlab.com/metapensiero/metapensiero.sqlalchemy.proxy/-/blob/master/CHANGES.rst"
Documentation = "https://metapensierosqlalchemyproxy.readthedocs.io/en/latest/"
Source = "https://gitlab.com/metapensiero/metapensiero.sqlalchemy.proxy"

[project.optional-dependencies]
dev = [
    "build",
    "bump-my-version",
    "tomli",
    "twine",
]
docs = [
    "tomli",
]

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm.build]
package-dir = "src"
includes = [
    "src/metapensiero",
]
source-includes = [
    "flake.*",
    "*.rst",
    "Justfile",
    "doc/",
    "tests/",
]
excludes = [
    "doc/_build",
]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.pytest.ini_options]
addopts = "--cov=metapensiero.sqlalchemy.proxy --cov-report term-missing"
testpaths = "./tests"
filterwarnings = [
    "ignore:.*sqlite\\+pysqlite does \\*not\\* support Decimal objects natively.*:Warning",
]

[tool.basedpyright]
include = [
    "src",
]
extraPaths = [
    "src",
]
reportAny = false
reportImplicitOverride = false
reportImplicitStringConcatenation = false
reportMissingParameterType = false
reportMissingSuperCall = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportUninitializedInstanceVariable = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryComparison = false
reportUntypedFunctionDecorator = false
reportUnusedCallResult = false

[tool.bumpversion]
current_version = "6.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)(?:\\.(?P<pre_label>[a-zA-Z-]+)(?P<pre_number>\\d*))?"
serialize = [
    "{major}.{minor}.{pre_label}{pre_number}",
    "{major}.{minor}",
]
allow_dirty = false
commit = false
ignore_missing_files = false
ignore_missing_version = false
regex = false
sign_tags = false
tag = false

[tool.bumpversion.parts.pre_label]
values = [
    "dev",
    "final",
]
optional_value = "final"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
