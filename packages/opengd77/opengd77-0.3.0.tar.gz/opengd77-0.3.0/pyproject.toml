[project]
name = "opengd77"
version = "0.3.0"
description = "Python utility to work with the OpenGD77 CPS."
authors = [
  {name = "Micael Jarniac", email = "micael@jarniac.dev"},
]
license = {text = "MIT"}
readme = "docs/README.md"
classifiers = [
  # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers
  "Development Status :: 1 - Planning",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Typing :: Typed",
  # https://github.com/astral-sh/uv/issues/8716
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
]

requires-python = ">=3.10"  # py_ver
dependencies = [
    "attrs>=25.3.0",
    "loguru>=0.7.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
homepage = "https://github.com/MicaelJarniac/opengd77"
source = "https://github.com/MicaelJarniac/opengd77"
download = "https://pypi.org/project/opengd77/#files"
changelog = "https://github.com/MicaelJarniac/opengd77/blob/main/docs/CHANGELOG.md"
documentation = "https://opengd77.readthedocs.io"
issues = "https://github.com/MicaelJarniac/opengd77/issues"

[dependency-groups]
tests = [
    "coverage>=7.6.11",
    "hypothesis>=6.125.3",
    "inline-snapshot>=0.20.2",
    "pytest>=8.3.4",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=6.0.0",
]
benchmarking = [
    "asv>=0.6.4",
    "virtualenv>=20.29.1",
]
docs = [
    "furo>=2024.8.6",
    "myst-parser>=3.0.1",
    "sphinx>=7.4.7",
    "sphinxcontrib-spelling>=8.0.0",
]
typing = [
    {include-group = "tests"},
    {include-group = "automation"},
    "mypy>=1.15.0",
    # Typing stubs go here
]
linting = [
    "ruff>=0.9.6",
]
pre-commit = [
    "pre-commit>=4.1.0",
]
automation = [
    "nox[uv]>=2025.2.9",
]
dev = [
    {include-group = "tests"},
    {include-group = "benchmarking"},
    {include-group = "docs"},
    {include-group = "typing"},
    {include-group = "linting"},
    {include-group = "pre-commit"},
    {include-group = "automation"},
    "ipython>=8.18.1",
    "python-semantic-release>=9.19.0",
    "ipykernel>=6.29.5",
    "rich>=13.9.4",
]

[tool.ruff]
# https://docs.astral.sh/ruff/rules/
line-length = 88  # Default
force-exclude = true
src = ["src"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D203",
  "D213",
  "COM812",
  "ISC001",
]
unfixable = ["ERA001"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
files = ["src", "docs", "tests", "noxfile.py"]
exclude = [".venv"]
enable_error_code = [
  "ignore-without-code"
]
strict = true
warn_unused_ignores = false  # true
show_column_numbers = true
# show_error_context = true
# pretty = true

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = """
  pip install uv
  uv lock
  git add uv.lock
  uv build
"""

[tool.semantic_release.changelog.default_templates]
changelog_file = "docs/CHANGELOG.md"

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.rc]
match = "rc"
prerelease = true
prerelease_token = "rc"

[tool.coverage.run]
source = ["src"]
command_line = "-m pytest"

[tool.pytest.ini_options]
# addopts = "--cov"

[tool.inline-snapshot]
format-command = "ruff format --stdin-filename {filename}"

[tool.cruft]
skip = [
  "src",
  "tests",
  "benchmarks",
  ".asv",
  "uv.lock",
]
