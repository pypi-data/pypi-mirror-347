Metadata-Version: 2.4
Name: kececifractals
Version: 0.1.0
Summary: eçeci Fractals: Keçeci-style circle fractal.
Home-page: https://github.com/WhiteSymmetry/kececifractals
Author: Mehmet Keçeci
Author-email: bilginomi@yaani.com
Maintainer: Mehmet Keçeci
Maintainer-email: bilginomi@yaani.com
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: matplotlib
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: maintainer
Dynamic: maintainer-email
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# KeÃ§eci Fractals: KeÃ§eci Fraktals

KeÃ§eci Circle Fractal: KeÃ§eci-style circle fractal.

[![PyPI version](https://badge.fury.io/py/kececifractals.svg)](https://badge.fury.io/py/kececifractals)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo..svg)](https://doi.org/10.5281/zenodo.)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo..svg)](https://doi.org/10.5281/zenodo.)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo..svg)](https://doi.org/10.5281/zenodo.)

[![Anaconda-Server Badge](https://anaconda.org/bilgi/kececifractals/badges/version.svg)](https://anaconda.org/bilgi/kececifractals)
[![Anaconda-Server Badge](https://anaconda.org/bilgi/kececifractals/badges/latest_release_date.svg)](https://anaconda.org/bilgi/kececifractals)
[![Anaconda-Server Badge](https://anaconda.org/bilgi/kececifractals/badges/platforms.svg)](https://anaconda.org/bilgi/kececifractals)
[![Anaconda-Server Badge](https://anaconda.org/bilgi/kececifractals/badges/license.svg)](https://anaconda.org/bilgi/kececifractals)

[![Open Source](https://img.shields.io/badge/Open%20Source-Open%20Source-brightgreen.svg)](https://opensource.org/)
[![Documentation Status](https://app.readthedocs.org/projects/kececifractals/badge/?0.1.0=main)](https://kececifractals.readthedocs.io/en/latest)

[![OpenSSF Best Practices](https://www.bestpractices.dev/projects//badge)](https://www.bestpractices.dev/projects/)

---

## Description / AÃ§Ä±klama

**KeÃ§eci Circle Fractal: KeÃ§eci-style circle fractal.**: 

Many systems encountered in nature and engineering exhibit complex and hierarchical geometric structures. Fractal geometry provides a powerful tool for understanding and modeling these structures. However, existing deterministic circle packing fractals, such as the Apollonian gasket, often adhere to fixed geometric rules and may fall short in accurately reflecting the diversity of observed structures. Addressing the need for greater flexibility in modeling physical and mathematical systems, this paper introduces the KeÃ§eci Circle Fractal (KCF), a novel deterministic fractal. The KCF is generated through a recursive algorithm where a parent circle contains child circles scaled down by a specific `scale_factor` and whose number (`initial_children`, `recursive_children`) is controllable. These parameters allow for the tuning of the fractal's morphological characteristics (e.g., density, void distribution, boundary complexity) over a wide range. The primary advantage of the KCF lies in its tunable geometry, enabling more realistic modeling of diverse systems with varying structural parameters, such as porous media (for fluid flow simulations), granular material packings, foam structures, or potentially biological aggregations. Furthermore, the controllable structure of the KCF provides an ideal testbed for investigating structure-dependent physical phenomena like wave scattering, heat transfer, or electrical conductivity. Mathematically, it offers opportunities to study variations in fractal dimension and packing efficiency for different parameter values. In conclusion, the KeÃ§eci Circle Fractal emerges as a valuable and versatile tool for generating geometries with controlled complexity and investigating structure-property relationships across multidisciplinary fields.

DoÄŸada ve mÃ¼hendislik uygulamalarÄ±nda karÅŸÄ±laÅŸÄ±lan birÃ§ok sistem, karmaÅŸÄ±k ve hiyerarÅŸik geometrik yapÄ±lar sergiler. Bu yapÄ±larÄ± anlamak ve modellemek iÃ§in fraktal geometri gÃ¼Ã§lÃ¼ bir araÃ§ sunar. Ancak, Apollon contasÄ± gibi mevcut deterministik dairesel paketleme fraktallarÄ± genellikle sabit geometrik kurallara baÄŸlÄ±dÄ±r ve gÃ¶zlemlenen yapÄ±larÄ±n Ã§eÅŸitliliÄŸini tam olarak yansÄ±tmakta yetersiz kalabilir. Bu Ã§alÄ±ÅŸmada, fiziksel ve matematiksel sistemlerin modellenmesinde daha fazla esneklik saÄŸlama ihtiyacÄ±ndan doÄŸan yeni bir deterministik fraktal olan KeÃ§eci Dairesel FraktalÄ± (KDF) tanÄ±tÄ±lmaktadÄ±r. KDF, Ã¶zyinelemeli bir algoritma ile Ã¼retilir; burada bir ana daire, belirli bir Ã¶lÃ§ek faktÃ¶rÃ¼ (`scale_factor`) ile kÃ¼Ã§Ã¼ltÃ¼lmÃ¼ÅŸ ve sayÄ±sÄ± (`initial_children`, `recursive_children`) kontrol edilebilen Ã§ocuk daireleri iÃ§erir. Bu parametreler, fraktalÄ±n morfolojik Ã¶zelliklerinin (yoÄŸunluk, boÅŸluk daÄŸÄ±lÄ±mÄ±, sÄ±nÄ±r karmaÅŸÄ±klÄ±ÄŸÄ± vb.) geniÅŸ bir aralÄ±kta ayarlanmasÄ±na olanak tanÄ±r. KDF'nin temel avantajÄ±, bu ayarlanabilir geometrisi sayesinde, gÃ¶zenekli ortamlar (akÄ±ÅŸkan simÃ¼lasyonlarÄ± iÃ§in), granÃ¼ler malzeme paketlemeleri, kÃ¶pÃ¼k yapÄ±larÄ± veya potansiyel olarak biyolojik kÃ¼meleÅŸmeler gibi yapÄ±sal parametreleri farklÄ±lÄ±k gÃ¶steren Ã§eÅŸitli sistemleri daha gerÃ§ekÃ§i bir ÅŸekilde modelleyebilmesidir. AyrÄ±ca, KDF'nin kontrol edilebilir yapÄ±sÄ±, dalga saÃ§Ä±lmasÄ±, Ä±sÄ± transferi veya elektriksel iletkenlik gibi yapÄ±ya baÄŸlÄ± fiziksel olaylarÄ±n incelenmesi iÃ§in ideal bir test ortamÄ± sunar. Matematiksel olarak, farklÄ± parametre deÄŸerleri iÃ§in fraktal boyut deÄŸiÅŸimlerini ve paketleme verimliliÄŸini inceleme imkanÄ± sunar. SonuÃ§ olarak, KeÃ§eci Dairesel FraktalÄ±, kontrollÃ¼ karmaÅŸÄ±klÄ±ÄŸa sahip geometriler Ã¼retmek ve Ã§ok disiplinli alanlarda yapÄ±-Ã¶zellik iliÅŸkilerini araÅŸtÄ±rmak iÃ§in deÄŸerli ve Ã§ok yÃ¶nlÃ¼ bir araÃ§ olarak Ã¶ne Ã§Ä±kmaktadÄ±r.

---

## Installation / Kurulum

```bash
conda install bilgi::kececifractals -y

pip install kececifractals
```
https://anaconda.org/bilgi/kececifractals

https://pypi.org/project/kececifractals/

https://github.com/WhiteSymmetry/kececifractals

https://zenodo.org/records/

https://zenodo.org/records/

---

## Usage / KullanÄ±m

### Example

```python
import kececifractals as kf
import importlib # Useful if you modify the .py file and want to reload it

# --- Example 1: Show the fractal inline ---
print("Generating fractal to show inline...")
kf.kececifractals_circle(
    initial_children=5,
    recursive_children=5,
    text="KeÃ§eci Circle Fractal: KeÃ§eci Dairesel FraktalÄ±",
    max_level=4,
    scale_factor=0.5,
    min_size_factor=0.001,
    output_mode='show'  # This will display the plot below the cell
)
print("Inline display finished.")

# --- Example 2: Save the fractal as an SVG file ---
print("\nGenerating fractal to save as SVG...")
kf.kececifractals_circle(
    initial_children=7,
    recursive_children=3,
    text="KeÃ§eci Circle Fractal: KeÃ§eci Dairesel FraktalÄ±",
    max_level=5,
    scale_factor=0.5,
    min_size_factor=0.001,
    base_radius=4.5,
    background_color=(0.95, 0.9, 0.85), # Light beige
    initial_circle_color=(0.3, 0.1, 0.1), # Dark brown
    output_mode='svg',
    filename="kececi_fractal_svg-1" # Will be saved in the notebook's directory
)
print("SVG saving finished.")

# --- Example 3: Save as PNG with high DPI ---
print("\nGenerating fractal to save as PNG...")
kf.kececifractals_circle(
    initial_children=4,
    recursive_children=6,
    text="KeÃ§eci Circle Fractal: KeÃ§eci Dairesel FraktalÄ±",
    max_level=6,            # Deeper recursion
    scale_factor=0.5,
    min_size_factor=0.001,  # Smaller details
    output_mode='png',
    filename="kececi_fractal_png-1",
    dpi=400                 # High resolution
)
print("PNG saving finished.")

print("\nGenerating fractal and saving as JPG...")
kf.kececifractals_circle(
    initial_children=5,
    recursive_children=7,
    text="KeÃ§eci Circle Fractal: KeÃ§eci Dairesel FraktalÄ±",
    max_level=5,
    scale_factor=0.5,
    min_size_factor=0.001,
    output_mode='jpg',      # Save as JPG
    filename="kececifractal_jpg-1",
    dpi=300                 # Medium resolution JPG
)
print("JPG saving finished.")

# --- If you modify kececifractals.py and want to reload it ---
# Without restarting the Jupyter kernel:
print("\nReloading the module...")
importlib.reload(kf)
print("Module reloaded. Now you can run the commands again with the updated code.")
kf.kececifractals_circle(output_mode='show', text="KeÃ§eci Circle Fractal: KeÃ§eci Dairesel FraktalÄ±")
```
---


---
![KeÃ§eci Fractals Example](https://github.com/WhiteSymmetry/kececifractals/blob/main/examples/kf-1.png?raw=true)

![KeÃ§eci Fractals Example](https://github.com/WhiteSymmetry/kececifractals/blob/main/examples/kf-2.png?raw=true)

![KeÃ§eci Fractals Example](https://github.com/WhiteSymmetry/kececifractals/blob/main/examples/kf-3.png?raw=true)

![KeÃ§eci Fractals Example](https://github.com/WhiteSymmetry/kececifractals/blob/main/examples/kf-4.png?raw=true)

![KeÃ§eci Fractals Example](https://github.com/WhiteSymmetry/kececifractals/blob/main/examples/kf-5.png?raw=true)

---


---

## License / Lisans

This project is licensed under the MIT License. See the `LICENSE` file for details.

## Citation

If this library was useful to you in your research, please cite us. Following the [GitHub citation standards](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files), here is the recommended citation.

### BibTeX

```bibtex
@misc{kececi_2025_,
  author       = {KeÃ§eci, Mehmet},
  title        = {kececifractals},
  month        = may,
  year         = 2025,
  publisher    = {PyPI, Anaconda, Github, Zenodo},
  version      = {0.1.0},
  doi          = {10.5281/zenodo.},
  url          = {https://doi.org/10.5281/zenodo.},
}

@misc{kececi_2025_,
  author       = {KeÃ§eci, Mehmet},
  title        = {KeÃ§eci Fractals},
  month        = may,
  year         = 2025,
  publisher    = {Zenodo},
  version      = {0.1.0},
  doi          = {10.5281/zenodo.},
  url          = {https://doi.org/10.5281/zenodo.},
}
```

### APA

```
KeÃ§eci, M. (2025). kececifractals (0.1.0). PyPI, Anaconda, GitHub, Zenodo. https://doi.org/10.5281/zenodo.

KeÃ§eci, M. (2025). kececifractals (0.1.0). GitHub, PyPI, Anaconda, Zenodo. https://doi.org/10.5281/zenodo.


```

### Chicago
```
KeÃ§eci, Mehmet. "kececifractals". PyPI, Anaconda, GitHub, Zenodo, 01 May 2025. https://doi.org/10.5281/zenodo.

KeÃ§eci, Mehmet. "kececifractals". GitHub, PyPI, Anaconda, Zenodo, 11 May 2025. https://doi.org/10.5281/zenodo.

```
