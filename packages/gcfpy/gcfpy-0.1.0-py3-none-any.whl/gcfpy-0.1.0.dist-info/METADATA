Metadata-Version: 2.4
Name: gcfpy
Version: 0.1.0
Summary: Graphical Curve Fitting GUI for Python
License: MIT License
        
        Copyright (c) 2025 Jean Seine
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/gcfpy/gcfpy
Project-URL: Documentation, https://gcfpy.github.io/gcfpy/
Keywords: fitting,gui,curve fitting,visualization
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: PyQt5>=5.15
Requires-Dist: numpy>=1.20
Requires-Dist: pandas>=1.3
Requires-Dist: matplotlib>=3.5
Requires-Dist: lmfit>=1.1
Requires-Dist: scipy>=1.8
Requires-Dist: emcee
Requires-Dist: corner
Requires-Dist: tqdm
Requires-Dist: sympy
Requires-Dist: numdifftools
Requires-Dist: pyqt5-sip
Requires-Dist: sip
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: flake8-pyproject; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-qt; extra == "test"
Requires-Dist: coverage; extra == "test"
Provides-Extra: doc
Requires-Dist: mkdocs; extra == "doc"
Requires-Dist: mkdocs-material; extra == "doc"
Requires-Dist: mkdocstrings[python]; extra == "doc"
Requires-Dist: mkdocs-bootswatch; extra == "doc"
Requires-Dist: mkdocs-mermaid2-plugin; extra == "doc"
Requires-Dist: pymdown-extensions; extra == "doc"
Provides-Extra: hdf5
Requires-Dist: xarray; extra == "hdf5"
Dynamic: license-file

# Curve Graphical Curve Fitting

A Python-based graphical interface for fitting experimental data, built on top of `lmfit`, `emcee`, `scipy` and `PyQt5`. It allows interactive visualization, model customization, and multi-method fit analysis (1D and 2D).

---

## Features

* **Multi-tab GUI**: manage several fit sessions in parallel
* **Custom model editor**: write formulas directly, with auto-detected parameters
* **Fitting methods**:

  * Least-squares (`lmfit`)
  * MCMC sampling (`emcee`)
  * Orthogonal Distance Regression (`scipy.odr`)
* **Data types supported**:

  * 1D fit (`y = f(x)`) with optional error bars
  * 2D fit (`z = f(x, y)`) with surface visualization
* **Advanced visualization tools**:

  * Residual plots and confidence intervals
  * 2D surface fit & scatter overlays
  * Component breakdown (for additive models)
  * MCMC diagnostics: chains, corner plots, autocorrelation
* **Fit comparison manager**: store, label and compare multiple models per dataset
* **Data & results export/import** (CSV)

Other tools such as [PyModelFit](https://pythonhosted.org/PyModelFit/gui.html), [curvefitgui](https://pypi.org/project/curvefitgui/), or more general platforms like [Veusz](https://veusz.github.io/) also provide GUI-based fitting capabilities.

---

## Installing

```bash
git clone https://github.com/gcfpy/gcfpy
cd gcfpy
pip install -e .
```

---

## Launch the Application

```bash
gcfpy
```
or
```bash
python -m gcfpy.app.main_window
```
---

## Documentation

Read the [docs](https://gcfpy.github.io/gcfpy/).

It is possible to build the doc locally :
```bash
mkdocs serve
```
The full documentation is written in Markdown using **MkDocs** with the Material theme.

---
## Contributions

We appreciate and welcome contributions. Small improvements or fixes are always appreciated.
