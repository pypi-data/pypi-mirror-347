[project]
name = "fermo_core"
version = "0.6.4"
description = "Data processing/analysis functionality of metabolomics dashboard FERMO"
readme = "README.md"
requires-python = ">=3.11,<3.12"
license-files = { paths = ["LICENSE"] }
authors = [
    { name = "Mitja M. Zdouc", email = "zdoucmm@gmail.com" }
]
keywords = [
    "cheminformatics",
    "metabolomics",
    "genomics"
]
classifiers = [
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Development Status :: 4 - Beta",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry"
]
dependencies = [
    "argparse==1.4.0",
    "coloredlogs==15.0.1",
    "jsonschema==4.19.0",
    "keras==2.15.0",
    "matchms==0.24.0",
    "ms2deepscore==0.5.0",
    "pandas==2.0.3",
    "pydantic==2.5.2",
    "pyteomics==4.6.3",
    "statsmodels==0.14.4"
]

[project.optional-dependencies]
dev = [
    "black~=24.4.2",
    "isort~=5.13.2",
    "pre-commit~=3.4.0",
    "pytest~=7.4.2",
    "pytest-cov~=4.1.0",
    "ruff~=0.4.4",
]


[project.urls]
"Website" = "https://fermo.bioinformatics.nl/"
"Repository" = "https://github.com/fermo-metabolomics/fermo_core"
Documentation = "https://fermo-metabolomics.github.io/fermo_docs/"


[project.scripts]
fermo_core = "fermo_core.main:main_cli"


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.dev]
installer = "uv"
features = [
    "dev"
]

[tool.hatch.envs.test]
dependencies = [
  "pytest~=7.4.2",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.11"]


[tool.hatch.build.targets.sdist]
exclude = [
  "/.idea/",
  "/.github/",
  "/.pytest_cache/",
  "/.ruff_cache/",
  "/.venv",
  "/example_data/",
  "/tests/",
  "/.gitignore",
  "/.pre-commit-config.yaml",
  "/CODE_OF_CONDUCT.md",
  "/CONTRIBUTING.md"
]

[tool.hatch.build.targets.wheel]
packages = ["fermo_core"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
pythonpath = [
  "fermo_core"
]
filterwarnings = [
    'ignore:Please use \`get_index_dtype\` from the \`scipy.sparse\` namespace:DeprecationWarning'
]

[tool.coverage.run]
omit = [
    "tests/*"
]

[tool.coverage.report]
show_missing = true
ignore_errors = true


[tool.coverage.html]
directory = "coverage_html_report"


[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
reverse_relative = true


[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-eradicate/eradicate
    "ERA",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-pie
    "PIE",
    # pygrep
    "PGH",
    # ruff checks
    "RUF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TCH",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
]
ignore = [
    # whitespace-before-punctuation
    "E203",
    # percent-format-invalid-format
    "E501",
    # needless-bool
    "SIM103",
    # if-with-same-arms
    "SIM114",
    # if-expr-with-true-false
    "SIM210",
    # non-pep604-annotation
    "UP007",
    # unnecessary-placeholder
    "PIE790",
    # unnecessary-comprehension
    "C416",
    # unnecessary-comprehension-in-call
    "C419",
    # function-uses-loop-variable
    "B023",
    # unnecessary-literal-within-tuple-cal.
    "C409",
    # unnecessary dict kwargs
    "PIE804",
    # `zip()` without an explicit `strict=` parameter
    "B905"
]