{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "$schema_version": "1.1.0",
  "type": "object",
  "properties": {
    "PeaktableParameters": {
      "type": "object",
      "properties": {
        "filepath": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": [
            "mzmine3",
            "mzmine4"
          ]
        },
        "polarity": {
          "type": "string",
          "enum": [
            "positive",
            "negative"
          ]
        }
      }
    },
    "MsmsParameters": {
      "type": "object",
      "properties": {
        "filepath": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": [
            "mgf"
          ]
        },
        "rel_int_from": {
          "$ref": "#/$defs/r_perc"
        }
      }
    },
    "PhenotypeParameters": {
      "type": "object",
      "properties": {
        "filepath": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": [
            "qualitative",
            "quantitative-percentage",
            "quantitative-concentration"
          ]
        }
      }
    },
    "GroupMetadataParameters": {
      "type": "object",
      "properties": {
        "filepath": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": [
            "fermo"
          ]
        }
      }
    },
    "SpecLibParameters": {
      "type": "object",
      "properties": {
        "dirpath": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": [
            "mgf"
          ]
        }
      }
    },
    "MS2QueryResultsParameters": {
      "type": "object",
      "properties": {
        "filepath": {
          "type": "string"
        },
        "score_cutoff": {
          "$ref": "#/$defs/r_perc"
        }
      }
    },
    "AsResultsParameters": {
      "type": "object",
      "properties": {
        "directory_path": {
          "type": "string"
        },
        "similarity_cutoff": {
          "$ref": "#/$defs/r_perc"
        }
      }
    },
    "AdductAnnotationParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "mass_dev_ppm": {
          "$ref": "#/$defs/pos_float"
        }
      }
    },
    "NeutralLossParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "mass_dev_ppm": {
          "$ref": "#/$defs/pos_float"
        }
      }
    },
    "FragmentAnnParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "mass_dev_ppm": {
          "$ref": "#/$defs/pos_float"
        }
      }
    },
    "SpecSimNetworkCosineParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "msms_min_frag_nr": {
          "$ref": "#/$defs/pos_int"
        },
        "fragment_tol": {
          "$ref": "#/$defs/pos_float"
        },
        "score_cutoff": {
          "$ref": "#/$defs/r_perc"
        },
        "max_nr_links": {
          "$ref": "#/$defs/pos_int"
        }
      }
    },
    "SpecSimNetworkDeepscoreParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "msms_min_frag_nr": {
          "$ref": "#/$defs/pos_int"
        },
        "fragment_tol": {
          "$ref": "#/$defs/pos_float"
        },
        "score_cutoff": {
          "$ref": "#/$defs/r_perc"
        },
        "max_nr_links": {
          "$ref": "#/$defs/pos_int"
        }
      }
    },
    "FeatureFilteringParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "filter_rel_int_range_min": {
          "$ref": "#/$defs/r_perc"
        },
        "filter_rel_int_range_max": {
          "$ref": "#/$defs/r_perc"
        },
        "filter_rel_area_range_min": {
          "$ref": "#/$defs/r_perc"
        },
        "filter_rel_area_range_max": {
          "$ref": "#/$defs/r_perc"
        }
      }
    },
    "BlankAssignmentParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "factor": {
          "$ref": "#/$defs/pos_int"
        },
        "algorithm": {
          "type": "string",
          "enum": [
            "mean",
            "median",
            "maximum"
          ]
        },
        "value": {
          "type": "string",
          "enum": [
            "height",
            "area"
          ]
        }
      }
    },
    "GroupFactAssignmentParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "algorithm": {
          "type": "string",
          "enum": [
            "mean",
            "median",
            "maximum"
          ]
        },
        "value": {
          "type": "string",
          "enum": [
            "height",
            "area"
          ]
        }
      }
    },
    "PhenoQualAssgnParameters": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "factor": { "$ref": "#/$defs/pos_int" },
        "algorithm": {
          "type": "string",
          "enum": [
            "minmax",
            "mean",
            "median"
          ]
        },
        "value": {
          "type": "string",
          "enum": [
            "height",
            "area"
          ]
        }
      }
    },
    "PhenoQuantPercentAssgnParameters": {
      "$ref": "#/$defs/quant_phen"
    },
    "PhenoQuantConcAssgnParameters": {
      "$ref": "#/$defs/quant_phen"
    },
    "SpectralLibMatchingCosineParameters": {
      "$ref": "#/$defs/cosine_match"
    },
    "SpectralLibMatchingDeepscoreParameters": {
      "$ref": "#/$defs/deepscore_match"
    },
    "AsKcbCosineMatchingParameters": {
      "$ref": "#/$defs/cosine_match"
    },
    "AsKcbDeepscoreMatchingParameters": {
      "$ref": "#/$defs/deepscore_match"
    }
  },
  "$defs": {
    "quant_phen": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "sample_avg": {
          "type": "string",
          "enum": ["mean", "median"]
        },
        "value": {
          "type": "string",
          "enum": ["area"]
        },
        "algorithm": {
          "type": "string",
          "enum": ["pearson"]
        },
        "fdr_corr": {
          "type": "string",
          "enum": [
            "bonferroni", "sidak", "holm-sidak", "holm",
            "simes-hochberg", "hommel", "fdr_bh", "fdr_by",
            "fdr_tsbh", "fdr_tsbky"
          ]
        },
        "p_val_cutoff": {
          "$ref": "#/$defs/r_perc"
        },
        "coeff_cutoff": {
          "$ref": "#/$defs/r_perc"
        }
      }
    },
    "cosine_match": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "fragment_tol": { "$ref": "#/$defs/pos_float" },
        "min_nr_matched_peaks": { "$ref": "#/$defs/pos_int" },
        "score_cutoff": { "$ref": "#/$defs/r_perc" },
        "max_precursor_mass_diff": { "$ref": "#/$defs/pos_int" }
      }
    },
    "deepscore_match": {
      "type": "object",
      "properties": {
        "activate_module": { "type": "boolean" },
        "score_cutoff": { "$ref": "#/$defs/r_perc" },
        "max_precursor_mass_diff": { "$ref": "#/$defs/pos_int" }
      }
    },
    "r_perc": {
      "type": "number",
      "minimum": 0.0,
      "maximum": 1.0
    },
    "pos_int": {
      "type": "integer",
      "minimum": 0
    },
    "pos_float": {
      "type": "number",
      "minimum": 0
    }
  }
}