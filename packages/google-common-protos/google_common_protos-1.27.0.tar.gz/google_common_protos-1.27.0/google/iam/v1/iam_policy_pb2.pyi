"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 Google LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

import builtins
import collections.abc
import google.iam.v1.options_pb2
import google.iam.v1.policy_pb2
import google.protobuf.descriptor
import google.protobuf.field_mask_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class SetIamPolicyRequest(google.protobuf.message.Message):
    """Request message for `SetIamPolicy` method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_FIELD_NUMBER: builtins.int
    POLICY_FIELD_NUMBER: builtins.int
    UPDATE_MASK_FIELD_NUMBER: builtins.int
    resource: builtins.str
    """REQUIRED: The resource for which the policy is being specified.
    See the operation documentation for the appropriate value for this field.
    """
    @property
    def policy(self) -> google.iam.v1.policy_pb2.Policy:
        """REQUIRED: The complete policy to be applied to the `resource`. The size of
        the policy is limited to a few 10s of KB. An empty policy is a
        valid policy but certain Cloud Platform services (such as Projects)
        might reject them.
        """

    @property
    def update_mask(self) -> google.protobuf.field_mask_pb2.FieldMask:
        """OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
        the fields in the mask will be modified. If no mask is provided, the
        following default mask is used:

        `paths: "bindings, etag"`
        """

    def __init__(
        self,
        *,
        resource: builtins.str = ...,
        policy: google.iam.v1.policy_pb2.Policy | None = ...,
        update_mask: google.protobuf.field_mask_pb2.FieldMask | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["policy", b"policy", "update_mask", b"update_mask"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["policy", b"policy", "resource", b"resource", "update_mask", b"update_mask"]) -> None: ...

global___SetIamPolicyRequest = SetIamPolicyRequest

@typing.final
class GetIamPolicyRequest(google.protobuf.message.Message):
    """Request message for `GetIamPolicy` method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    resource: builtins.str
    """REQUIRED: The resource for which the policy is being requested.
    See the operation documentation for the appropriate value for this field.
    """
    @property
    def options(self) -> google.iam.v1.options_pb2.GetPolicyOptions:
        """OPTIONAL: A `GetPolicyOptions` object for specifying options to
        `GetIamPolicy`.
        """

    def __init__(
        self,
        *,
        resource: builtins.str = ...,
        options: google.iam.v1.options_pb2.GetPolicyOptions | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["options", b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["options", b"options", "resource", b"resource"]) -> None: ...

global___GetIamPolicyRequest = GetIamPolicyRequest

@typing.final
class TestIamPermissionsRequest(google.protobuf.message.Message):
    """Request message for `TestIamPermissions` method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESOURCE_FIELD_NUMBER: builtins.int
    PERMISSIONS_FIELD_NUMBER: builtins.int
    resource: builtins.str
    """REQUIRED: The resource for which the policy detail is being requested.
    See the operation documentation for the appropriate value for this field.
    """
    @property
    def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The set of permissions to check for the `resource`. Permissions with
        wildcards (such as '*' or 'storage.*') are not allowed. For more
        information see
        [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
        """

    def __init__(
        self,
        *,
        resource: builtins.str = ...,
        permissions: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["permissions", b"permissions", "resource", b"resource"]) -> None: ...

global___TestIamPermissionsRequest = TestIamPermissionsRequest

@typing.final
class TestIamPermissionsResponse(google.protobuf.message.Message):
    """Response message for `TestIamPermissions` method."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PERMISSIONS_FIELD_NUMBER: builtins.int
    @property
    def permissions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """A subset of `TestPermissionsRequest.permissions` that the caller is
        allowed.
        """

    def __init__(
        self,
        *,
        permissions: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["permissions", b"permissions"]) -> None: ...

global___TestIamPermissionsResponse = TestIamPermissionsResponse
