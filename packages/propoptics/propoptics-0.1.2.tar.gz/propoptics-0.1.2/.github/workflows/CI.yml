name: Build wheels

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_wheels:
    strategy:
      matrix:
        os: 
          - macos-latest
          - macos-13
          - windows-latest
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: "Setup Rust"
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: "Build wheel"
        run: |
          uv run maturin build -r

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: target/wheels

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   if: "startsWith(github.ref, 'refs/tags/')"
  #   needs: [ build_wheels ]
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: wheels
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.9
  #     - name: Publish to PyPI
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #       run: |
  #         pip install --upgrade twine
  #         twine upload --skip-existing *
