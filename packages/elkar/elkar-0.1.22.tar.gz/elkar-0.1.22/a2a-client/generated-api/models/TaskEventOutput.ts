/* tslint:disable */
/* eslint-disable */
/**
 * elkar-app
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TaskEventOutput
 */
export interface TaskEventOutput {
    /**
     * 
     * @type {Date}
     * @memberof TaskEventOutput
     */
    createdAt: Date;
    /**
     * 
     * @type {any}
     * @memberof TaskEventOutput
     */
    eventData: any | null;
    /**
     * 
     * @type {string}
     * @memberof TaskEventOutput
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof TaskEventOutput
     */
    taskId: string;
    /**
     * 
     * @type {Date}
     * @memberof TaskEventOutput
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the TaskEventOutput interface.
 */
export function instanceOfTaskEventOutput(value: object): value is TaskEventOutput {
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('eventData' in value) || value['eventData'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('taskId' in value) || value['taskId'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function TaskEventOutputFromJSON(json: any): TaskEventOutput {
    return TaskEventOutputFromJSONTyped(json, false);
}

export function TaskEventOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskEventOutput {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['created_at'])),
        'eventData': json['event_data'],
        'id': json['id'],
        'taskId': json['task_id'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function TaskEventOutputToJSON(json: any): TaskEventOutput {
    return TaskEventOutputToJSONTyped(json, false);
}

export function TaskEventOutputToJSONTyped(value?: TaskEventOutput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': ((value['createdAt']).toISOString()),
        'event_data': value['eventData'],
        'id': value['id'],
        'task_id': value['taskId'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}

