name: Publish Python 🐍 distribution 📦 to PyPI 

on: push

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]


    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install ${{ matrix.python-version }}
    - name: Build a binary wheel and a source tarball
      run: uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/AMS_BP  
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # mandatory for making GitHub Releases
      id-token: write  # mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Generate Changelog
      id: changelog
      run: |
        git fetch --tags
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
        CURRENT_TAG=$(git describe --tags --abbrev=0 HEAD)
        echo "Previous tag: $PREV_TAG"
        echo "Current tag: $CURRENT_TAG"
        echo "## Changes" > changelog.txt
        echo "" >> changelog.txt
        git log $PREV_TAG..$CURRENT_TAG --pretty=format:"- %s (%h)" >> changelog.txt
        echo 'changelog<<EOF' >> $GITHUB_ENV
        cat changelog.txt >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        changelog: ${{ env.changelog }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes "${changelog}"

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
