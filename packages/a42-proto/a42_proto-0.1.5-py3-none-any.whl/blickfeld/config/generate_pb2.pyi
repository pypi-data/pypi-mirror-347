"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Generate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Targets(_Targets, metaclass=_TargetsEnumTypeWrapper):
        """*
        Internal use only
        """
        pass
    class _Targets:
        V = typing.NewType('V', builtins.int)
    class _TargetsEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Targets.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        DEFAULT = Generate.Targets.V(0)
        PROTO_HASH = Generate.Targets.V(1)
        MATLAB_BUS = Generate.Targets.V(2)
        CSTRUCT = Generate.Targets.V(3)

    DEFAULT = Generate.Targets.V(0)
    PROTO_HASH = Generate.Targets.V(1)
    MATLAB_BUS = Generate.Targets.V(2)
    CSTRUCT = Generate.Targets.V(3)

    TARGETS_FIELD_NUMBER: builtins.int
    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___Generate.Targets.V]:
        """Internal generate targets"""
        pass
    def __init__(self,
        *,
        targets : typing.Optional[typing.Iterable[global___Generate.Targets.V]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"targets",b"targets"]) -> None: ...
global___Generate = Generate
