"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Temperature(google.protobuf.message.Message):
    """*
    This section describes the temperature of the hardware modules in the device.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Sensor(_Sensor, metaclass=_SensorEnumTypeWrapper):
        """*
        This section describes the hardware modules in the device.
        """
        pass
    class _Sensor:
        V = typing.NewType('V', builtins.int)
    class _SensorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Sensor.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        UNKNOWN = Temperature.Sensor.V(0)
        LDM = Temperature.Sensor.V(1)
        """Laser and detector module"""

        ETHERNET = Temperature.Sensor.V(2)
        """Ethernet adapter"""

        MSB = Temperature.Sensor.V(3)
        """Mixed signal board"""

        PL = Temperature.Sensor.V(4)
        """Programmable logic"""

        PS = Temperature.Sensor.V(5)
        """Processing system"""

        SCANNER_SMALL = Temperature.Sensor.V(6)
        """Vertical mirror"""

        SCANNER_BIG = Temperature.Sensor.V(7)
        """Horizontal mirror"""


    UNKNOWN = Temperature.Sensor.V(0)
    LDM = Temperature.Sensor.V(1)
    """Laser and detector module"""

    ETHERNET = Temperature.Sensor.V(2)
    """Ethernet adapter"""

    MSB = Temperature.Sensor.V(3)
    """Mixed signal board"""

    PL = Temperature.Sensor.V(4)
    """Programmable logic"""

    PS = Temperature.Sensor.V(5)
    """Processing system"""

    SCANNER_SMALL = Temperature.Sensor.V(6)
    """Vertical mirror"""

    SCANNER_BIG = Temperature.Sensor.V(7)
    """Horizontal mirror"""


    SENSOR_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    FAILED_REASON_FIELD_NUMBER: builtins.int
    sensor: global___Temperature.Sensor.V = ...
    """Refer to [Temperature.Sensor](#blickfeld.protocol.status.Temperature.Sensor)"""

    value: builtins.float = ...
    """Unit: [degrees Celsius] â€“ temperature value of the module."""

    failed_reason: typing.Text = ...
    """Error reason why the temperature cannot be read out."""

    def __init__(self,
        *,
        sensor : typing.Optional[global___Temperature.Sensor.V] = ...,
        value : typing.Optional[builtins.float] = ...,
        failed_reason : typing.Optional[typing.Text] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"data",b"data",u"failed_reason",b"failed_reason",u"sensor",b"sensor",u"value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"data",b"data",u"failed_reason",b"failed_reason",u"sensor",b"sensor",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"data",b"data"]) -> typing.Optional[typing_extensions.Literal["value","failed_reason"]]: ...
global___Temperature = Temperature
