# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bf_proto/percept/data/state.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='bf_proto/percept/data/state.proto',
  package='blickfeld.percept.data',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n!bf_proto/percept/data/state.proto\x12\x16\x62lickfeld.percept.data\x1a\x1fgoogle/protobuf/timestamp.proto\"\x88\x07\n\x05State\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1b\n\x13zone_algorithm_uuid\x18\x02 \x01(\t\x12\x38\n\x07\x63ounter\x18\x03 \x01(\x0b\x32%.blickfeld.percept.data.State.CounterH\x00\x12O\n\x13\x61\x63\x63umulated_counter\x18\x04 \x01(\x0b\x32\x30.blickfeld.percept.data.State.AccumulatedCounterH\x00\x12:\n\x08security\x18\x05 \x01(\x0b\x32&.blickfeld.percept.data.State.SecurityH\x00\x12<\n\toccupancy\x18\x06 \x01(\x0b\x32\'.blickfeld.percept.data.State.OccupancyH\x00\x12\x36\n\x06volume\x18\x07 \x01(\x0b\x32$.blickfeld.percept.data.State.VolumeH\x00\x1a\x97\x01\n\x07\x43ounter\x12\r\n\x05\x63ount\x18\x01 \x01(\r\x12\x38\n\x04type\x18\x02 \x01(\x0e\x32*.blickfeld.percept.data.State.Counter.Type\x12\x14\n\x0cobject_uuids\x18\x03 \x03(\t\"-\n\x04Type\x12\x0b\n\x07INBOUND\x10\x00\x12\x0c\n\x08OUTBOUND\x10\x01\x12\n\n\x06INSIDE\x10\x02\x1a\xbf\x01\n\x12\x41\x63\x63umulatedCounter\x12\r\n\x05\x63ount\x18\x01 \x01(\r\x12\x43\n\x04type\x18\x02 \x01(\x0e\x32\x35.blickfeld.percept.data.State.AccumulatedCounter.Type\x12\x32\n\x0estart_of_count\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"!\n\x04Type\x12\x0b\n\x07INBOUND\x10\x00\x12\x0c\n\x08OUTBOUND\x10\x01\x1a\x36\n\x08Security\x12\r\n\x05\x61larm\x18\x01 \x01(\x08\x12\x1b\n\x13num_detected_points\x18\x02 \x01(\r\x1a:\n\tOccupancy\x12\x10\n\x08occupied\x18\x01 \x01(\x08\x12\x1b\n\x13num_detected_points\x18\x02 \x01(\r\x1a\x18\n\x06Volume\x12\x0e\n\x06volume\x18\x01 \x01(\x02\x42\x0c\n\nstate_typeb\x06proto3'
  ,
  dependencies=[google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])



_STATE_COUNTER_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='blickfeld.percept.data.State.Counter.Type',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INBOUND', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OUTBOUND', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INSIDE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=604,
  serialized_end=649,
)
_sym_db.RegisterEnumDescriptor(_STATE_COUNTER_TYPE)

_STATE_ACCUMULATEDCOUNTER_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='blickfeld.percept.data.State.AccumulatedCounter.Type',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INBOUND', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OUTBOUND', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=604,
  serialized_end=637,
)
_sym_db.RegisterEnumDescriptor(_STATE_ACCUMULATEDCOUNTER_TYPE)


_STATE_COUNTER = _descriptor.Descriptor(
  name='Counter',
  full_name='blickfeld.percept.data.State.Counter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='blickfeld.percept.data.State.Counter.count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='blickfeld.percept.data.State.Counter.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='object_uuids', full_name='blickfeld.percept.data.State.Counter.object_uuids', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STATE_COUNTER_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=498,
  serialized_end=649,
)

_STATE_ACCUMULATEDCOUNTER = _descriptor.Descriptor(
  name='AccumulatedCounter',
  full_name='blickfeld.percept.data.State.AccumulatedCounter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='blickfeld.percept.data.State.AccumulatedCounter.count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='blickfeld.percept.data.State.AccumulatedCounter.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start_of_count', full_name='blickfeld.percept.data.State.AccumulatedCounter.start_of_count', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _STATE_ACCUMULATEDCOUNTER_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=652,
  serialized_end=843,
)

_STATE_SECURITY = _descriptor.Descriptor(
  name='Security',
  full_name='blickfeld.percept.data.State.Security',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='alarm', full_name='blickfeld.percept.data.State.Security.alarm', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_detected_points', full_name='blickfeld.percept.data.State.Security.num_detected_points', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=845,
  serialized_end=899,
)

_STATE_OCCUPANCY = _descriptor.Descriptor(
  name='Occupancy',
  full_name='blickfeld.percept.data.State.Occupancy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='occupied', full_name='blickfeld.percept.data.State.Occupancy.occupied', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_detected_points', full_name='blickfeld.percept.data.State.Occupancy.num_detected_points', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=901,
  serialized_end=959,
)

_STATE_VOLUME = _descriptor.Descriptor(
  name='Volume',
  full_name='blickfeld.percept.data.State.Volume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume', full_name='blickfeld.percept.data.State.Volume.volume', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=961,
  serialized_end=985,
)

_STATE = _descriptor.Descriptor(
  name='State',
  full_name='blickfeld.percept.data.State',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='blickfeld.percept.data.State.timestamp', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='zone_algorithm_uuid', full_name='blickfeld.percept.data.State.zone_algorithm_uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='counter', full_name='blickfeld.percept.data.State.counter', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='accumulated_counter', full_name='blickfeld.percept.data.State.accumulated_counter', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='security', full_name='blickfeld.percept.data.State.security', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='occupancy', full_name='blickfeld.percept.data.State.occupancy', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='volume', full_name='blickfeld.percept.data.State.volume', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_STATE_COUNTER, _STATE_ACCUMULATEDCOUNTER, _STATE_SECURITY, _STATE_OCCUPANCY, _STATE_VOLUME, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='state_type', full_name='blickfeld.percept.data.State.state_type',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=95,
  serialized_end=999,
)

_STATE_COUNTER.fields_by_name['type'].enum_type = _STATE_COUNTER_TYPE
_STATE_COUNTER.containing_type = _STATE
_STATE_COUNTER_TYPE.containing_type = _STATE_COUNTER
_STATE_ACCUMULATEDCOUNTER.fields_by_name['type'].enum_type = _STATE_ACCUMULATEDCOUNTER_TYPE
_STATE_ACCUMULATEDCOUNTER.fields_by_name['start_of_count'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STATE_ACCUMULATEDCOUNTER.containing_type = _STATE
_STATE_ACCUMULATEDCOUNTER_TYPE.containing_type = _STATE_ACCUMULATEDCOUNTER
_STATE_SECURITY.containing_type = _STATE
_STATE_OCCUPANCY.containing_type = _STATE
_STATE_VOLUME.containing_type = _STATE
_STATE.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_STATE.fields_by_name['counter'].message_type = _STATE_COUNTER
_STATE.fields_by_name['accumulated_counter'].message_type = _STATE_ACCUMULATEDCOUNTER
_STATE.fields_by_name['security'].message_type = _STATE_SECURITY
_STATE.fields_by_name['occupancy'].message_type = _STATE_OCCUPANCY
_STATE.fields_by_name['volume'].message_type = _STATE_VOLUME
_STATE.oneofs_by_name['state_type'].fields.append(
  _STATE.fields_by_name['counter'])
_STATE.fields_by_name['counter'].containing_oneof = _STATE.oneofs_by_name['state_type']
_STATE.oneofs_by_name['state_type'].fields.append(
  _STATE.fields_by_name['accumulated_counter'])
_STATE.fields_by_name['accumulated_counter'].containing_oneof = _STATE.oneofs_by_name['state_type']
_STATE.oneofs_by_name['state_type'].fields.append(
  _STATE.fields_by_name['security'])
_STATE.fields_by_name['security'].containing_oneof = _STATE.oneofs_by_name['state_type']
_STATE.oneofs_by_name['state_type'].fields.append(
  _STATE.fields_by_name['occupancy'])
_STATE.fields_by_name['occupancy'].containing_oneof = _STATE.oneofs_by_name['state_type']
_STATE.oneofs_by_name['state_type'].fields.append(
  _STATE.fields_by_name['volume'])
_STATE.fields_by_name['volume'].containing_oneof = _STATE.oneofs_by_name['state_type']
DESCRIPTOR.message_types_by_name['State'] = _STATE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), {

  'Counter' : _reflection.GeneratedProtocolMessageType('Counter', (_message.Message,), {
    'DESCRIPTOR' : _STATE_COUNTER,
    '__module__' : 'bf_proto.percept.data.state_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.percept.data.State.Counter)
    })
  ,

  'AccumulatedCounter' : _reflection.GeneratedProtocolMessageType('AccumulatedCounter', (_message.Message,), {
    'DESCRIPTOR' : _STATE_ACCUMULATEDCOUNTER,
    '__module__' : 'bf_proto.percept.data.state_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.percept.data.State.AccumulatedCounter)
    })
  ,

  'Security' : _reflection.GeneratedProtocolMessageType('Security', (_message.Message,), {
    'DESCRIPTOR' : _STATE_SECURITY,
    '__module__' : 'bf_proto.percept.data.state_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.percept.data.State.Security)
    })
  ,

  'Occupancy' : _reflection.GeneratedProtocolMessageType('Occupancy', (_message.Message,), {
    'DESCRIPTOR' : _STATE_OCCUPANCY,
    '__module__' : 'bf_proto.percept.data.state_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.percept.data.State.Occupancy)
    })
  ,

  'Volume' : _reflection.GeneratedProtocolMessageType('Volume', (_message.Message,), {
    'DESCRIPTOR' : _STATE_VOLUME,
    '__module__' : 'bf_proto.percept.data.state_pb2'
    # @@protoc_insertion_point(class_scope:blickfeld.percept.data.State.Volume)
    })
  ,
  'DESCRIPTOR' : _STATE,
  '__module__' : 'bf_proto.percept.data.state_pb2'
  # @@protoc_insertion_point(class_scope:blickfeld.percept.data.State)
  })
_sym_db.RegisterMessage(State)
_sym_db.RegisterMessage(State.Counter)
_sym_db.RegisterMessage(State.AccumulatedCounter)
_sym_db.RegisterMessage(State.Security)
_sym_db.RegisterMessage(State.Occupancy)
_sym_db.RegisterMessage(State.Volume)


# @@protoc_insertion_point(module_scope)
