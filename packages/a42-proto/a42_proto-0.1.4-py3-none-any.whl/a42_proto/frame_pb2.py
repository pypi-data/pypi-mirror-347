# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frame.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from blickfeld.data import frame_pb2 as blickfeld_dot_data_dot_frame__pb2
from bf_proto.percept.output import output_pb2 as bf__proto_dot_percept_dot_output_dot_output__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='frame.proto',
  package='sensors',
  syntax='proto2',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0b\x66rame.proto\x12\x07sensors\x1a\x1a\x62lickfeld/data/frame.proto\x1a$bf_proto/percept/output/output.proto\"\x1b\n\tTransform\x12\x0e\n\x06matrix\x18\x01 \x03(\x01\"\xb3\x01\n\x10LaserCalibration\x12%\n\textrinsic\x18\x01 \x01(\x0b\x32\x12.sensors.Transform\x12\x14\n\x0cvertical_fov\x18\x02 \x01(\x01\x12\x16\n\x0ehorizontal_fov\x18\x03 \x01(\x01\x12 \n\x18horizontal_angle_spacing\x18\x04 \x01(\x01\x12\x12\n\nframe_mode\x18\x05 \x01(\t\x12\x14\n\x0cscan_pattern\x18\x06 \x01(\t\"\x8d\x01\n\x05Laser\x12&\n\nlaser_name\x18\x01 \x02(\x0e\x32\x12.sensors.LaserName\x12,\n\x04\x64\x61ta\x18\x02 \x02(\x0b\x32\x1e.blickfeld.protocol.data.Frame\x12.\n\x0b\x63\x61libration\x18\x03 \x01(\x0b\x32\x19.sensors.LaserCalibration\"x\n\x05\x46rame\x12\x14\n\x0ctimestamp_ns\x18\x01 \x02(\x04\x12\x1e\n\x06lasers\x18\x02 \x03(\x0b\x32\x0e.sensors.Laser\x12\x39\n\x0bobject_list\x18\x03 \x01(\x0b\x32$.blickfeld.percept.output.ObjectList*D\n\tLaserName\x12\x16\n\x12LASER_NAME_UNKNOWN\x10\x00\x12\t\n\x05\x46RONT\x10\x01\x12\n\n\x06MIDDLE\x10\x02\x12\x08\n\x04\x42\x41\x43K\x10\x03'
  ,
  dependencies=[blickfeld_dot_data_dot_frame__pb2.DESCRIPTOR,bf__proto_dot_percept_dot_output_dot_output__pb2.DESCRIPTOR,])

_LASERNAME = _descriptor.EnumDescriptor(
  name='LaserName',
  full_name='sensors.LaserName',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LASER_NAME_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='FRONT', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MIDDLE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BACK', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=567,
  serialized_end=635,
)
_sym_db.RegisterEnumDescriptor(_LASERNAME)

LaserName = enum_type_wrapper.EnumTypeWrapper(_LASERNAME)
LASER_NAME_UNKNOWN = 0
FRONT = 1
MIDDLE = 2
BACK = 3



_TRANSFORM = _descriptor.Descriptor(
  name='Transform',
  full_name='sensors.Transform',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='matrix', full_name='sensors.Transform.matrix', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=117,
)


_LASERCALIBRATION = _descriptor.Descriptor(
  name='LaserCalibration',
  full_name='sensors.LaserCalibration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='extrinsic', full_name='sensors.LaserCalibration.extrinsic', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='vertical_fov', full_name='sensors.LaserCalibration.vertical_fov', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='horizontal_fov', full_name='sensors.LaserCalibration.horizontal_fov', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='horizontal_angle_spacing', full_name='sensors.LaserCalibration.horizontal_angle_spacing', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='frame_mode', full_name='sensors.LaserCalibration.frame_mode', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='scan_pattern', full_name='sensors.LaserCalibration.scan_pattern', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=299,
)


_LASER = _descriptor.Descriptor(
  name='Laser',
  full_name='sensors.Laser',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='laser_name', full_name='sensors.Laser.laser_name', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='data', full_name='sensors.Laser.data', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='calibration', full_name='sensors.Laser.calibration', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=302,
  serialized_end=443,
)


_FRAME = _descriptor.Descriptor(
  name='Frame',
  full_name='sensors.Frame',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp_ns', full_name='sensors.Frame.timestamp_ns', index=0,
      number=1, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lasers', full_name='sensors.Frame.lasers', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='object_list', full_name='sensors.Frame.object_list', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=445,
  serialized_end=565,
)

_LASERCALIBRATION.fields_by_name['extrinsic'].message_type = _TRANSFORM
_LASER.fields_by_name['laser_name'].enum_type = _LASERNAME
_LASER.fields_by_name['data'].message_type = blickfeld_dot_data_dot_frame__pb2._FRAME
_LASER.fields_by_name['calibration'].message_type = _LASERCALIBRATION
_FRAME.fields_by_name['lasers'].message_type = _LASER
_FRAME.fields_by_name['object_list'].message_type = bf__proto_dot_percept_dot_output_dot_output__pb2._OBJECTLIST
DESCRIPTOR.message_types_by_name['Transform'] = _TRANSFORM
DESCRIPTOR.message_types_by_name['LaserCalibration'] = _LASERCALIBRATION
DESCRIPTOR.message_types_by_name['Laser'] = _LASER
DESCRIPTOR.message_types_by_name['Frame'] = _FRAME
DESCRIPTOR.enum_types_by_name['LaserName'] = _LASERNAME
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Transform = _reflection.GeneratedProtocolMessageType('Transform', (_message.Message,), {
  'DESCRIPTOR' : _TRANSFORM,
  '__module__' : 'frame_pb2'
  # @@protoc_insertion_point(class_scope:sensors.Transform)
  })
_sym_db.RegisterMessage(Transform)

LaserCalibration = _reflection.GeneratedProtocolMessageType('LaserCalibration', (_message.Message,), {
  'DESCRIPTOR' : _LASERCALIBRATION,
  '__module__' : 'frame_pb2'
  # @@protoc_insertion_point(class_scope:sensors.LaserCalibration)
  })
_sym_db.RegisterMessage(LaserCalibration)

Laser = _reflection.GeneratedProtocolMessageType('Laser', (_message.Message,), {
  'DESCRIPTOR' : _LASER,
  '__module__' : 'frame_pb2'
  # @@protoc_insertion_point(class_scope:sensors.Laser)
  })
_sym_db.RegisterMessage(Laser)

Frame = _reflection.GeneratedProtocolMessageType('Frame', (_message.Message,), {
  'DESCRIPTOR' : _FRAME,
  '__module__' : 'frame_pb2'
  # @@protoc_insertion_point(class_scope:sensors.Frame)
  })
_sym_db.RegisterMessage(Frame)


# @@protoc_insertion_point(module_scope)
