[tool.poetry]
name = "sn-graph"
version = "0.3.0"
description = "A Python implementation of SN-Graph algorithm."
authors = ["Tomasz Prytula <tomasz.prytula@alexandra.dk>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/alexandrainst/sn-graph"
homepage = "https://alexandrainst.github.io/sn-graph"

[tool.poetry.dependencies]
python = "^3.11"
numpy = "2.0"
matplotlib = "^3.9.3"
scikit-image = "^0.24.0"
scikit-fmm = "^2024.9.16"
trimesh = "^4.6.8"


[tool.poetry.group.dev.dependencies]
jupyter = "^1.1.1"
ipykernel = "^6.29.5"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
black = "^24.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"
pylint = "^2.17.4"
pre-commit = "^4.1.0"
ruff = "^0.9.4"
scikit-learn = "^1.6.1"
pandas = "^2.2.3"
pillow = "^11.1.0"
torch = "^2.6.0"
torch-geometric = "^2.6.1"
pooch = "^1.8.2"
trimesh = "^4.6.4"
rtree = "^1.4.0"
coverage-badge = "^1.1.2"
mkdocs = "^1.6.1"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
mkdocs-material = "^9.6.12"
mknotebooks = "^0.8.0"



[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional =true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "R0903",  # too-few-public-methods
    "C0103",  # invalid-name
]

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=term-missing"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true






[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
