[project]
name = "p-cast"
version = "1.0.0"
description = "Cast audio from pipewire to chromecast device."
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Multimedia :: Sound/Audio :: Capture/Recording",
    "Topic :: Multimedia :: Sound/Audio :: Players",
    "Topic :: Utilities",
    "Environment :: Console",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
]
requires-python = ">=3.12"
dependencies = [
    "granian>=2.2.5",
    "pulsectl-asyncio>=1.2.2",
    "pychromecast>=14.0.7",
    "socketify>=0.0.31",
    "starlette>=0.46.2",
    "typed-ffmpeg>=2.7.3",
    "uvicorn>=0.34.2",
    "uvloop>=0.21.0",
]

[project.scripts]
p-cast = "p_cast.__main__:main"

[tool.pyright]
typeCheckingMode = "standard"
reportUnusedCallResult = false
reportUnknownMemberType = false

[tool.mypy]
overrides = [
    { module = "pulsectl.*", ignore_missing_imports = true },
    { module = "pulsectl_asyncio.*", ignore_missing_imports = true },
]
python_version = "3.13"

[dependency-groups]
release = ["python-semantic-release>=9.21.1"]
types = ["mypy>=1.15.0"]

[tool.semantic_release]
assets = []
build_command = "uv build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "/home/genesis/dev/chromecast/p-cast"
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = ""
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
allowed_tags = [
    "feat",
    "fix",
    "perf",
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
