# coding: utf-8

"""
    PredictionMarket

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from olab_open_api.configuration import Configuration


class ViewMarketOrderBookResp(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'asks': 'list[list[str]]',
        'bids': 'list[list[str]]',
        'symbol': 'str',
        'ts': 'int'
    }

    attribute_map = {
        'asks': 'asks',
        'bids': 'bids',
        'symbol': 'symbol',
        'ts': 'ts'
    }

    def __init__(self, asks=None, bids=None, symbol=None, ts=None, local_vars_configuration=None):  # noqa: E501
        """ViewMarketOrderBookResp - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._asks = None
        self._bids = None
        self._symbol = None
        self._ts = None
        self.discriminator = None

        if asks is not None:
            self.asks = asks
        if bids is not None:
            self.bids = bids
        if symbol is not None:
            self.symbol = symbol
        if ts is not None:
            self.ts = ts

    @property
    def asks(self):
        """Gets the asks of this ViewMarketOrderBookResp.  # noqa: E501

        卖盘,[price(成交价), amount(成交量)，userid(用户ID),orderid(订单ID)], 按price升序  # noqa: E501

        :return: The asks of this ViewMarketOrderBookResp.  # noqa: E501
        :rtype: list[list[str]]
        """
        return self._asks

    @asks.setter
    def asks(self, asks):
        """Sets the asks of this ViewMarketOrderBookResp.

        卖盘,[price(成交价), amount(成交量)，userid(用户ID),orderid(订单ID)], 按price升序  # noqa: E501

        :param asks: The asks of this ViewMarketOrderBookResp.  # noqa: E501
        :type: list[list[str]]
        """

        self._asks = asks

    @property
    def bids(self):
        """Gets the bids of this ViewMarketOrderBookResp.  # noqa: E501

        买盘,[price(成交价), amount(成交量)，userid(用户ID),orderid(订单ID)], 按price降序  # noqa: E501

        :return: The bids of this ViewMarketOrderBookResp.  # noqa: E501
        :rtype: list[list[str]]
        """
        return self._bids

    @bids.setter
    def bids(self, bids):
        """Sets the bids of this ViewMarketOrderBookResp.

        买盘,[price(成交价), amount(成交量)，userid(用户ID),orderid(订单ID)], 按price降序  # noqa: E501

        :param bids: The bids of this ViewMarketOrderBookResp.  # noqa: E501
        :type: list[list[str]]
        """

        self._bids = bids

    @property
    def symbol(self):
        """Gets the symbol of this ViewMarketOrderBookResp.  # noqa: E501

        positionId  # noqa: E501

        :return: The symbol of this ViewMarketOrderBookResp.  # noqa: E501
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this ViewMarketOrderBookResp.

        positionId  # noqa: E501

        :param symbol: The symbol of this ViewMarketOrderBookResp.  # noqa: E501
        :type: str
        """

        self._symbol = symbol

    @property
    def ts(self):
        """Gets the ts of this ViewMarketOrderBookResp.  # noqa: E501

        数据获取时间  # noqa: E501

        :return: The ts of this ViewMarketOrderBookResp.  # noqa: E501
        :rtype: int
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this ViewMarketOrderBookResp.

        数据获取时间  # noqa: E501

        :param ts: The ts of this ViewMarketOrderBookResp.  # noqa: E501
        :type: int
        """

        self._ts = ts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ViewMarketOrderBookResp):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ViewMarketOrderBookResp):
            return True

        return self.to_dict() != other.to_dict()
