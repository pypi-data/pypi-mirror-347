[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "bernn"
version = "0.1.2"
description = "BERNN: A deep learning framework for MS/MS data analysis"
authors = [
    {name = "Simon P. Pelletier", email = "simonjpelletier@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "mass spectrometry",
    "deep learning",
    "neural networks",
    "bioinformatics",
    "proteomics",
]
dependencies = [
    # These will be read from requirements.txt by setup.py
]

[project.urls]
Homepage = "https://github.com/spell00/BERNN_MSMS"
Documentation = "https://github.com/spell00/BERNN_MSMS#readme"
Repository = "https://github.com/spell00/BERNN_MSMS"
Issues = "https://github.com/spell00/BERNN_MSMS/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
]

[tool.setuptools]
packages = {find = {where = ["."], exclude = [
    "tests*",
    "notebooks*",
    "data*",
    "logs*",
    "tmp*",
    "temp*",
    "*.tests",
    "*.test",
    "*.egg-info",
    "*.egg",
    "build",
    "dist",
    ".git",
    ".github",
    ".vscode",
    "__pycache__",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".Python",
    "env",
    "venv",
    ".env",
    ".venv",
    "pip-log.txt",
    "pip-delete-this-directory.txt",
    ".tox",
    ".coverage",
    ".coverage.*",
    "coverage.xml",
    "*.cover",
    "*.log",
    ".pytest_cache",
    ".mypy_cache",
    ".hypothesis",
    ".idea",
    ".DS_Store"
]}}
package-dir = {"" = "."}

[tool.setuptools_scm]
write_to = "bernn/_version.py"

[tool.setuptools.dynamic]
version = {attr = "bernn.__version__"}

[tool.setuptools.package-data]
"bernn" = ["*.py", "*.json", "*.yaml", "*.yml"]